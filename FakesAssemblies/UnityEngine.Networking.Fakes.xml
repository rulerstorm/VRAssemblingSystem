<?xml version="1.0"?>
<doc>
    <assembly>
        <name>UnityEngine.Networking.Fakes</name>
    </assembly>
    <members>
        <member name="T:Microsoft.QualityTools.Testing.Fakes.Delegates.UnityEngineNetworkingDelegates">
            <summary>包含用于 UnityEngine.Networking 的存根和填充码的自定义委托</summary>
        </member>
        <member name="T:UnityEngine.Networking.Fakes.ShimChannels">
            <summary>UnityEngine.Networking.Channels 的填充码类型</summary>
        </member>
        <member name="M:UnityEngine.Networking.Fakes.ShimChannels.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:UnityEngine.Networking.Fakes.ShimChannels.#ctor(UnityEngine.Networking.Channels)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="T:UnityEngine.Networking.Fakes.ShimChannels.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="M:UnityEngine.Networking.Fakes.ShimChannels.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:UnityEngine.Networking.Fakes.ShimChannels.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:UnityEngine.Networking.Fakes.ShimChannels.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:UnityEngine.Networking.Fakes.ShimChannels.Constructor">
            <summary>设置 Channels.Channels() 的 填充码</summary>
        </member>
        <member name="T:UnityEngine.Networking.Fakes.ShimClientAttribute">
            <summary>UnityEngine.Networking.ClientAttribute 的填充码类型</summary>
        </member>
        <member name="M:UnityEngine.Networking.Fakes.ShimClientAttribute.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:UnityEngine.Networking.Fakes.ShimClientAttribute.#ctor(UnityEngine.Networking.ClientAttribute)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="T:UnityEngine.Networking.Fakes.ShimClientAttribute.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="M:UnityEngine.Networking.Fakes.ShimClientAttribute.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:UnityEngine.Networking.Fakes.ShimClientAttribute.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:UnityEngine.Networking.Fakes.ShimClientAttribute.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:UnityEngine.Networking.Fakes.ShimClientAttribute.Constructor">
            <summary>设置 ClientAttribute.ClientAttribute() 的 填充码</summary>
        </member>
        <member name="T:UnityEngine.Networking.Fakes.ShimClientCallbackAttribute">
            <summary>UnityEngine.Networking.ClientCallbackAttribute 的填充码类型</summary>
        </member>
        <member name="M:UnityEngine.Networking.Fakes.ShimClientCallbackAttribute.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:UnityEngine.Networking.Fakes.ShimClientCallbackAttribute.#ctor(UnityEngine.Networking.ClientCallbackAttribute)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="T:UnityEngine.Networking.Fakes.ShimClientCallbackAttribute.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="M:UnityEngine.Networking.Fakes.ShimClientCallbackAttribute.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:UnityEngine.Networking.Fakes.ShimClientCallbackAttribute.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:UnityEngine.Networking.Fakes.ShimClientCallbackAttribute.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:UnityEngine.Networking.Fakes.ShimClientCallbackAttribute.Constructor">
            <summary>设置 ClientCallbackAttribute.ClientCallbackAttribute() 的 填充码</summary>
        </member>
        <member name="T:UnityEngine.Networking.Fakes.ShimClientRpcAttribute">
            <summary>UnityEngine.Networking.ClientRpcAttribute 的填充码类型</summary>
        </member>
        <member name="M:UnityEngine.Networking.Fakes.ShimClientRpcAttribute.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:UnityEngine.Networking.Fakes.ShimClientRpcAttribute.#ctor(UnityEngine.Networking.ClientRpcAttribute)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="T:UnityEngine.Networking.Fakes.ShimClientRpcAttribute.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="M:UnityEngine.Networking.Fakes.ShimClientRpcAttribute.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:UnityEngine.Networking.Fakes.ShimClientRpcAttribute.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:UnityEngine.Networking.Fakes.ShimClientRpcAttribute.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:UnityEngine.Networking.Fakes.ShimClientRpcAttribute.Constructor">
            <summary>设置 ClientRpcAttribute.ClientRpcAttribute() 的 填充码</summary>
        </member>
        <member name="T:UnityEngine.Networking.Fakes.ShimClientScene">
            <summary>UnityEngine.Networking.ClientScene 的填充码类型</summary>
        </member>
        <member name="M:UnityEngine.Networking.Fakes.ShimClientScene.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:UnityEngine.Networking.Fakes.ShimClientScene.#ctor(UnityEngine.Networking.ClientScene)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="P:UnityEngine.Networking.Fakes.ShimClientScene.AddPlayerInt16">
            <summary>设置 ClientScene.AddPlayer(Int16 playerControllerId) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Networking.Fakes.ShimClientScene.AddPlayerNetworkConnectionInt16">
            <summary>设置 ClientScene.AddPlayer(NetworkConnection readyConn, Int16 playerControllerId) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Networking.Fakes.ShimClientScene.AddPlayerNetworkConnectionInt16MessageBase">
            <summary>设置 ClientScene.AddPlayer(NetworkConnection readyConn, Int16 playerControllerId, MessageBase extraMessage) 的 填充码</summary>
        </member>
        <member name="T:UnityEngine.Networking.Fakes.ShimClientScene.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:UnityEngine.Networking.Fakes.ShimClientScene.ApplySpawnPayloadNetworkIdentityVector3ByteArrayNetworkInstanceIdGameObject">
            <summary>设置 ClientScene.ApplySpawnPayload(NetworkIdentity uv, Vector3 position, Byte[] payload, NetworkInstanceId netId, GameObject newGameObject) 的 填充码</summary>
        </member>
        <member name="M:UnityEngine.Networking.Fakes.ShimClientScene.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:UnityEngine.Networking.Fakes.ShimClientScene.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:UnityEngine.Networking.Fakes.ShimClientScene.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:UnityEngine.Networking.Fakes.ShimClientScene.CheckForOwnerNetworkIdentity">
            <summary>设置 ClientScene.CheckForOwner(NetworkIdentity uv) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Networking.Fakes.ShimClientScene.ClearSpawners">
            <summary>设置 ClientScene.ClearSpawners() 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Networking.Fakes.ShimClientScene.ConnectLocalServer">
            <summary>设置 ClientScene.ConnectLocalServer() 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Networking.Fakes.ShimClientScene.Constructor">
            <summary>设置 ClientScene.ClientScene() 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Networking.Fakes.ShimClientScene.DestroyAllClientObjects">
            <summary>设置 ClientScene.DestroyAllClientObjects() 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Networking.Fakes.ShimClientScene.FindLocalObjectNetworkInstanceId">
            <summary>设置 ClientScene.FindLocalObject(NetworkInstanceId netId) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Networking.Fakes.ShimClientScene.GetPlayerControllerInt16PlayerControllerOut">
            <summary>设置 ClientScene.GetPlayerController(Int16 playerControllerId, PlayerController&amp; player) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Networking.Fakes.ShimClientScene.GetStringForAssetIdNetworkHash128">
            <summary>设置 ClientScene.GetStringForAssetId(NetworkHash128 assetId) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Networking.Fakes.ShimClientScene.HandleClientDisconnectNetworkConnection">
            <summary>设置 ClientScene.HandleClientDisconnect(NetworkConnection conn) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Networking.Fakes.ShimClientScene.InternalAddPlayerNetworkIdentityInt16">
            <summary>设置 ClientScene.InternalAddPlayer(NetworkIdentity view, Int16 playerControllerId) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Networking.Fakes.ShimClientScene.OnClientAuthorityNetworkMessage">
            <summary>设置 ClientScene.OnClientAuthority(NetworkMessage netMsg) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Networking.Fakes.ShimClientScene.OnLocalClientObjectDestroyNetworkMessage">
            <summary>设置 ClientScene.OnLocalClientObjectDestroy(NetworkMessage netMsg) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Networking.Fakes.ShimClientScene.OnLocalClientObjectHideNetworkMessage">
            <summary>设置 ClientScene.OnLocalClientObjectHide(NetworkMessage netMsg) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Networking.Fakes.ShimClientScene.OnLocalClientObjectSpawnNetworkMessage">
            <summary>设置 ClientScene.OnLocalClientObjectSpawn(NetworkMessage netMsg) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Networking.Fakes.ShimClientScene.OnLocalClientObjectSpawnSceneNetworkMessage">
            <summary>设置 ClientScene.OnLocalClientObjectSpawnScene(NetworkMessage netMsg) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Networking.Fakes.ShimClientScene.OnObjectDestroyNetworkMessage">
            <summary>设置 ClientScene.OnObjectDestroy(NetworkMessage netMsg) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Networking.Fakes.ShimClientScene.OnObjectSpawnFinishedNetworkMessage">
            <summary>设置 ClientScene.OnObjectSpawnFinished(NetworkMessage netMsg) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Networking.Fakes.ShimClientScene.OnObjectSpawnNetworkMessage">
            <summary>设置 ClientScene.OnObjectSpawn(NetworkMessage netMsg) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Networking.Fakes.ShimClientScene.OnObjectSpawnSceneNetworkMessage">
            <summary>设置 ClientScene.OnObjectSpawnScene(NetworkMessage netMsg) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Networking.Fakes.ShimClientScene.OnOwnerMessageNetworkMessage">
            <summary>设置 ClientScene.OnOwnerMessage(NetworkMessage netMsg) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Networking.Fakes.ShimClientScene.OnRPCMessageNetworkMessage">
            <summary>设置 ClientScene.OnRPCMessage(NetworkMessage netMsg) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Networking.Fakes.ShimClientScene.OnSyncEventMessageNetworkMessage">
            <summary>设置 ClientScene.OnSyncEventMessage(NetworkMessage netMsg) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Networking.Fakes.ShimClientScene.OnSyncListMessageNetworkMessage">
            <summary>设置 ClientScene.OnSyncListMessage(NetworkMessage netMsg) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Networking.Fakes.ShimClientScene.OnUpdateVarsMessageNetworkMessage">
            <summary>设置 ClientScene.OnUpdateVarsMessage(NetworkMessage netMsg) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Networking.Fakes.ShimClientScene.PrepareToSpawnSceneObjects">
            <summary>设置 ClientScene.PrepareToSpawnSceneObjects() 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Networking.Fakes.ShimClientScene.ReadyNetworkConnection">
            <summary>设置 ClientScene.Ready(NetworkConnection conn) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Networking.Fakes.ShimClientScene.RegisterPrefabGameObject">
            <summary>设置 ClientScene.RegisterPrefab(GameObject prefab) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Networking.Fakes.ShimClientScene.RegisterPrefabGameObjectSpawnDelegateUnSpawnDelegate">
            <summary>设置 ClientScene.RegisterPrefab(GameObject prefab, SpawnDelegate spawnHandler, UnSpawnDelegate unspawnHandler) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Networking.Fakes.ShimClientScene.RegisterSpawnHandlerNetworkHash128SpawnDelegateUnSpawnDelegate">
            <summary>设置 ClientScene.RegisterSpawnHandler(NetworkHash128 assetId, SpawnDelegate spawnHandler, UnSpawnDelegate unspawnHandler) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Networking.Fakes.ShimClientScene.RegisterSystemHandlersNetworkClientBoolean">
            <summary>设置 ClientScene.RegisterSystemHandlers(NetworkClient client, Boolean localClient) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Networking.Fakes.ShimClientScene.RemovePlayerInt16">
            <summary>设置 ClientScene.RemovePlayer(Int16 playerControllerId) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Networking.Fakes.ShimClientScene.SetLocalObjectNetworkInstanceIdGameObject">
            <summary>设置 ClientScene.SetLocalObject(NetworkInstanceId netId, GameObject obj) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Networking.Fakes.ShimClientScene.SetNotReady">
            <summary>设置 ClientScene.SetNotReady() 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Networking.Fakes.ShimClientScene.Shutdown">
            <summary>设置 ClientScene.Shutdown() 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Networking.Fakes.ShimClientScene.SpawnSceneObjectNetworkSceneId">
            <summary>设置 ClientScene.SpawnSceneObject(NetworkSceneId sceneId) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Networking.Fakes.ShimClientScene.StaticConstructor">
            <summary>设置 ClientScene.ClientScene() 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Networking.Fakes.ShimClientScene.UnregisterPrefabGameObject">
            <summary>设置 ClientScene.UnregisterPrefab(GameObject prefab) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Networking.Fakes.ShimClientScene.UnregisterSpawnHandlerNetworkHash128">
            <summary>设置 ClientScene.UnregisterSpawnHandler(NetworkHash128 assetId) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Networking.Fakes.ShimClientScene.localPlayersGet">
            <summary>设置 ClientScene.get_localPlayers() 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Networking.Fakes.ShimClientScene.objectsGet">
            <summary>设置 ClientScene.get_objects() 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Networking.Fakes.ShimClientScene.prefabsGet">
            <summary>设置 ClientScene.get_prefabs() 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Networking.Fakes.ShimClientScene.readyConnectionGet">
            <summary>设置 ClientScene.get_readyConnection() 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Networking.Fakes.ShimClientScene.readyGet">
            <summary>设置 ClientScene.get_ready() 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Networking.Fakes.ShimClientScene.spawnableObjectsGet">
            <summary>设置 ClientScene.get_spawnableObjects() 的 填充码</summary>
        </member>
        <member name="T:UnityEngine.Networking.Fakes.ShimCommandAttribute">
            <summary>UnityEngine.Networking.CommandAttribute 的填充码类型</summary>
        </member>
        <member name="M:UnityEngine.Networking.Fakes.ShimCommandAttribute.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:UnityEngine.Networking.Fakes.ShimCommandAttribute.#ctor(UnityEngine.Networking.CommandAttribute)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="T:UnityEngine.Networking.Fakes.ShimCommandAttribute.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="M:UnityEngine.Networking.Fakes.ShimCommandAttribute.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:UnityEngine.Networking.Fakes.ShimCommandAttribute.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:UnityEngine.Networking.Fakes.ShimCommandAttribute.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:UnityEngine.Networking.Fakes.ShimCommandAttribute.Constructor">
            <summary>设置 CommandAttribute.CommandAttribute() 的 填充码</summary>
        </member>
        <member name="T:UnityEngine.Networking.Fakes.ShimLogFilter">
            <summary>UnityEngine.Networking.LogFilter 的填充码类型</summary>
        </member>
        <member name="M:UnityEngine.Networking.Fakes.ShimLogFilter.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:UnityEngine.Networking.Fakes.ShimLogFilter.#ctor(UnityEngine.Networking.LogFilter)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="T:UnityEngine.Networking.Fakes.ShimLogFilter.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="M:UnityEngine.Networking.Fakes.ShimLogFilter.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:UnityEngine.Networking.Fakes.ShimLogFilter.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:UnityEngine.Networking.Fakes.ShimLogFilter.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:UnityEngine.Networking.Fakes.ShimLogFilter.Constructor">
            <summary>设置 LogFilter.LogFilter() 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Networking.Fakes.ShimLogFilter.StaticConstructor">
            <summary>设置 LogFilter.LogFilter() 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Networking.Fakes.ShimLogFilter.currentLogLevelGet">
            <summary>设置 LogFilter.get_currentLogLevel() 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Networking.Fakes.ShimLogFilter.currentLogLevelSetInt32">
            <summary>设置 LogFilter.set_currentLogLevel(Int32 value) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Networking.Fakes.ShimLogFilter.logDebugGet">
            <summary>设置 LogFilter.get_logDebug() 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Networking.Fakes.ShimLogFilter.logDevGet">
            <summary>设置 LogFilter.get_logDev() 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Networking.Fakes.ShimLogFilter.logErrorGet">
            <summary>设置 LogFilter.get_logError() 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Networking.Fakes.ShimLogFilter.logFatalGet">
            <summary>设置 LogFilter.get_logFatal() 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Networking.Fakes.ShimLogFilter.logInfoGet">
            <summary>设置 LogFilter.get_logInfo() 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Networking.Fakes.ShimLogFilter.logWarnGet">
            <summary>设置 LogFilter.get_logWarn() 的 填充码</summary>
        </member>
        <member name="T:UnityEngine.Networking.Fakes.ShimMessageBase">
            <summary>UnityEngine.Networking.MessageBase 的填充码类型</summary>
        </member>
        <member name="M:UnityEngine.Networking.Fakes.ShimMessageBase.#ctor(UnityEngine.Networking.MessageBase)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="T:UnityEngine.Networking.Fakes.ShimMessageBase.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:UnityEngine.Networking.Fakes.ShimMessageBase.AllInstances.DeserializeNetworkReader">
            <summary>设置 MessageBase.Deserialize(NetworkReader reader) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Networking.Fakes.ShimMessageBase.AllInstances.SerializeNetworkWriter">
            <summary>设置 MessageBase.Serialize(NetworkWriter writer) 的 填充码</summary>
        </member>
        <member name="M:UnityEngine.Networking.Fakes.ShimMessageBase.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:UnityEngine.Networking.Fakes.ShimMessageBase.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:UnityEngine.Networking.Fakes.ShimMessageBase.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:UnityEngine.Networking.Fakes.ShimMessageBase.Constructor">
            <summary>设置 MessageBase.MessageBase() 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Networking.Fakes.ShimMessageBase.DeserializeNetworkReader">
            <summary>设置 MessageBase.Deserialize(NetworkReader reader) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Networking.Fakes.ShimMessageBase.SerializeNetworkWriter">
            <summary>设置 MessageBase.Serialize(NetworkWriter writer) 的 填充码</summary>
        </member>
        <member name="T:UnityEngine.Networking.Fakes.ShimMsgType">
            <summary>UnityEngine.Networking.MsgType 的填充码类型</summary>
        </member>
        <member name="M:UnityEngine.Networking.Fakes.ShimMsgType.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:UnityEngine.Networking.Fakes.ShimMsgType.#ctor(UnityEngine.Networking.MsgType)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="T:UnityEngine.Networking.Fakes.ShimMsgType.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="M:UnityEngine.Networking.Fakes.ShimMsgType.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:UnityEngine.Networking.Fakes.ShimMsgType.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:UnityEngine.Networking.Fakes.ShimMsgType.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:UnityEngine.Networking.Fakes.ShimMsgType.Constructor">
            <summary>设置 MsgType.MsgType() 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Networking.Fakes.ShimMsgType.MsgTypeToStringInt16">
            <summary>设置 MsgType.MsgTypeToString(Int16 value) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Networking.Fakes.ShimMsgType.StaticConstructor">
            <summary>设置 MsgType.MsgType() 的 填充码</summary>
        </member>
        <member name="T:UnityEngine.Networking.Fakes.ShimNetworkAnimator">
            <summary>UnityEngine.Networking.NetworkAnimator 的填充码类型</summary>
        </member>
        <member name="M:UnityEngine.Networking.Fakes.ShimNetworkAnimator.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:UnityEngine.Networking.Fakes.ShimNetworkAnimator.#ctor(UnityEngine.Networking.NetworkAnimator)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="T:UnityEngine.Networking.Fakes.ShimNetworkAnimator.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:UnityEngine.Networking.Fakes.ShimNetworkAnimator.AllInstances.CheckAnimStateChangedInt32OutSingleOut">
            <summary>设置 NetworkAnimator.CheckAnimStateChanged(Int32&amp; stateHash, Single&amp; normalizedTime) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Networking.Fakes.ShimNetworkAnimator.AllInstances.CheckSendRate">
            <summary>设置 NetworkAnimator.CheckSendRate() 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Networking.Fakes.ShimNetworkAnimator.AllInstances.FixedUpdate">
            <summary>设置 NetworkAnimator.FixedUpdate() 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Networking.Fakes.ShimNetworkAnimator.AllInstances.GetParameterAutoSendInt32">
            <summary>设置 NetworkAnimator.GetParameterAutoSend(Int32 index) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Networking.Fakes.ShimNetworkAnimator.AllInstances.HandleAnimTriggerMsgInt32">
            <summary>设置 NetworkAnimator.HandleAnimTriggerMsg(Int32 hash) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Networking.Fakes.ShimNetworkAnimator.AllInstances.InitializeAuthority">
            <summary>设置 NetworkAnimator.InitializeAuthority() 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Networking.Fakes.ShimNetworkAnimator.AllInstances.OnDeserializeNetworkReaderBoolean">
            <summary>设置 NetworkAnimator.OnDeserialize(NetworkReader reader, Boolean initialState) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Networking.Fakes.ShimNetworkAnimator.AllInstances.OnSerializeNetworkWriterBoolean">
            <summary>设置 NetworkAnimator.OnSerialize(NetworkWriter writer, Boolean forceAll) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Networking.Fakes.ShimNetworkAnimator.AllInstances.OnStartLocalPlayer">
            <summary>设置 NetworkAnimator.OnStartLocalPlayer() 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Networking.Fakes.ShimNetworkAnimator.AllInstances.OnStartServer">
            <summary>设置 NetworkAnimator.OnStartServer() 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Networking.Fakes.ShimNetworkAnimator.AllInstances.ReadParametersNetworkReaderBoolean">
            <summary>设置 NetworkAnimator.ReadParameters(NetworkReader reader, Boolean autoSend) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Networking.Fakes.ShimNetworkAnimator.AllInstances.ResetParameterOptions">
            <summary>设置 NetworkAnimator.ResetParameterOptions() 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Networking.Fakes.ShimNetworkAnimator.AllInstances.SetParameterAutoSendInt32Boolean">
            <summary>设置 NetworkAnimator.SetParameterAutoSend(Int32 index, Boolean value) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Networking.Fakes.ShimNetworkAnimator.AllInstances.SetRecvTrackingParamStringInt32">
            <summary>设置 NetworkAnimator.SetRecvTrackingParam(String p, Int32 i) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Networking.Fakes.ShimNetworkAnimator.AllInstances.SetSendTrackingParamStringInt32">
            <summary>设置 NetworkAnimator.SetSendTrackingParam(String p, Int32 i) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Networking.Fakes.ShimNetworkAnimator.AllInstances.SetTriggerInt32">
            <summary>设置 NetworkAnimator.SetTrigger(Int32 hash) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Networking.Fakes.ShimNetworkAnimator.AllInstances.SetTriggerString">
            <summary>设置 NetworkAnimator.SetTrigger(String triggerName) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Networking.Fakes.ShimNetworkAnimator.AllInstances.WriteParametersNetworkWriterBoolean">
            <summary>设置 NetworkAnimator.WriteParameters(NetworkWriter writer, Boolean autoSend) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Networking.Fakes.ShimNetworkAnimator.AllInstances.animatorGet">
            <summary>设置 NetworkAnimator.get_animator() 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Networking.Fakes.ShimNetworkAnimator.AllInstances.animatorSetAnimator">
            <summary>设置 NetworkAnimator.set_animator(Animator value) 的 填充码</summary>
        </member>
        <member name="M:UnityEngine.Networking.Fakes.ShimNetworkAnimator.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:UnityEngine.Networking.Fakes.ShimNetworkAnimator.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:UnityEngine.Networking.Fakes.ShimNetworkAnimator.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:UnityEngine.Networking.Fakes.ShimNetworkAnimator.CheckAnimStateChangedInt32OutSingleOut">
            <summary>设置 NetworkAnimator.CheckAnimStateChanged(Int32&amp; stateHash, Single&amp; normalizedTime) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Networking.Fakes.ShimNetworkAnimator.CheckSendRate">
            <summary>设置 NetworkAnimator.CheckSendRate() 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Networking.Fakes.ShimNetworkAnimator.Constructor">
            <summary>设置 NetworkAnimator.NetworkAnimator() 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Networking.Fakes.ShimNetworkAnimator.FixedUpdate">
            <summary>设置 NetworkAnimator.FixedUpdate() 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Networking.Fakes.ShimNetworkAnimator.GetParameterAutoSendInt32">
            <summary>设置 NetworkAnimator.GetParameterAutoSend(Int32 index) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Networking.Fakes.ShimNetworkAnimator.HandleAnimTriggerMsgInt32">
            <summary>设置 NetworkAnimator.HandleAnimTriggerMsg(Int32 hash) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Networking.Fakes.ShimNetworkAnimator.InitializeAuthority">
            <summary>设置 NetworkAnimator.InitializeAuthority() 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Networking.Fakes.ShimNetworkAnimator.OnAnimationClientMessageNetworkMessage">
            <summary>设置 NetworkAnimator.OnAnimationClientMessage(NetworkMessage netMsg) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Networking.Fakes.ShimNetworkAnimator.OnAnimationParametersClientMessageNetworkMessage">
            <summary>设置 NetworkAnimator.OnAnimationParametersClientMessage(NetworkMessage netMsg) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Networking.Fakes.ShimNetworkAnimator.OnAnimationParametersServerMessageNetworkMessage">
            <summary>设置 NetworkAnimator.OnAnimationParametersServerMessage(NetworkMessage netMsg) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Networking.Fakes.ShimNetworkAnimator.OnAnimationServerMessageNetworkMessage">
            <summary>设置 NetworkAnimator.OnAnimationServerMessage(NetworkMessage netMsg) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Networking.Fakes.ShimNetworkAnimator.OnAnimationTriggerClientMessageNetworkMessage">
            <summary>设置 NetworkAnimator.OnAnimationTriggerClientMessage(NetworkMessage netMsg) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Networking.Fakes.ShimNetworkAnimator.OnAnimationTriggerServerMessageNetworkMessage">
            <summary>设置 NetworkAnimator.OnAnimationTriggerServerMessage(NetworkMessage netMsg) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Networking.Fakes.ShimNetworkAnimator.OnDeserializeNetworkReaderBoolean">
            <summary>设置 NetworkAnimator.OnDeserialize(NetworkReader reader, Boolean initialState) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Networking.Fakes.ShimNetworkAnimator.OnSerializeNetworkWriterBoolean">
            <summary>设置 NetworkAnimator.OnSerialize(NetworkWriter writer, Boolean forceAll) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Networking.Fakes.ShimNetworkAnimator.OnStartLocalPlayer">
            <summary>设置 NetworkAnimator.OnStartLocalPlayer() 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Networking.Fakes.ShimNetworkAnimator.OnStartServer">
            <summary>设置 NetworkAnimator.OnStartServer() 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Networking.Fakes.ShimNetworkAnimator.ReadParametersNetworkReaderBoolean">
            <summary>设置 NetworkAnimator.ReadParameters(NetworkReader reader, Boolean autoSend) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Networking.Fakes.ShimNetworkAnimator.ResetParameterOptions">
            <summary>设置 NetworkAnimator.ResetParameterOptions() 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Networking.Fakes.ShimNetworkAnimator.SetParameterAutoSendInt32Boolean">
            <summary>设置 NetworkAnimator.SetParameterAutoSend(Int32 index, Boolean value) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Networking.Fakes.ShimNetworkAnimator.SetRecvTrackingParamStringInt32">
            <summary>设置 NetworkAnimator.SetRecvTrackingParam(String p, Int32 i) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Networking.Fakes.ShimNetworkAnimator.SetSendTrackingParamStringInt32">
            <summary>设置 NetworkAnimator.SetSendTrackingParam(String p, Int32 i) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Networking.Fakes.ShimNetworkAnimator.SetTriggerInt32">
            <summary>设置 NetworkAnimator.SetTrigger(Int32 hash) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Networking.Fakes.ShimNetworkAnimator.SetTriggerString">
            <summary>设置 NetworkAnimator.SetTrigger(String triggerName) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Networking.Fakes.ShimNetworkAnimator.StaticConstructor">
            <summary>设置 NetworkAnimator.NetworkAnimator() 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Networking.Fakes.ShimNetworkAnimator.WriteParametersNetworkWriterBoolean">
            <summary>设置 NetworkAnimator.WriteParameters(NetworkWriter writer, Boolean autoSend) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Networking.Fakes.ShimNetworkAnimator.animatorGet">
            <summary>设置 NetworkAnimator.get_animator() 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Networking.Fakes.ShimNetworkAnimator.animatorSetAnimator">
            <summary>设置 NetworkAnimator.set_animator(Animator value) 的 填充码</summary>
        </member>
        <member name="T:UnityEngine.Networking.Fakes.ShimNetworkBehaviour">
            <summary>UnityEngine.Networking.NetworkBehaviour 的填充码类型</summary>
        </member>
        <member name="M:UnityEngine.Networking.Fakes.ShimNetworkBehaviour.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:UnityEngine.Networking.Fakes.ShimNetworkBehaviour.#ctor(UnityEngine.Networking.NetworkBehaviour)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="T:UnityEngine.Networking.Fakes.ShimNetworkBehaviour.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:UnityEngine.Networking.Fakes.ShimNetworkBehaviour.AllInstances.ClearAllDirtyBits">
            <summary>设置 NetworkBehaviour.ClearAllDirtyBits() 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Networking.Fakes.ShimNetworkBehaviour.AllInstances.ContainsCommandDelegateInt32">
            <summary>设置 NetworkBehaviour.ContainsCommandDelegate(Int32 cmdHash) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Networking.Fakes.ShimNetworkBehaviour.AllInstances.GetDirtyChannel">
            <summary>设置 NetworkBehaviour.GetDirtyChannel() 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Networking.Fakes.ShimNetworkBehaviour.AllInstances.GetNetworkChannel">
            <summary>设置 NetworkBehaviour.GetNetworkChannel() 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Networking.Fakes.ShimNetworkBehaviour.AllInstances.GetNetworkSendInterval">
            <summary>设置 NetworkBehaviour.GetNetworkSendInterval() 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Networking.Fakes.ShimNetworkBehaviour.AllInstances.InvokeCommandDelegateInt32NetworkReader">
            <summary>设置 NetworkBehaviour.InvokeCommandDelegate(Int32 cmdHash, NetworkReader reader) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Networking.Fakes.ShimNetworkBehaviour.AllInstances.InvokeCommandInt32NetworkReader">
            <summary>设置 NetworkBehaviour.InvokeCommand(Int32 cmdHash, NetworkReader reader) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Networking.Fakes.ShimNetworkBehaviour.AllInstances.InvokeRPCInt32NetworkReader">
            <summary>设置 NetworkBehaviour.InvokeRPC(Int32 cmdHash, NetworkReader reader) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Networking.Fakes.ShimNetworkBehaviour.AllInstances.InvokeRpcDelegateInt32NetworkReader">
            <summary>设置 NetworkBehaviour.InvokeRpcDelegate(Int32 cmdHash, NetworkReader reader) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Networking.Fakes.ShimNetworkBehaviour.AllInstances.InvokeSyncEventDelegateInt32NetworkReader">
            <summary>设置 NetworkBehaviour.InvokeSyncEventDelegate(Int32 cmdHash, NetworkReader reader) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Networking.Fakes.ShimNetworkBehaviour.AllInstances.InvokeSyncEventInt32NetworkReader">
            <summary>设置 NetworkBehaviour.InvokeSyncEvent(Int32 cmdHash, NetworkReader reader) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Networking.Fakes.ShimNetworkBehaviour.AllInstances.InvokeSyncListDelegateInt32NetworkReader">
            <summary>设置 NetworkBehaviour.InvokeSyncListDelegate(Int32 cmdHash, NetworkReader reader) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Networking.Fakes.ShimNetworkBehaviour.AllInstances.InvokeSyncListInt32NetworkReader">
            <summary>设置 NetworkBehaviour.InvokeSyncList(Int32 cmdHash, NetworkReader reader) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Networking.Fakes.ShimNetworkBehaviour.AllInstances.OnCheckObserverNetworkConnection">
            <summary>设置 NetworkBehaviour.OnCheckObserver(NetworkConnection conn) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Networking.Fakes.ShimNetworkBehaviour.AllInstances.OnDeserializeNetworkReaderBoolean">
            <summary>设置 NetworkBehaviour.OnDeserialize(NetworkReader reader, Boolean initialState) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Networking.Fakes.ShimNetworkBehaviour.AllInstances.OnNetworkDestroy">
            <summary>设置 NetworkBehaviour.OnNetworkDestroy() 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Networking.Fakes.ShimNetworkBehaviour.AllInstances.OnRebuildObserversHashSetOfNetworkConnectionBoolean">
            <summary>设置 NetworkBehaviour.OnRebuildObservers(HashSet`1&lt;NetworkConnection&gt; observers, Boolean initialize) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Networking.Fakes.ShimNetworkBehaviour.AllInstances.OnSerializeNetworkWriterBoolean">
            <summary>设置 NetworkBehaviour.OnSerialize(NetworkWriter writer, Boolean initialState) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Networking.Fakes.ShimNetworkBehaviour.AllInstances.OnSetLocalVisibilityBoolean">
            <summary>设置 NetworkBehaviour.OnSetLocalVisibility(Boolean vis) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Networking.Fakes.ShimNetworkBehaviour.AllInstances.OnStartAuthority">
            <summary>设置 NetworkBehaviour.OnStartAuthority() 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Networking.Fakes.ShimNetworkBehaviour.AllInstances.OnStartClient">
            <summary>设置 NetworkBehaviour.OnStartClient() 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Networking.Fakes.ShimNetworkBehaviour.AllInstances.OnStartLocalPlayer">
            <summary>设置 NetworkBehaviour.OnStartLocalPlayer() 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Networking.Fakes.ShimNetworkBehaviour.AllInstances.OnStartServer">
            <summary>设置 NetworkBehaviour.OnStartServer() 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Networking.Fakes.ShimNetworkBehaviour.AllInstances.OnStopAuthority">
            <summary>设置 NetworkBehaviour.OnStopAuthority() 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Networking.Fakes.ShimNetworkBehaviour.AllInstances.PreStartClient">
            <summary>设置 NetworkBehaviour.PreStartClient() 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Networking.Fakes.ShimNetworkBehaviour.AllInstances.SendCommandInternalNetworkWriterInt32String">
            <summary>设置 NetworkBehaviour.SendCommandInternal(NetworkWriter writer, Int32 channelId, String cmdName) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Networking.Fakes.ShimNetworkBehaviour.AllInstances.SendEventInternalNetworkWriterInt32String">
            <summary>设置 NetworkBehaviour.SendEventInternal(NetworkWriter writer, Int32 channelId, String eventName) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Networking.Fakes.ShimNetworkBehaviour.AllInstances.SendRPCInternalNetworkWriterInt32String">
            <summary>设置 NetworkBehaviour.SendRPCInternal(NetworkWriter writer, Int32 channelId, String rpcName) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Networking.Fakes.ShimNetworkBehaviour.AllInstances.SetDirtyBitUInt32">
            <summary>设置 NetworkBehaviour.SetDirtyBit(UInt32 dirtyBit) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Networking.Fakes.ShimNetworkBehaviour.AllInstances.SetSyncVarGameObjectGameObjectGameObjectRefUInt32NetworkInstanceIdRef">
            <summary>设置 NetworkBehaviour.SetSyncVarGameObject(GameObject newGameObject, GameObject&amp; gameObjectField, UInt32 dirtyBit, NetworkInstanceId&amp; netIdField) 的 填充码</summary>
        </member>
        <member name="M:UnityEngine.Networking.Fakes.ShimNetworkBehaviour.AllInstances.SetSyncVarOf1M0M0RefUInt32``1(Microsoft.QualityTools.Testing.Fakes.Delegates.UnityEngineNetworkingDelegates.Ref2Action4{UnityEngine.Networking.NetworkBehaviour,``0,``0,System.UInt32})">
            <summary>设置 NetworkBehaviour.SetSyncVar(!!0 value, !!0&amp; fieldValue, UInt32 dirtyBit) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Networking.Fakes.ShimNetworkBehaviour.AllInstances.connectionToClientGet">
            <summary>设置 NetworkBehaviour.get_connectionToClient() 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Networking.Fakes.ShimNetworkBehaviour.AllInstances.connectionToServerGet">
            <summary>设置 NetworkBehaviour.get_connectionToServer() 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Networking.Fakes.ShimNetworkBehaviour.AllInstances.hasAuthorityGet">
            <summary>设置 NetworkBehaviour.get_hasAuthority() 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Networking.Fakes.ShimNetworkBehaviour.AllInstances.isClientGet">
            <summary>设置 NetworkBehaviour.get_isClient() 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Networking.Fakes.ShimNetworkBehaviour.AllInstances.isLocalPlayerGet">
            <summary>设置 NetworkBehaviour.get_isLocalPlayer() 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Networking.Fakes.ShimNetworkBehaviour.AllInstances.isServerGet">
            <summary>设置 NetworkBehaviour.get_isServer() 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Networking.Fakes.ShimNetworkBehaviour.AllInstances.localPlayerAuthorityGet">
            <summary>设置 NetworkBehaviour.get_localPlayerAuthority() 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Networking.Fakes.ShimNetworkBehaviour.AllInstances.myViewGet">
            <summary>设置 NetworkBehaviour.get_myView() 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Networking.Fakes.ShimNetworkBehaviour.AllInstances.netIdGet">
            <summary>设置 NetworkBehaviour.get_netId() 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Networking.Fakes.ShimNetworkBehaviour.AllInstances.playerControllerIdGet">
            <summary>设置 NetworkBehaviour.get_playerControllerId() 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Networking.Fakes.ShimNetworkBehaviour.AllInstances.syncVarDirtyBitsGet">
            <summary>设置 NetworkBehaviour.get_syncVarDirtyBits() 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Networking.Fakes.ShimNetworkBehaviour.AllInstances.syncVarHookGuardGet">
            <summary>设置 NetworkBehaviour.get_syncVarHookGuard() 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Networking.Fakes.ShimNetworkBehaviour.AllInstances.syncVarHookGuardSetBoolean">
            <summary>设置 NetworkBehaviour.set_syncVarHookGuard(Boolean value) 的 填充码</summary>
        </member>
        <member name="M:UnityEngine.Networking.Fakes.ShimNetworkBehaviour.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:UnityEngine.Networking.Fakes.ShimNetworkBehaviour.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:UnityEngine.Networking.Fakes.ShimNetworkBehaviour.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:UnityEngine.Networking.Fakes.ShimNetworkBehaviour.ClearAllDirtyBits">
            <summary>设置 NetworkBehaviour.ClearAllDirtyBits() 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Networking.Fakes.ShimNetworkBehaviour.Constructor">
            <summary>设置 NetworkBehaviour.NetworkBehaviour() 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Networking.Fakes.ShimNetworkBehaviour.ContainsCommandDelegateInt32">
            <summary>设置 NetworkBehaviour.ContainsCommandDelegate(Int32 cmdHash) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Networking.Fakes.ShimNetworkBehaviour.DumpInvokers">
            <summary>设置 NetworkBehaviour.DumpInvokers() 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Networking.Fakes.ShimNetworkBehaviour.GetCmdHashCmdNameInt32">
            <summary>设置 NetworkBehaviour.GetCmdHashCmdName(Int32 cmdHash) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Networking.Fakes.ShimNetworkBehaviour.GetCmdHashEventNameInt32">
            <summary>设置 NetworkBehaviour.GetCmdHashEventName(Int32 cmdHash) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Networking.Fakes.ShimNetworkBehaviour.GetCmdHashHandlerNameInt32">
            <summary>设置 NetworkBehaviour.GetCmdHashHandlerName(Int32 cmdHash) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Networking.Fakes.ShimNetworkBehaviour.GetCmdHashListNameInt32">
            <summary>设置 NetworkBehaviour.GetCmdHashListName(Int32 cmdHash) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Networking.Fakes.ShimNetworkBehaviour.GetCmdHashPrefixNameInt32String">
            <summary>设置 NetworkBehaviour.GetCmdHashPrefixName(Int32 cmdHash, String prefix) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Networking.Fakes.ShimNetworkBehaviour.GetCmdHashRpcNameInt32">
            <summary>设置 NetworkBehaviour.GetCmdHashRpcName(Int32 cmdHash) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Networking.Fakes.ShimNetworkBehaviour.GetDirtyChannel">
            <summary>设置 NetworkBehaviour.GetDirtyChannel() 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Networking.Fakes.ShimNetworkBehaviour.GetInvokerInt32">
            <summary>设置 NetworkBehaviour.GetInvoker(Int32 cmdHash) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Networking.Fakes.ShimNetworkBehaviour.GetNetworkChannel">
            <summary>设置 NetworkBehaviour.GetNetworkChannel() 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Networking.Fakes.ShimNetworkBehaviour.GetNetworkSendInterval">
            <summary>设置 NetworkBehaviour.GetNetworkSendInterval() 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Networking.Fakes.ShimNetworkBehaviour.InvokeCommandDelegateInt32NetworkReader">
            <summary>设置 NetworkBehaviour.InvokeCommandDelegate(Int32 cmdHash, NetworkReader reader) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Networking.Fakes.ShimNetworkBehaviour.InvokeCommandInt32NetworkReader">
            <summary>设置 NetworkBehaviour.InvokeCommand(Int32 cmdHash, NetworkReader reader) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Networking.Fakes.ShimNetworkBehaviour.InvokeRPCInt32NetworkReader">
            <summary>设置 NetworkBehaviour.InvokeRPC(Int32 cmdHash, NetworkReader reader) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Networking.Fakes.ShimNetworkBehaviour.InvokeRpcDelegateInt32NetworkReader">
            <summary>设置 NetworkBehaviour.InvokeRpcDelegate(Int32 cmdHash, NetworkReader reader) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Networking.Fakes.ShimNetworkBehaviour.InvokeSyncEventDelegateInt32NetworkReader">
            <summary>设置 NetworkBehaviour.InvokeSyncEventDelegate(Int32 cmdHash, NetworkReader reader) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Networking.Fakes.ShimNetworkBehaviour.InvokeSyncEventInt32NetworkReader">
            <summary>设置 NetworkBehaviour.InvokeSyncEvent(Int32 cmdHash, NetworkReader reader) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Networking.Fakes.ShimNetworkBehaviour.InvokeSyncListDelegateInt32NetworkReader">
            <summary>设置 NetworkBehaviour.InvokeSyncListDelegate(Int32 cmdHash, NetworkReader reader) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Networking.Fakes.ShimNetworkBehaviour.InvokeSyncListInt32NetworkReader">
            <summary>设置 NetworkBehaviour.InvokeSyncList(Int32 cmdHash, NetworkReader reader) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Networking.Fakes.ShimNetworkBehaviour.OnCheckObserverNetworkConnection">
            <summary>设置 NetworkBehaviour.OnCheckObserver(NetworkConnection conn) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Networking.Fakes.ShimNetworkBehaviour.OnDeserializeNetworkReaderBoolean">
            <summary>设置 NetworkBehaviour.OnDeserialize(NetworkReader reader, Boolean initialState) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Networking.Fakes.ShimNetworkBehaviour.OnNetworkDestroy">
            <summary>设置 NetworkBehaviour.OnNetworkDestroy() 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Networking.Fakes.ShimNetworkBehaviour.OnRebuildObserversHashSetOfNetworkConnectionBoolean">
            <summary>设置 NetworkBehaviour.OnRebuildObservers(HashSet`1&lt;NetworkConnection&gt; observers, Boolean initialize) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Networking.Fakes.ShimNetworkBehaviour.OnSerializeNetworkWriterBoolean">
            <summary>设置 NetworkBehaviour.OnSerialize(NetworkWriter writer, Boolean initialState) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Networking.Fakes.ShimNetworkBehaviour.OnSetLocalVisibilityBoolean">
            <summary>设置 NetworkBehaviour.OnSetLocalVisibility(Boolean vis) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Networking.Fakes.ShimNetworkBehaviour.OnStartAuthority">
            <summary>设置 NetworkBehaviour.OnStartAuthority() 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Networking.Fakes.ShimNetworkBehaviour.OnStartClient">
            <summary>设置 NetworkBehaviour.OnStartClient() 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Networking.Fakes.ShimNetworkBehaviour.OnStartLocalPlayer">
            <summary>设置 NetworkBehaviour.OnStartLocalPlayer() 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Networking.Fakes.ShimNetworkBehaviour.OnStartServer">
            <summary>设置 NetworkBehaviour.OnStartServer() 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Networking.Fakes.ShimNetworkBehaviour.OnStopAuthority">
            <summary>设置 NetworkBehaviour.OnStopAuthority() 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Networking.Fakes.ShimNetworkBehaviour.PreStartClient">
            <summary>设置 NetworkBehaviour.PreStartClient() 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Networking.Fakes.ShimNetworkBehaviour.SendCommandInternalNetworkWriterInt32String">
            <summary>设置 NetworkBehaviour.SendCommandInternal(NetworkWriter writer, Int32 channelId, String cmdName) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Networking.Fakes.ShimNetworkBehaviour.SendEventInternalNetworkWriterInt32String">
            <summary>设置 NetworkBehaviour.SendEventInternal(NetworkWriter writer, Int32 channelId, String eventName) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Networking.Fakes.ShimNetworkBehaviour.SendRPCInternalNetworkWriterInt32String">
            <summary>设置 NetworkBehaviour.SendRPCInternal(NetworkWriter writer, Int32 channelId, String rpcName) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Networking.Fakes.ShimNetworkBehaviour.SetDirtyBitUInt32">
            <summary>设置 NetworkBehaviour.SetDirtyBit(UInt32 dirtyBit) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Networking.Fakes.ShimNetworkBehaviour.StaticConstructor">
            <summary>设置 NetworkBehaviour.NetworkBehaviour() 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Networking.Fakes.ShimNetworkBehaviour.connectionToClientGet">
            <summary>设置 NetworkBehaviour.get_connectionToClient() 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Networking.Fakes.ShimNetworkBehaviour.connectionToServerGet">
            <summary>设置 NetworkBehaviour.get_connectionToServer() 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Networking.Fakes.ShimNetworkBehaviour.hasAuthorityGet">
            <summary>设置 NetworkBehaviour.get_hasAuthority() 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Networking.Fakes.ShimNetworkBehaviour.isClientGet">
            <summary>设置 NetworkBehaviour.get_isClient() 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Networking.Fakes.ShimNetworkBehaviour.isLocalPlayerGet">
            <summary>设置 NetworkBehaviour.get_isLocalPlayer() 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Networking.Fakes.ShimNetworkBehaviour.isServerGet">
            <summary>设置 NetworkBehaviour.get_isServer() 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Networking.Fakes.ShimNetworkBehaviour.localPlayerAuthorityGet">
            <summary>设置 NetworkBehaviour.get_localPlayerAuthority() 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Networking.Fakes.ShimNetworkBehaviour.myViewGet">
            <summary>设置 NetworkBehaviour.get_myView() 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Networking.Fakes.ShimNetworkBehaviour.netIdGet">
            <summary>设置 NetworkBehaviour.get_netId() 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Networking.Fakes.ShimNetworkBehaviour.playerControllerIdGet">
            <summary>设置 NetworkBehaviour.get_playerControllerId() 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Networking.Fakes.ShimNetworkBehaviour.syncVarDirtyBitsGet">
            <summary>设置 NetworkBehaviour.get_syncVarDirtyBits() 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Networking.Fakes.ShimNetworkBehaviour.syncVarHookGuardGet">
            <summary>设置 NetworkBehaviour.get_syncVarHookGuard() 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Networking.Fakes.ShimNetworkBehaviour.syncVarHookGuardSetBoolean">
            <summary>设置 NetworkBehaviour.set_syncVarHookGuard(Boolean value) 的 填充码</summary>
        </member>
        <member name="T:UnityEngine.Networking.Fakes.ShimNetworkBroadcastResult">
            <summary>UnityEngine.Networking.NetworkBroadcastResult 的填充码类型</summary>
        </member>
        <member name="M:UnityEngine.Networking.Fakes.ShimNetworkBroadcastResult.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="T:UnityEngine.Networking.Fakes.ShimNetworkBroadcastResult.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="M:UnityEngine.Networking.Fakes.ShimNetworkBroadcastResult.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:UnityEngine.Networking.Fakes.ShimNetworkBroadcastResult.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:UnityEngine.Networking.Fakes.ShimNetworkBroadcastResult.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="T:UnityEngine.Networking.Fakes.ShimNetworkCRC">
            <summary>UnityEngine.Networking.NetworkCRC 的填充码类型</summary>
        </member>
        <member name="M:UnityEngine.Networking.Fakes.ShimNetworkCRC.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:UnityEngine.Networking.Fakes.ShimNetworkCRC.#ctor(UnityEngine.Networking.NetworkCRC)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="T:UnityEngine.Networking.Fakes.ShimNetworkCRC.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:UnityEngine.Networking.Fakes.ShimNetworkCRC.AllInstances.scriptsGet">
            <summary>设置 NetworkCRC.get_scripts() 的 填充码</summary>
        </member>
        <member name="M:UnityEngine.Networking.Fakes.ShimNetworkCRC.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:UnityEngine.Networking.Fakes.ShimNetworkCRC.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:UnityEngine.Networking.Fakes.ShimNetworkCRC.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:UnityEngine.Networking.Fakes.ShimNetworkCRC.Constructor">
            <summary>设置 NetworkCRC.NetworkCRC() 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Networking.Fakes.ShimNetworkCRC.RegisterBehaviourStringInt32">
            <summary>设置 NetworkCRC.RegisterBehaviour(String name, Int32 channel) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Networking.Fakes.ShimNetworkCRC.ReinitializeScriptCRCsAssembly">
            <summary>设置 NetworkCRC.ReinitializeScriptCRCs(Assembly callingAssembly) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Networking.Fakes.ShimNetworkCRC.scriptCRCCheckGet">
            <summary>设置 NetworkCRC.get_scriptCRCCheck() 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Networking.Fakes.ShimNetworkCRC.scriptCRCCheckSetBoolean">
            <summary>设置 NetworkCRC.set_scriptCRCCheck(Boolean value) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Networking.Fakes.ShimNetworkCRC.scriptsGet">
            <summary>设置 NetworkCRC.get_scripts() 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Networking.Fakes.ShimNetworkCRC.singletonGet">
            <summary>设置 NetworkCRC.get_singleton() 的 填充码</summary>
        </member>
        <member name="T:UnityEngine.Networking.Fakes.ShimNetworkClient">
            <summary>UnityEngine.Networking.NetworkClient 的填充码类型</summary>
        </member>
        <member name="M:UnityEngine.Networking.Fakes.ShimNetworkClient.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:UnityEngine.Networking.Fakes.ShimNetworkClient.#ctor(UnityEngine.Networking.NetworkClient)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="P:UnityEngine.Networking.Fakes.ShimNetworkClient.AddClientNetworkClient">
            <summary>设置 NetworkClient.AddClient(NetworkClient client) 的 填充码</summary>
        </member>
        <member name="T:UnityEngine.Networking.Fakes.ShimNetworkClient.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:UnityEngine.Networking.Fakes.ShimNetworkClient.AllInstances.ConfigureConnectionConfigInt32">
            <summary>设置 NetworkClient.Configure(ConnectionConfig config, Int32 maxConnections) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Networking.Fakes.ShimNetworkClient.AllInstances.ConfigureHostTopology">
            <summary>设置 NetworkClient.Configure(HostTopology topology) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Networking.Fakes.ShimNetworkClient.AllInstances.ConnectEndPoint">
            <summary>设置 NetworkClient.Connect(EndPoint secureTunnelEndPoint) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Networking.Fakes.ShimNetworkClient.AllInstances.ConnectMatchInfo">
            <summary>设置 NetworkClient.Connect(MatchInfo matchInfo) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Networking.Fakes.ShimNetworkClient.AllInstances.ConnectStringInt32">
            <summary>设置 NetworkClient.Connect(String serverIp, Int32 serverPort) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Networking.Fakes.ShimNetworkClient.AllInstances.ConnectWithRelayMatchInfo">
            <summary>设置 NetworkClient.ConnectWithRelay(MatchInfo info) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Networking.Fakes.ShimNetworkClient.AllInstances.ConnectWithSimulatorStringInt32Int32Single">
            <summary>设置 NetworkClient.ConnectWithSimulator(String serverIp, Int32 serverPort, Int32 latency, Single packetLoss) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Networking.Fakes.ShimNetworkClient.AllInstances.ContinueConnect">
            <summary>设置 NetworkClient.ContinueConnect() 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Networking.Fakes.ShimNetworkClient.AllInstances.Disconnect">
            <summary>设置 NetworkClient.Disconnect() 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Networking.Fakes.ShimNetworkClient.AllInstances.GenerateConnectErrorInt32">
            <summary>设置 NetworkClient.GenerateConnectError(Int32 error) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Networking.Fakes.ShimNetworkClient.AllInstances.GenerateDataErrorInt32">
            <summary>设置 NetworkClient.GenerateDataError(Int32 error) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Networking.Fakes.ShimNetworkClient.AllInstances.GenerateDisconnectErrorInt32">
            <summary>设置 NetworkClient.GenerateDisconnectError(Int32 error) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Networking.Fakes.ShimNetworkClient.AllInstances.GenerateErrorInt32">
            <summary>设置 NetworkClient.GenerateError(Int32 error) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Networking.Fakes.ShimNetworkClient.AllInstances.GetConnectionStats">
            <summary>设置 NetworkClient.GetConnectionStats() 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Networking.Fakes.ShimNetworkClient.AllInstances.GetRTT">
            <summary>设置 NetworkClient.GetRTT() 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Networking.Fakes.ShimNetworkClient.AllInstances.GetStatsInInt32OutInt32Out">
            <summary>设置 NetworkClient.GetStatsIn(Int32&amp; numMsgs, Int32&amp; numBytes) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Networking.Fakes.ShimNetworkClient.AllInstances.GetStatsOutInt32OutInt32OutInt32OutInt32Out">
            <summary>设置 NetworkClient.GetStatsOut(Int32&amp; numMsgs, Int32&amp; numBufferedMsgs, Int32&amp; numBytes, Int32&amp; lastBufferedPerSecond) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Networking.Fakes.ShimNetworkClient.AllInstances.OnCRCNetworkMessage">
            <summary>设置 NetworkClient.OnCRC(NetworkMessage netMsg) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Networking.Fakes.ShimNetworkClient.AllInstances.OnPeerInfoNetworkMessage">
            <summary>设置 NetworkClient.OnPeerInfo(NetworkMessage netMsg) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Networking.Fakes.ShimNetworkClient.AllInstances.PrepareForConnect">
            <summary>设置 NetworkClient.PrepareForConnect() 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Networking.Fakes.ShimNetworkClient.AllInstances.RegisterHandlerInt16NetworkMessageDelegate">
            <summary>设置 NetworkClient.RegisterHandler(Int16 msgType, NetworkMessageDelegate handler) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Networking.Fakes.ShimNetworkClient.AllInstances.RegisterHandlerSafeInt16NetworkMessageDelegate">
            <summary>设置 NetworkClient.RegisterHandlerSafe(Int16 msgType, NetworkMessageDelegate handler) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Networking.Fakes.ShimNetworkClient.AllInstances.RegisterSystemHandlersBoolean">
            <summary>设置 NetworkClient.RegisterSystemHandlers(Boolean localClient) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Networking.Fakes.ShimNetworkClient.AllInstances.ResetConnectionStats">
            <summary>设置 NetworkClient.ResetConnectionStats() 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Networking.Fakes.ShimNetworkClient.AllInstances.SendByChannelInt16MessageBaseInt32">
            <summary>设置 NetworkClient.SendByChannel(Int16 msgType, MessageBase msg, Int32 channelId) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Networking.Fakes.ShimNetworkClient.AllInstances.SendBytesByteArrayInt32Int32">
            <summary>设置 NetworkClient.SendBytes(Byte[] data, Int32 numBytes, Int32 channelId) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Networking.Fakes.ShimNetworkClient.AllInstances.SendInt16MessageBase">
            <summary>设置 NetworkClient.Send(Int16 msgType, MessageBase msg) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Networking.Fakes.ShimNetworkClient.AllInstances.SendUnreliableInt16MessageBase">
            <summary>设置 NetworkClient.SendUnreliable(Int16 msgType, MessageBase msg) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Networking.Fakes.ShimNetworkClient.AllInstances.SendWriterNetworkWriterInt32">
            <summary>设置 NetworkClient.SendWriter(NetworkWriter writer, Int32 channelId) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Networking.Fakes.ShimNetworkClient.AllInstances.SetHandlersNetworkConnection">
            <summary>设置 NetworkClient.SetHandlers(NetworkConnection conn) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Networking.Fakes.ShimNetworkClient.AllInstances.SetMaxDelaySingle">
            <summary>设置 NetworkClient.SetMaxDelay(Single seconds) 的 填充码</summary>
        </member>
        <member name="M:UnityEngine.Networking.Fakes.ShimNetworkClient.AllInstances.SetNetworkConnectionClassOf1``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Action{UnityEngine.Networking.NetworkClient})">
            <summary>设置 NetworkClient.SetNetworkConnectionClass() 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Networking.Fakes.ShimNetworkClient.AllInstances.Shutdown">
            <summary>设置 NetworkClient.Shutdown() 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Networking.Fakes.ShimNetworkClient.AllInstances.UnregisterHandlerInt16">
            <summary>设置 NetworkClient.UnregisterHandler(Int16 msgType) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Networking.Fakes.ShimNetworkClient.AllInstances.Update">
            <summary>设置 NetworkClient.Update() 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Networking.Fakes.ShimNetworkClient.AllInstances.connectionGet">
            <summary>设置 NetworkClient.get_connection() 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Networking.Fakes.ShimNetworkClient.AllInstances.handlersGet">
            <summary>设置 NetworkClient.get_handlers() 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Networking.Fakes.ShimNetworkClient.AllInstances.hostTopologyGet">
            <summary>设置 NetworkClient.get_hostTopology() 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Networking.Fakes.ShimNetworkClient.AllInstances.isConnectedGet">
            <summary>设置 NetworkClient.get_isConnected() 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Networking.Fakes.ShimNetworkClient.AllInstances.networkConnectionClassGet">
            <summary>设置 NetworkClient.get_networkConnectionClass() 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Networking.Fakes.ShimNetworkClient.AllInstances.numChannelsGet">
            <summary>设置 NetworkClient.get_numChannels() 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Networking.Fakes.ShimNetworkClient.AllInstances.peersGet">
            <summary>设置 NetworkClient.get_peers() 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Networking.Fakes.ShimNetworkClient.AllInstances.serverIpGet">
            <summary>设置 NetworkClient.get_serverIp() 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Networking.Fakes.ShimNetworkClient.AllInstances.serverPortGet">
            <summary>设置 NetworkClient.get_serverPort() 的 填充码</summary>
        </member>
        <member name="M:UnityEngine.Networking.Fakes.ShimNetworkClient.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:UnityEngine.Networking.Fakes.ShimNetworkClient.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:UnityEngine.Networking.Fakes.ShimNetworkClient.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:UnityEngine.Networking.Fakes.ShimNetworkClient.ConfigureConnectionConfigInt32">
            <summary>设置 NetworkClient.Configure(ConnectionConfig config, Int32 maxConnections) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Networking.Fakes.ShimNetworkClient.ConfigureHostTopology">
            <summary>设置 NetworkClient.Configure(HostTopology topology) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Networking.Fakes.ShimNetworkClient.ConnectEndPoint">
            <summary>设置 NetworkClient.Connect(EndPoint secureTunnelEndPoint) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Networking.Fakes.ShimNetworkClient.ConnectMatchInfo">
            <summary>设置 NetworkClient.Connect(MatchInfo matchInfo) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Networking.Fakes.ShimNetworkClient.ConnectStringInt32">
            <summary>设置 NetworkClient.Connect(String serverIp, Int32 serverPort) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Networking.Fakes.ShimNetworkClient.ConnectWithRelayMatchInfo">
            <summary>设置 NetworkClient.ConnectWithRelay(MatchInfo info) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Networking.Fakes.ShimNetworkClient.ConnectWithSimulatorStringInt32Int32Single">
            <summary>设置 NetworkClient.ConnectWithSimulator(String serverIp, Int32 serverPort, Int32 latency, Single packetLoss) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Networking.Fakes.ShimNetworkClient.Constructor">
            <summary>设置 NetworkClient.NetworkClient() 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Networking.Fakes.ShimNetworkClient.ContinueConnect">
            <summary>设置 NetworkClient.ContinueConnect() 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Networking.Fakes.ShimNetworkClient.Disconnect">
            <summary>设置 NetworkClient.Disconnect() 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Networking.Fakes.ShimNetworkClient.GenerateConnectErrorInt32">
            <summary>设置 NetworkClient.GenerateConnectError(Int32 error) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Networking.Fakes.ShimNetworkClient.GenerateDataErrorInt32">
            <summary>设置 NetworkClient.GenerateDataError(Int32 error) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Networking.Fakes.ShimNetworkClient.GenerateDisconnectErrorInt32">
            <summary>设置 NetworkClient.GenerateDisconnectError(Int32 error) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Networking.Fakes.ShimNetworkClient.GenerateErrorInt32">
            <summary>设置 NetworkClient.GenerateError(Int32 error) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Networking.Fakes.ShimNetworkClient.GetConnectionStats">
            <summary>设置 NetworkClient.GetConnectionStats() 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Networking.Fakes.ShimNetworkClient.GetHostAddressesCallbackIAsyncResult">
            <summary>设置 NetworkClient.GetHostAddressesCallback(IAsyncResult ar) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Networking.Fakes.ShimNetworkClient.GetRTT">
            <summary>设置 NetworkClient.GetRTT() 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Networking.Fakes.ShimNetworkClient.GetStatsInInt32OutInt32Out">
            <summary>设置 NetworkClient.GetStatsIn(Int32&amp; numMsgs, Int32&amp; numBytes) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Networking.Fakes.ShimNetworkClient.GetTotalConnectionStats">
            <summary>设置 NetworkClient.GetTotalConnectionStats() 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Networking.Fakes.ShimNetworkClient.IsValidIpV6String">
            <summary>设置 NetworkClient.IsValidIpV6(String address) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Networking.Fakes.ShimNetworkClient.OnCRCNetworkMessage">
            <summary>设置 NetworkClient.OnCRC(NetworkMessage netMsg) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Networking.Fakes.ShimNetworkClient.OnPeerInfoNetworkMessage">
            <summary>设置 NetworkClient.OnPeerInfo(NetworkMessage netMsg) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Networking.Fakes.ShimNetworkClient.PrepareForConnect">
            <summary>设置 NetworkClient.PrepareForConnect() 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Networking.Fakes.ShimNetworkClient.RegisterHandlerInt16NetworkMessageDelegate">
            <summary>设置 NetworkClient.RegisterHandler(Int16 msgType, NetworkMessageDelegate handler) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Networking.Fakes.ShimNetworkClient.RegisterHandlerSafeInt16NetworkMessageDelegate">
            <summary>设置 NetworkClient.RegisterHandlerSafe(Int16 msgType, NetworkMessageDelegate handler) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Networking.Fakes.ShimNetworkClient.RegisterSystemHandlersBoolean">
            <summary>设置 NetworkClient.RegisterSystemHandlers(Boolean localClient) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Networking.Fakes.ShimNetworkClient.RemoveClientNetworkClient">
            <summary>设置 NetworkClient.RemoveClient(NetworkClient client) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Networking.Fakes.ShimNetworkClient.ResetConnectionStats">
            <summary>设置 NetworkClient.ResetConnectionStats() 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Networking.Fakes.ShimNetworkClient.SendByChannelInt16MessageBaseInt32">
            <summary>设置 NetworkClient.SendByChannel(Int16 msgType, MessageBase msg, Int32 channelId) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Networking.Fakes.ShimNetworkClient.SendBytesByteArrayInt32Int32">
            <summary>设置 NetworkClient.SendBytes(Byte[] data, Int32 numBytes, Int32 channelId) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Networking.Fakes.ShimNetworkClient.SendInt16MessageBase">
            <summary>设置 NetworkClient.Send(Int16 msgType, MessageBase msg) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Networking.Fakes.ShimNetworkClient.SendUnreliableInt16MessageBase">
            <summary>设置 NetworkClient.SendUnreliable(Int16 msgType, MessageBase msg) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Networking.Fakes.ShimNetworkClient.SendWriterNetworkWriterInt32">
            <summary>设置 NetworkClient.SendWriter(NetworkWriter writer, Int32 channelId) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Networking.Fakes.ShimNetworkClient.SetActiveBoolean">
            <summary>设置 NetworkClient.SetActive(Boolean state) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Networking.Fakes.ShimNetworkClient.SetHandlersNetworkConnection">
            <summary>设置 NetworkClient.SetHandlers(NetworkConnection conn) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Networking.Fakes.ShimNetworkClient.SetMaxDelaySingle">
            <summary>设置 NetworkClient.SetMaxDelay(Single seconds) 的 填充码</summary>
        </member>
        <member name="M:UnityEngine.Networking.Fakes.ShimNetworkClient.SetNetworkConnectionClassOf1``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Action)">
            <summary>设置 NetworkClient.SetNetworkConnectionClass() 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Networking.Fakes.ShimNetworkClient.Shutdown">
            <summary>设置 NetworkClient.Shutdown() 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Networking.Fakes.ShimNetworkClient.ShutdownAll">
            <summary>设置 NetworkClient.ShutdownAll() 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Networking.Fakes.ShimNetworkClient.StaticConstructor">
            <summary>设置 NetworkClient.NetworkClient() 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Networking.Fakes.ShimNetworkClient.UnregisterHandlerInt16">
            <summary>设置 NetworkClient.UnregisterHandler(Int16 msgType) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Networking.Fakes.ShimNetworkClient.Update">
            <summary>设置 NetworkClient.Update() 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Networking.Fakes.ShimNetworkClient.UpdateClients">
            <summary>设置 NetworkClient.UpdateClients() 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Networking.Fakes.ShimNetworkClient.activeGet">
            <summary>设置 NetworkClient.get_active() 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Networking.Fakes.ShimNetworkClient.allClientsGet">
            <summary>设置 NetworkClient.get_allClients() 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Networking.Fakes.ShimNetworkClient.connectionGet">
            <summary>设置 NetworkClient.get_connection() 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Networking.Fakes.ShimNetworkClient.handlersGet">
            <summary>设置 NetworkClient.get_handlers() 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Networking.Fakes.ShimNetworkClient.hostTopologyGet">
            <summary>设置 NetworkClient.get_hostTopology() 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Networking.Fakes.ShimNetworkClient.isConnectedGet">
            <summary>设置 NetworkClient.get_isConnected() 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Networking.Fakes.ShimNetworkClient.networkConnectionClassGet">
            <summary>设置 NetworkClient.get_networkConnectionClass() 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Networking.Fakes.ShimNetworkClient.numChannelsGet">
            <summary>设置 NetworkClient.get_numChannels() 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Networking.Fakes.ShimNetworkClient.peersGet">
            <summary>设置 NetworkClient.get_peers() 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Networking.Fakes.ShimNetworkClient.serverIpGet">
            <summary>设置 NetworkClient.get_serverIp() 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Networking.Fakes.ShimNetworkClient.serverPortGet">
            <summary>设置 NetworkClient.get_serverPort() 的 填充码</summary>
        </member>
        <member name="T:UnityEngine.Networking.Fakes.ShimNetworkConnection">
            <summary>UnityEngine.Networking.NetworkConnection 的填充码类型</summary>
        </member>
        <member name="M:UnityEngine.Networking.Fakes.ShimNetworkConnection.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:UnityEngine.Networking.Fakes.ShimNetworkConnection.#ctor(UnityEngine.Networking.NetworkConnection)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="P:UnityEngine.Networking.Fakes.ShimNetworkConnection.AddOwnedObjectNetworkIdentity">
            <summary>设置 NetworkConnection.AddOwnedObject(NetworkIdentity obj) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Networking.Fakes.ShimNetworkConnection.AddToVisListNetworkIdentity">
            <summary>设置 NetworkConnection.AddToVisList(NetworkIdentity uv) 的 填充码</summary>
        </member>
        <member name="T:UnityEngine.Networking.Fakes.ShimNetworkConnection.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:UnityEngine.Networking.Fakes.ShimNetworkConnection.AllInstances.AddOwnedObjectNetworkIdentity">
            <summary>设置 NetworkConnection.AddOwnedObject(NetworkIdentity obj) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Networking.Fakes.ShimNetworkConnection.AllInstances.AddToVisListNetworkIdentity">
            <summary>设置 NetworkConnection.AddToVisList(NetworkIdentity uv) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Networking.Fakes.ShimNetworkConnection.AllInstances.CheckChannelInt32">
            <summary>设置 NetworkConnection.CheckChannel(Int32 channelId) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Networking.Fakes.ShimNetworkConnection.AllInstances.Disconnect">
            <summary>设置 NetworkConnection.Disconnect() 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Networking.Fakes.ShimNetworkConnection.AllInstances.Dispose">
            <summary>设置 NetworkConnection.Dispose() 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Networking.Fakes.ShimNetworkConnection.AllInstances.DisposeBoolean">
            <summary>设置 NetworkConnection.Dispose(Boolean disposing) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Networking.Fakes.ShimNetworkConnection.AllInstances.FlushChannels">
            <summary>设置 NetworkConnection.FlushChannels() 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Networking.Fakes.ShimNetworkConnection.AllInstances.GetPlayerControllerInt16PlayerControllerOut">
            <summary>设置 NetworkConnection.GetPlayerController(Int16 playerControllerId, PlayerController&amp; playerController) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Networking.Fakes.ShimNetworkConnection.AllInstances.GetStatsInInt32OutInt32Out">
            <summary>设置 NetworkConnection.GetStatsIn(Int32&amp; numMsgs, Int32&amp; numBytes) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Networking.Fakes.ShimNetworkConnection.AllInstances.GetStatsOutInt32OutInt32OutInt32OutInt32Out">
            <summary>设置 NetworkConnection.GetStatsOut(Int32&amp; numMsgs, Int32&amp; numBufferedMsgs, Int32&amp; numBytes, Int32&amp; lastBufferedPerSecond) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Networking.Fakes.ShimNetworkConnection.AllInstances.HandleBytesByteArrayInt32Int32">
            <summary>设置 NetworkConnection.HandleBytes(Byte[] buffer, Int32 receivedSize, Int32 channelId) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Networking.Fakes.ShimNetworkConnection.AllInstances.HandleReaderNetworkReaderInt32Int32">
            <summary>设置 NetworkConnection.HandleReader(NetworkReader reader, Int32 receivedSize, Int32 channelId) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Networking.Fakes.ShimNetworkConnection.AllInstances.InitializeStringInt32Int32HostTopology">
            <summary>设置 NetworkConnection.Initialize(String networkAddress, Int32 networkHostId, Int32 networkConnectionId, HostTopology hostTopology) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Networking.Fakes.ShimNetworkConnection.AllInstances.InvokeHandlerInt16NetworkReaderInt32">
            <summary>设置 NetworkConnection.InvokeHandler(Int16 msgType, NetworkReader reader, Int32 channelId) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Networking.Fakes.ShimNetworkConnection.AllInstances.InvokeHandlerNetworkMessage">
            <summary>设置 NetworkConnection.InvokeHandler(NetworkMessage netMsg) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Networking.Fakes.ShimNetworkConnection.AllInstances.InvokeHandlerNoDataInt16">
            <summary>设置 NetworkConnection.InvokeHandlerNoData(Int16 msgType) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Networking.Fakes.ShimNetworkConnection.AllInstances.LogSendByteArray">
            <summary>设置 NetworkConnection.LogSend(Byte[] bytes) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Networking.Fakes.ShimNetworkConnection.AllInstances.RegisterHandlerInt16NetworkMessageDelegate">
            <summary>设置 NetworkConnection.RegisterHandler(Int16 msgType, NetworkMessageDelegate handler) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Networking.Fakes.ShimNetworkConnection.AllInstances.RemoveFromVisListNetworkIdentityBoolean">
            <summary>设置 NetworkConnection.RemoveFromVisList(NetworkIdentity uv, Boolean isDestroyed) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Networking.Fakes.ShimNetworkConnection.AllInstances.RemoveObservers">
            <summary>设置 NetworkConnection.RemoveObservers() 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Networking.Fakes.ShimNetworkConnection.AllInstances.RemoveOwnedObjectNetworkIdentity">
            <summary>设置 NetworkConnection.RemoveOwnedObject(NetworkIdentity obj) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Networking.Fakes.ShimNetworkConnection.AllInstances.RemovePlayerControllerInt16">
            <summary>设置 NetworkConnection.RemovePlayerController(Int16 playerControllerId) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Networking.Fakes.ShimNetworkConnection.AllInstances.ResetStats">
            <summary>设置 NetworkConnection.ResetStats() 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Networking.Fakes.ShimNetworkConnection.AllInstances.SendByChannelInt16MessageBaseInt32">
            <summary>设置 NetworkConnection.SendByChannel(Int16 msgType, MessageBase msg, Int32 channelId) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Networking.Fakes.ShimNetworkConnection.AllInstances.SendBytesByteArrayInt32Int32">
            <summary>设置 NetworkConnection.SendBytes(Byte[] bytes, Int32 numBytes, Int32 channelId) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Networking.Fakes.ShimNetworkConnection.AllInstances.SendInt16MessageBase">
            <summary>设置 NetworkConnection.Send(Int16 msgType, MessageBase msg) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Networking.Fakes.ShimNetworkConnection.AllInstances.SendUnreliableInt16MessageBase">
            <summary>设置 NetworkConnection.SendUnreliable(Int16 msgType, MessageBase msg) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Networking.Fakes.ShimNetworkConnection.AllInstances.SendWriterNetworkWriterInt32">
            <summary>设置 NetworkConnection.SendWriter(NetworkWriter writer, Int32 channelId) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Networking.Fakes.ShimNetworkConnection.AllInstances.SetChannelOptionInt32ChannelOptionInt32">
            <summary>设置 NetworkConnection.SetChannelOption(Int32 channelId, ChannelOption option, Int32 value) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Networking.Fakes.ShimNetworkConnection.AllInstances.SetMaxDelaySingle">
            <summary>设置 NetworkConnection.SetMaxDelay(Single seconds) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Networking.Fakes.ShimNetworkConnection.AllInstances.SetPlayerControllerPlayerController">
            <summary>设置 NetworkConnection.SetPlayerController(PlayerController player) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Networking.Fakes.ShimNetworkConnection.AllInstances.ToString01">
            <summary>设置 NetworkConnection.ToString() 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Networking.Fakes.ShimNetworkConnection.AllInstances.TransportRecieveByteArrayInt32Int32">
            <summary>设置 NetworkConnection.TransportRecieve(Byte[] bytes, Int32 numBytes, Int32 channelId) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Networking.Fakes.ShimNetworkConnection.AllInstances.TransportSendByteArrayInt32Int32ByteOut">
            <summary>设置 NetworkConnection.TransportSend(Byte[] bytes, Int32 numBytes, Int32 channelId, Byte&amp; error) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Networking.Fakes.ShimNetworkConnection.AllInstances.UnregisterHandlerInt16">
            <summary>设置 NetworkConnection.UnregisterHandler(Int16 msgType) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Networking.Fakes.ShimNetworkConnection.AllInstances.clientOwnedObjectsGet">
            <summary>设置 NetworkConnection.get_clientOwnedObjects() 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Networking.Fakes.ShimNetworkConnection.AllInstances.packetStatsGet">
            <summary>设置 NetworkConnection.get_packetStats() 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Networking.Fakes.ShimNetworkConnection.AllInstances.playerControllersGet">
            <summary>设置 NetworkConnection.get_playerControllers() 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Networking.Fakes.ShimNetworkConnection.AllInstances.visListGet">
            <summary>设置 NetworkConnection.get_visList() 的 填充码</summary>
        </member>
        <member name="M:UnityEngine.Networking.Fakes.ShimNetworkConnection.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:UnityEngine.Networking.Fakes.ShimNetworkConnection.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:UnityEngine.Networking.Fakes.ShimNetworkConnection.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="M:UnityEngine.Networking.Fakes.ShimNetworkConnection.Bind(System.IDisposable)">
            <summary>将接口的成员绑定到此填充码。</summary>
        </member>
        <member name="P:UnityEngine.Networking.Fakes.ShimNetworkConnection.CheckChannelInt32">
            <summary>设置 NetworkConnection.CheckChannel(Int32 channelId) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Networking.Fakes.ShimNetworkConnection.Constructor">
            <summary>设置 NetworkConnection.NetworkConnection() 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Networking.Fakes.ShimNetworkConnection.Disconnect">
            <summary>设置 NetworkConnection.Disconnect() 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Networking.Fakes.ShimNetworkConnection.Dispose">
            <summary>设置 NetworkConnection.Dispose() 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Networking.Fakes.ShimNetworkConnection.DisposeBoolean">
            <summary>设置 NetworkConnection.Dispose(Boolean disposing) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Networking.Fakes.ShimNetworkConnection.FlushChannels">
            <summary>设置 NetworkConnection.FlushChannels() 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Networking.Fakes.ShimNetworkConnection.GetPlayerControllerInt16PlayerControllerOut">
            <summary>设置 NetworkConnection.GetPlayerController(Int16 playerControllerId, PlayerController&amp; playerController) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Networking.Fakes.ShimNetworkConnection.GetStatsInInt32OutInt32Out">
            <summary>设置 NetworkConnection.GetStatsIn(Int32&amp; numMsgs, Int32&amp; numBytes) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Networking.Fakes.ShimNetworkConnection.HandleBytesByteArrayInt32Int32">
            <summary>设置 NetworkConnection.HandleBytes(Byte[] buffer, Int32 receivedSize, Int32 channelId) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Networking.Fakes.ShimNetworkConnection.HandleReaderNetworkReaderInt32Int32">
            <summary>设置 NetworkConnection.HandleReader(NetworkReader reader, Int32 receivedSize, Int32 channelId) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Networking.Fakes.ShimNetworkConnection.InitializeStringInt32Int32HostTopology">
            <summary>设置 NetworkConnection.Initialize(String networkAddress, Int32 networkHostId, Int32 networkConnectionId, HostTopology hostTopology) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Networking.Fakes.ShimNetworkConnection.InvokeHandlerInt16NetworkReaderInt32">
            <summary>设置 NetworkConnection.InvokeHandler(Int16 msgType, NetworkReader reader, Int32 channelId) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Networking.Fakes.ShimNetworkConnection.InvokeHandlerNetworkMessage">
            <summary>设置 NetworkConnection.InvokeHandler(NetworkMessage netMsg) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Networking.Fakes.ShimNetworkConnection.InvokeHandlerNoDataInt16">
            <summary>设置 NetworkConnection.InvokeHandlerNoData(Int16 msgType) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Networking.Fakes.ShimNetworkConnection.IsReliableQoSQosType">
            <summary>设置 NetworkConnection.IsReliableQoS(QosType qos) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Networking.Fakes.ShimNetworkConnection.LogSendByteArray">
            <summary>设置 NetworkConnection.LogSend(Byte[] bytes) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Networking.Fakes.ShimNetworkConnection.RegisterHandlerInt16NetworkMessageDelegate">
            <summary>设置 NetworkConnection.RegisterHandler(Int16 msgType, NetworkMessageDelegate handler) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Networking.Fakes.ShimNetworkConnection.RemoveFromVisListNetworkIdentityBoolean">
            <summary>设置 NetworkConnection.RemoveFromVisList(NetworkIdentity uv, Boolean isDestroyed) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Networking.Fakes.ShimNetworkConnection.RemoveObservers">
            <summary>设置 NetworkConnection.RemoveObservers() 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Networking.Fakes.ShimNetworkConnection.RemoveOwnedObjectNetworkIdentity">
            <summary>设置 NetworkConnection.RemoveOwnedObject(NetworkIdentity obj) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Networking.Fakes.ShimNetworkConnection.RemovePlayerControllerInt16">
            <summary>设置 NetworkConnection.RemovePlayerController(Int16 playerControllerId) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Networking.Fakes.ShimNetworkConnection.ResetStats">
            <summary>设置 NetworkConnection.ResetStats() 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Networking.Fakes.ShimNetworkConnection.SendByChannelInt16MessageBaseInt32">
            <summary>设置 NetworkConnection.SendByChannel(Int16 msgType, MessageBase msg, Int32 channelId) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Networking.Fakes.ShimNetworkConnection.SendBytesByteArrayInt32Int32">
            <summary>设置 NetworkConnection.SendBytes(Byte[] bytes, Int32 numBytes, Int32 channelId) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Networking.Fakes.ShimNetworkConnection.SendInt16MessageBase">
            <summary>设置 NetworkConnection.Send(Int16 msgType, MessageBase msg) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Networking.Fakes.ShimNetworkConnection.SendUnreliableInt16MessageBase">
            <summary>设置 NetworkConnection.SendUnreliable(Int16 msgType, MessageBase msg) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Networking.Fakes.ShimNetworkConnection.SendWriterNetworkWriterInt32">
            <summary>设置 NetworkConnection.SendWriter(NetworkWriter writer, Int32 channelId) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Networking.Fakes.ShimNetworkConnection.SetChannelOptionInt32ChannelOptionInt32">
            <summary>设置 NetworkConnection.SetChannelOption(Int32 channelId, ChannelOption option, Int32 value) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Networking.Fakes.ShimNetworkConnection.SetMaxDelaySingle">
            <summary>设置 NetworkConnection.SetMaxDelay(Single seconds) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Networking.Fakes.ShimNetworkConnection.SetPlayerControllerPlayerController">
            <summary>设置 NetworkConnection.SetPlayerController(PlayerController player) 的 填充码</summary>
        </member>
        <member name="T:UnityEngine.Networking.Fakes.ShimNetworkConnection.ShimPacketStat">
            <summary>UnityEngine.Networking.NetworkConnection+PacketStat 的填充码类型</summary>
        </member>
        <member name="M:UnityEngine.Networking.Fakes.ShimNetworkConnection.ShimPacketStat.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:UnityEngine.Networking.Fakes.ShimNetworkConnection.ShimPacketStat.#ctor(UnityEngine.Networking.NetworkConnection.PacketStat)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="T:UnityEngine.Networking.Fakes.ShimNetworkConnection.ShimPacketStat.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:UnityEngine.Networking.Fakes.ShimNetworkConnection.ShimPacketStat.AllInstances.ToString01">
            <summary>设置 PacketStat.ToString() 的 填充码</summary>
        </member>
        <member name="M:UnityEngine.Networking.Fakes.ShimNetworkConnection.ShimPacketStat.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:UnityEngine.Networking.Fakes.ShimNetworkConnection.ShimPacketStat.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:UnityEngine.Networking.Fakes.ShimNetworkConnection.ShimPacketStat.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:UnityEngine.Networking.Fakes.ShimNetworkConnection.ShimPacketStat.Constructor">
            <summary>设置 PacketStat.PacketStat() 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Networking.Fakes.ShimNetworkConnection.ShimPacketStat.ToString">
            <summary>设置 PacketStat.ToString() 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Networking.Fakes.ShimNetworkConnection.StaticConstructor">
            <summary>设置 NetworkConnection.NetworkConnection() 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Networking.Fakes.ShimNetworkConnection.ToString">
            <summary>设置 NetworkConnection.ToString() 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Networking.Fakes.ShimNetworkConnection.TransportRecieveByteArrayInt32Int32">
            <summary>设置 NetworkConnection.TransportRecieve(Byte[] bytes, Int32 numBytes, Int32 channelId) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Networking.Fakes.ShimNetworkConnection.TransportSendByteArrayInt32Int32ByteOut">
            <summary>设置 NetworkConnection.TransportSend(Byte[] bytes, Int32 numBytes, Int32 channelId, Byte&amp; error) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Networking.Fakes.ShimNetworkConnection.UnregisterHandlerInt16">
            <summary>设置 NetworkConnection.UnregisterHandler(Int16 msgType) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Networking.Fakes.ShimNetworkConnection.clientOwnedObjectsGet">
            <summary>设置 NetworkConnection.get_clientOwnedObjects() 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Networking.Fakes.ShimNetworkConnection.packetStatsGet">
            <summary>设置 NetworkConnection.get_packetStats() 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Networking.Fakes.ShimNetworkConnection.playerControllersGet">
            <summary>设置 NetworkConnection.get_playerControllers() 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Networking.Fakes.ShimNetworkConnection.visListGet">
            <summary>设置 NetworkConnection.get_visList() 的 填充码</summary>
        </member>
        <member name="T:UnityEngine.Networking.Fakes.ShimNetworkDiscovery">
            <summary>UnityEngine.Networking.NetworkDiscovery 的填充码类型</summary>
        </member>
        <member name="M:UnityEngine.Networking.Fakes.ShimNetworkDiscovery.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:UnityEngine.Networking.Fakes.ShimNetworkDiscovery.#ctor(UnityEngine.Networking.NetworkDiscovery)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="T:UnityEngine.Networking.Fakes.ShimNetworkDiscovery.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:UnityEngine.Networking.Fakes.ShimNetworkDiscovery.AllInstances.Initialize">
            <summary>设置 NetworkDiscovery.Initialize() 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Networking.Fakes.ShimNetworkDiscovery.AllInstances.OnGUI">
            <summary>设置 NetworkDiscovery.OnGUI() 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Networking.Fakes.ShimNetworkDiscovery.AllInstances.OnReceivedBroadcastStringString">
            <summary>设置 NetworkDiscovery.OnReceivedBroadcast(String fromAddress, String data) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Networking.Fakes.ShimNetworkDiscovery.AllInstances.StartAsClient">
            <summary>设置 NetworkDiscovery.StartAsClient() 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Networking.Fakes.ShimNetworkDiscovery.AllInstances.StartAsServer">
            <summary>设置 NetworkDiscovery.StartAsServer() 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Networking.Fakes.ShimNetworkDiscovery.AllInstances.StopBroadcast">
            <summary>设置 NetworkDiscovery.StopBroadcast() 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Networking.Fakes.ShimNetworkDiscovery.AllInstances.Update">
            <summary>设置 NetworkDiscovery.Update() 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Networking.Fakes.ShimNetworkDiscovery.AllInstances.broadcastDataGet">
            <summary>设置 NetworkDiscovery.get_broadcastData() 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Networking.Fakes.ShimNetworkDiscovery.AllInstances.broadcastDataSetString">
            <summary>设置 NetworkDiscovery.set_broadcastData(String value) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Networking.Fakes.ShimNetworkDiscovery.AllInstances.broadcastIntervalGet">
            <summary>设置 NetworkDiscovery.get_broadcastInterval() 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Networking.Fakes.ShimNetworkDiscovery.AllInstances.broadcastIntervalSetInt32">
            <summary>设置 NetworkDiscovery.set_broadcastInterval(Int32 value) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Networking.Fakes.ShimNetworkDiscovery.AllInstances.broadcastKeyGet">
            <summary>设置 NetworkDiscovery.get_broadcastKey() 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Networking.Fakes.ShimNetworkDiscovery.AllInstances.broadcastKeySetInt32">
            <summary>设置 NetworkDiscovery.set_broadcastKey(Int32 value) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Networking.Fakes.ShimNetworkDiscovery.AllInstances.broadcastPortGet">
            <summary>设置 NetworkDiscovery.get_broadcastPort() 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Networking.Fakes.ShimNetworkDiscovery.AllInstances.broadcastPortSetInt32">
            <summary>设置 NetworkDiscovery.set_broadcastPort(Int32 value) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Networking.Fakes.ShimNetworkDiscovery.AllInstances.broadcastSubVersionGet">
            <summary>设置 NetworkDiscovery.get_broadcastSubVersion() 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Networking.Fakes.ShimNetworkDiscovery.AllInstances.broadcastSubVersionSetInt32">
            <summary>设置 NetworkDiscovery.set_broadcastSubVersion(Int32 value) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Networking.Fakes.ShimNetworkDiscovery.AllInstances.broadcastVersionGet">
            <summary>设置 NetworkDiscovery.get_broadcastVersion() 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Networking.Fakes.ShimNetworkDiscovery.AllInstances.broadcastVersionSetInt32">
            <summary>设置 NetworkDiscovery.set_broadcastVersion(Int32 value) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Networking.Fakes.ShimNetworkDiscovery.AllInstances.broadcastsReceivedGet">
            <summary>设置 NetworkDiscovery.get_broadcastsReceived() 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Networking.Fakes.ShimNetworkDiscovery.AllInstances.hostIdGet">
            <summary>设置 NetworkDiscovery.get_hostId() 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Networking.Fakes.ShimNetworkDiscovery.AllInstances.hostIdSetInt32">
            <summary>设置 NetworkDiscovery.set_hostId(Int32 value) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Networking.Fakes.ShimNetworkDiscovery.AllInstances.isClientGet">
            <summary>设置 NetworkDiscovery.get_isClient() 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Networking.Fakes.ShimNetworkDiscovery.AllInstances.isClientSetBoolean">
            <summary>设置 NetworkDiscovery.set_isClient(Boolean value) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Networking.Fakes.ShimNetworkDiscovery.AllInstances.isServerGet">
            <summary>设置 NetworkDiscovery.get_isServer() 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Networking.Fakes.ShimNetworkDiscovery.AllInstances.isServerSetBoolean">
            <summary>设置 NetworkDiscovery.set_isServer(Boolean value) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Networking.Fakes.ShimNetworkDiscovery.AllInstances.offsetXGet">
            <summary>设置 NetworkDiscovery.get_offsetX() 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Networking.Fakes.ShimNetworkDiscovery.AllInstances.offsetXSetInt32">
            <summary>设置 NetworkDiscovery.set_offsetX(Int32 value) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Networking.Fakes.ShimNetworkDiscovery.AllInstances.offsetYGet">
            <summary>设置 NetworkDiscovery.get_offsetY() 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Networking.Fakes.ShimNetworkDiscovery.AllInstances.offsetYSetInt32">
            <summary>设置 NetworkDiscovery.set_offsetY(Int32 value) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Networking.Fakes.ShimNetworkDiscovery.AllInstances.runningGet">
            <summary>设置 NetworkDiscovery.get_running() 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Networking.Fakes.ShimNetworkDiscovery.AllInstances.runningSetBoolean">
            <summary>设置 NetworkDiscovery.set_running(Boolean value) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Networking.Fakes.ShimNetworkDiscovery.AllInstances.showGUIGet">
            <summary>设置 NetworkDiscovery.get_showGUI() 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Networking.Fakes.ShimNetworkDiscovery.AllInstances.showGUISetBoolean">
            <summary>设置 NetworkDiscovery.set_showGUI(Boolean value) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Networking.Fakes.ShimNetworkDiscovery.AllInstances.useNetworkManagerGet">
            <summary>设置 NetworkDiscovery.get_useNetworkManager() 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Networking.Fakes.ShimNetworkDiscovery.AllInstances.useNetworkManagerSetBoolean">
            <summary>设置 NetworkDiscovery.set_useNetworkManager(Boolean value) 的 填充码</summary>
        </member>
        <member name="M:UnityEngine.Networking.Fakes.ShimNetworkDiscovery.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:UnityEngine.Networking.Fakes.ShimNetworkDiscovery.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:UnityEngine.Networking.Fakes.ShimNetworkDiscovery.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:UnityEngine.Networking.Fakes.ShimNetworkDiscovery.BytesToStringByteArray">
            <summary>设置 NetworkDiscovery.BytesToString(Byte[] bytes) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Networking.Fakes.ShimNetworkDiscovery.Constructor">
            <summary>设置 NetworkDiscovery.NetworkDiscovery() 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Networking.Fakes.ShimNetworkDiscovery.Initialize">
            <summary>设置 NetworkDiscovery.Initialize() 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Networking.Fakes.ShimNetworkDiscovery.OnGUI">
            <summary>设置 NetworkDiscovery.OnGUI() 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Networking.Fakes.ShimNetworkDiscovery.OnReceivedBroadcastStringString">
            <summary>设置 NetworkDiscovery.OnReceivedBroadcast(String fromAddress, String data) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Networking.Fakes.ShimNetworkDiscovery.StartAsClient">
            <summary>设置 NetworkDiscovery.StartAsClient() 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Networking.Fakes.ShimNetworkDiscovery.StartAsServer">
            <summary>设置 NetworkDiscovery.StartAsServer() 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Networking.Fakes.ShimNetworkDiscovery.StopBroadcast">
            <summary>设置 NetworkDiscovery.StopBroadcast() 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Networking.Fakes.ShimNetworkDiscovery.StringToBytesString">
            <summary>设置 NetworkDiscovery.StringToBytes(String str) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Networking.Fakes.ShimNetworkDiscovery.Update">
            <summary>设置 NetworkDiscovery.Update() 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Networking.Fakes.ShimNetworkDiscovery.broadcastDataGet">
            <summary>设置 NetworkDiscovery.get_broadcastData() 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Networking.Fakes.ShimNetworkDiscovery.broadcastDataSetString">
            <summary>设置 NetworkDiscovery.set_broadcastData(String value) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Networking.Fakes.ShimNetworkDiscovery.broadcastIntervalGet">
            <summary>设置 NetworkDiscovery.get_broadcastInterval() 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Networking.Fakes.ShimNetworkDiscovery.broadcastIntervalSetInt32">
            <summary>设置 NetworkDiscovery.set_broadcastInterval(Int32 value) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Networking.Fakes.ShimNetworkDiscovery.broadcastKeyGet">
            <summary>设置 NetworkDiscovery.get_broadcastKey() 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Networking.Fakes.ShimNetworkDiscovery.broadcastKeySetInt32">
            <summary>设置 NetworkDiscovery.set_broadcastKey(Int32 value) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Networking.Fakes.ShimNetworkDiscovery.broadcastPortGet">
            <summary>设置 NetworkDiscovery.get_broadcastPort() 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Networking.Fakes.ShimNetworkDiscovery.broadcastPortSetInt32">
            <summary>设置 NetworkDiscovery.set_broadcastPort(Int32 value) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Networking.Fakes.ShimNetworkDiscovery.broadcastSubVersionGet">
            <summary>设置 NetworkDiscovery.get_broadcastSubVersion() 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Networking.Fakes.ShimNetworkDiscovery.broadcastSubVersionSetInt32">
            <summary>设置 NetworkDiscovery.set_broadcastSubVersion(Int32 value) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Networking.Fakes.ShimNetworkDiscovery.broadcastVersionGet">
            <summary>设置 NetworkDiscovery.get_broadcastVersion() 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Networking.Fakes.ShimNetworkDiscovery.broadcastVersionSetInt32">
            <summary>设置 NetworkDiscovery.set_broadcastVersion(Int32 value) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Networking.Fakes.ShimNetworkDiscovery.broadcastsReceivedGet">
            <summary>设置 NetworkDiscovery.get_broadcastsReceived() 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Networking.Fakes.ShimNetworkDiscovery.hostIdGet">
            <summary>设置 NetworkDiscovery.get_hostId() 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Networking.Fakes.ShimNetworkDiscovery.hostIdSetInt32">
            <summary>设置 NetworkDiscovery.set_hostId(Int32 value) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Networking.Fakes.ShimNetworkDiscovery.isClientGet">
            <summary>设置 NetworkDiscovery.get_isClient() 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Networking.Fakes.ShimNetworkDiscovery.isClientSetBoolean">
            <summary>设置 NetworkDiscovery.set_isClient(Boolean value) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Networking.Fakes.ShimNetworkDiscovery.isServerGet">
            <summary>设置 NetworkDiscovery.get_isServer() 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Networking.Fakes.ShimNetworkDiscovery.isServerSetBoolean">
            <summary>设置 NetworkDiscovery.set_isServer(Boolean value) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Networking.Fakes.ShimNetworkDiscovery.offsetXGet">
            <summary>设置 NetworkDiscovery.get_offsetX() 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Networking.Fakes.ShimNetworkDiscovery.offsetXSetInt32">
            <summary>设置 NetworkDiscovery.set_offsetX(Int32 value) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Networking.Fakes.ShimNetworkDiscovery.offsetYGet">
            <summary>设置 NetworkDiscovery.get_offsetY() 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Networking.Fakes.ShimNetworkDiscovery.offsetYSetInt32">
            <summary>设置 NetworkDiscovery.set_offsetY(Int32 value) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Networking.Fakes.ShimNetworkDiscovery.runningGet">
            <summary>设置 NetworkDiscovery.get_running() 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Networking.Fakes.ShimNetworkDiscovery.runningSetBoolean">
            <summary>设置 NetworkDiscovery.set_running(Boolean value) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Networking.Fakes.ShimNetworkDiscovery.showGUIGet">
            <summary>设置 NetworkDiscovery.get_showGUI() 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Networking.Fakes.ShimNetworkDiscovery.showGUISetBoolean">
            <summary>设置 NetworkDiscovery.set_showGUI(Boolean value) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Networking.Fakes.ShimNetworkDiscovery.useNetworkManagerGet">
            <summary>设置 NetworkDiscovery.get_useNetworkManager() 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Networking.Fakes.ShimNetworkDiscovery.useNetworkManagerSetBoolean">
            <summary>设置 NetworkDiscovery.set_useNetworkManager(Boolean value) 的 填充码</summary>
        </member>
        <member name="T:UnityEngine.Networking.Fakes.ShimNetworkHash128">
            <summary>UnityEngine.Networking.NetworkHash128 的填充码类型</summary>
        </member>
        <member name="M:UnityEngine.Networking.Fakes.ShimNetworkHash128.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="T:UnityEngine.Networking.Fakes.ShimNetworkHash128.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="M:UnityEngine.Networking.Fakes.ShimNetworkHash128.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:UnityEngine.Networking.Fakes.ShimNetworkHash128.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:UnityEngine.Networking.Fakes.ShimNetworkHash128.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:UnityEngine.Networking.Fakes.ShimNetworkHash128.HexToNumberChar">
            <summary>设置 NetworkHash128.HexToNumber(Char c) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Networking.Fakes.ShimNetworkHash128.ParseString">
            <summary>设置 NetworkHash128.Parse(String text) 的 填充码</summary>
        </member>
        <member name="T:UnityEngine.Networking.Fakes.ShimNetworkIdentity">
            <summary>UnityEngine.Networking.NetworkIdentity 的填充码类型</summary>
        </member>
        <member name="M:UnityEngine.Networking.Fakes.ShimNetworkIdentity.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:UnityEngine.Networking.Fakes.ShimNetworkIdentity.#ctor(UnityEngine.Networking.NetworkIdentity)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="P:UnityEngine.Networking.Fakes.ShimNetworkIdentity.AddObserverNetworkConnection">
            <summary>设置 NetworkIdentity.AddObserver(NetworkConnection conn) 的 填充码</summary>
        </member>
        <member name="T:UnityEngine.Networking.Fakes.ShimNetworkIdentity.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:UnityEngine.Networking.Fakes.ShimNetworkIdentity.AllInstances.AddObserverNetworkConnection">
            <summary>设置 NetworkIdentity.AddObserver(NetworkConnection conn) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Networking.Fakes.ShimNetworkIdentity.AllInstances.AssignAssetIDGameObject">
            <summary>设置 NetworkIdentity.AssignAssetID(GameObject prefab) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Networking.Fakes.ShimNetworkIdentity.AllInstances.AssignClientAuthorityNetworkConnection">
            <summary>设置 NetworkIdentity.AssignClientAuthority(NetworkConnection conn) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Networking.Fakes.ShimNetworkIdentity.AllInstances.CacheBehaviours">
            <summary>设置 NetworkIdentity.CacheBehaviours() 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Networking.Fakes.ShimNetworkIdentity.AllInstances.ClearClientOwner">
            <summary>设置 NetworkIdentity.ClearClientOwner() 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Networking.Fakes.ShimNetworkIdentity.AllInstances.ClearObservers">
            <summary>设置 NetworkIdentity.ClearObservers() 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Networking.Fakes.ShimNetworkIdentity.AllInstances.ForceSceneIdInt32">
            <summary>设置 NetworkIdentity.ForceSceneId(Int32 newSceneId) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Networking.Fakes.ShimNetworkIdentity.AllInstances.HandleClientAuthorityBoolean">
            <summary>设置 NetworkIdentity.HandleClientAuthority(Boolean authority) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Networking.Fakes.ShimNetworkIdentity.AllInstances.HandleCommandInt32NetworkReader">
            <summary>设置 NetworkIdentity.HandleCommand(Int32 cmdHash, NetworkReader reader) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Networking.Fakes.ShimNetworkIdentity.AllInstances.HandleRPCInt32NetworkReader">
            <summary>设置 NetworkIdentity.HandleRPC(Int32 cmdHash, NetworkReader reader) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Networking.Fakes.ShimNetworkIdentity.AllInstances.HandleSyncEventInt32NetworkReader">
            <summary>设置 NetworkIdentity.HandleSyncEvent(Int32 cmdHash, NetworkReader reader) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Networking.Fakes.ShimNetworkIdentity.AllInstances.HandleSyncListInt32NetworkReader">
            <summary>设置 NetworkIdentity.HandleSyncList(Int32 cmdHash, NetworkReader reader) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Networking.Fakes.ShimNetworkIdentity.AllInstances.OnCheckObserverNetworkConnection">
            <summary>设置 NetworkIdentity.OnCheckObserver(NetworkConnection conn) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Networking.Fakes.ShimNetworkIdentity.AllInstances.OnDestroy">
            <summary>设置 NetworkIdentity.OnDestroy() 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Networking.Fakes.ShimNetworkIdentity.AllInstances.OnNetworkDestroy">
            <summary>设置 NetworkIdentity.OnNetworkDestroy() 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Networking.Fakes.ShimNetworkIdentity.AllInstances.OnSetLocalVisibilityBoolean">
            <summary>设置 NetworkIdentity.OnSetLocalVisibility(Boolean vis) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Networking.Fakes.ShimNetworkIdentity.AllInstances.OnStartAuthority">
            <summary>设置 NetworkIdentity.OnStartAuthority() 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Networking.Fakes.ShimNetworkIdentity.AllInstances.OnStartClient">
            <summary>设置 NetworkIdentity.OnStartClient() 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Networking.Fakes.ShimNetworkIdentity.AllInstances.OnStartServer">
            <summary>设置 NetworkIdentity.OnStartServer() 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Networking.Fakes.ShimNetworkIdentity.AllInstances.OnStopAuthority">
            <summary>设置 NetworkIdentity.OnStopAuthority() 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Networking.Fakes.ShimNetworkIdentity.AllInstances.OnUpdateVarsNetworkReaderBoolean">
            <summary>设置 NetworkIdentity.OnUpdateVars(NetworkReader reader, Boolean initialState) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Networking.Fakes.ShimNetworkIdentity.AllInstances.OnValidate">
            <summary>设置 NetworkIdentity.OnValidate() 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Networking.Fakes.ShimNetworkIdentity.AllInstances.RebuildObserversBoolean">
            <summary>设置 NetworkIdentity.RebuildObservers(Boolean initialize) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Networking.Fakes.ShimNetworkIdentity.AllInstances.RemoveClientAuthorityNetworkConnection">
            <summary>设置 NetworkIdentity.RemoveClientAuthority(NetworkConnection conn) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Networking.Fakes.ShimNetworkIdentity.AllInstances.RemoveObserverInternalNetworkConnection">
            <summary>设置 NetworkIdentity.RemoveObserverInternal(NetworkConnection conn) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Networking.Fakes.ShimNetworkIdentity.AllInstances.RemoveObserverNetworkConnection">
            <summary>设置 NetworkIdentity.RemoveObserver(NetworkConnection conn) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Networking.Fakes.ShimNetworkIdentity.AllInstances.SetClientOwnerNetworkConnection">
            <summary>设置 NetworkIdentity.SetClientOwner(NetworkConnection conn) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Networking.Fakes.ShimNetworkIdentity.AllInstances.SetConnectionToClientNetworkConnectionInt16">
            <summary>设置 NetworkIdentity.SetConnectionToClient(NetworkConnection conn, Int16 newPlayerControllerId) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Networking.Fakes.ShimNetworkIdentity.AllInstances.SetConnectionToServerNetworkConnection">
            <summary>设置 NetworkIdentity.SetConnectionToServer(NetworkConnection conn) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Networking.Fakes.ShimNetworkIdentity.AllInstances.SetDynamicAssetIdNetworkHash128">
            <summary>设置 NetworkIdentity.SetDynamicAssetId(NetworkHash128 newAssetId) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Networking.Fakes.ShimNetworkIdentity.AllInstances.SetLocalPlayerInt16">
            <summary>设置 NetworkIdentity.SetLocalPlayer(Int16 localPlayerControllerId) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Networking.Fakes.ShimNetworkIdentity.AllInstances.SetNetworkInstanceIdNetworkInstanceId">
            <summary>设置 NetworkIdentity.SetNetworkInstanceId(NetworkInstanceId newNetId) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Networking.Fakes.ShimNetworkIdentity.AllInstances.SetNoServer">
            <summary>设置 NetworkIdentity.SetNoServer() 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Networking.Fakes.ShimNetworkIdentity.AllInstances.SetNotLocalPlayer">
            <summary>设置 NetworkIdentity.SetNotLocalPlayer() 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Networking.Fakes.ShimNetworkIdentity.AllInstances.SetupIDs">
            <summary>设置 NetworkIdentity.SetupIDs() 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Networking.Fakes.ShimNetworkIdentity.AllInstances.ThisIsAPrefab">
            <summary>设置 NetworkIdentity.ThisIsAPrefab() 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Networking.Fakes.ShimNetworkIdentity.AllInstances.ThisIsASceneObjectWithPrefabParentGameObjectOut">
            <summary>设置 NetworkIdentity.ThisIsASceneObjectWithPrefabParent(GameObject&amp; prefab) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Networking.Fakes.ShimNetworkIdentity.AllInstances.UNetSerializeAllVarsNetworkWriter">
            <summary>设置 NetworkIdentity.UNetSerializeAllVars(NetworkWriter writer) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Networking.Fakes.ShimNetworkIdentity.AllInstances.UNetUpdate">
            <summary>设置 NetworkIdentity.UNetUpdate() 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Networking.Fakes.ShimNetworkIdentity.AllInstances.UpdateClientServerBooleanBoolean">
            <summary>设置 NetworkIdentity.UpdateClientServer(Boolean isClientFlag, Boolean isServerFlag) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Networking.Fakes.ShimNetworkIdentity.AllInstances.assetIdGet">
            <summary>设置 NetworkIdentity.get_assetId() 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Networking.Fakes.ShimNetworkIdentity.AllInstances.clientAuthorityOwnerGet">
            <summary>设置 NetworkIdentity.get_clientAuthorityOwner() 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Networking.Fakes.ShimNetworkIdentity.AllInstances.connectionToClientGet">
            <summary>设置 NetworkIdentity.get_connectionToClient() 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Networking.Fakes.ShimNetworkIdentity.AllInstances.connectionToServerGet">
            <summary>设置 NetworkIdentity.get_connectionToServer() 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Networking.Fakes.ShimNetworkIdentity.AllInstances.hasAuthorityGet">
            <summary>设置 NetworkIdentity.get_hasAuthority() 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Networking.Fakes.ShimNetworkIdentity.AllInstances.isClientGet">
            <summary>设置 NetworkIdentity.get_isClient() 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Networking.Fakes.ShimNetworkIdentity.AllInstances.isLocalPlayerGet">
            <summary>设置 NetworkIdentity.get_isLocalPlayer() 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Networking.Fakes.ShimNetworkIdentity.AllInstances.isServerGet">
            <summary>设置 NetworkIdentity.get_isServer() 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Networking.Fakes.ShimNetworkIdentity.AllInstances.localPlayerAuthorityGet">
            <summary>设置 NetworkIdentity.get_localPlayerAuthority() 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Networking.Fakes.ShimNetworkIdentity.AllInstances.localPlayerAuthoritySetBoolean">
            <summary>设置 NetworkIdentity.set_localPlayerAuthority(Boolean value) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Networking.Fakes.ShimNetworkIdentity.AllInstances.netIdGet">
            <summary>设置 NetworkIdentity.get_netId() 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Networking.Fakes.ShimNetworkIdentity.AllInstances.observersGet">
            <summary>设置 NetworkIdentity.get_observers() 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Networking.Fakes.ShimNetworkIdentity.AllInstances.playerControllerIdGet">
            <summary>设置 NetworkIdentity.get_playerControllerId() 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Networking.Fakes.ShimNetworkIdentity.AllInstances.sceneIdGet">
            <summary>设置 NetworkIdentity.get_sceneId() 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Networking.Fakes.ShimNetworkIdentity.AllInstances.serverOnlyGet">
            <summary>设置 NetworkIdentity.get_serverOnly() 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Networking.Fakes.ShimNetworkIdentity.AllInstances.serverOnlySetBoolean">
            <summary>设置 NetworkIdentity.set_serverOnly(Boolean value) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Networking.Fakes.ShimNetworkIdentity.AssignAssetIDGameObject">
            <summary>设置 NetworkIdentity.AssignAssetID(GameObject prefab) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Networking.Fakes.ShimNetworkIdentity.AssignClientAuthorityNetworkConnection">
            <summary>设置 NetworkIdentity.AssignClientAuthority(NetworkConnection conn) 的 填充码</summary>
        </member>
        <member name="M:UnityEngine.Networking.Fakes.ShimNetworkIdentity.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:UnityEngine.Networking.Fakes.ShimNetworkIdentity.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:UnityEngine.Networking.Fakes.ShimNetworkIdentity.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:UnityEngine.Networking.Fakes.ShimNetworkIdentity.CacheBehaviours">
            <summary>设置 NetworkIdentity.CacheBehaviours() 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Networking.Fakes.ShimNetworkIdentity.ClearClientOwner">
            <summary>设置 NetworkIdentity.ClearClientOwner() 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Networking.Fakes.ShimNetworkIdentity.ClearObservers">
            <summary>设置 NetworkIdentity.ClearObservers() 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Networking.Fakes.ShimNetworkIdentity.Constructor">
            <summary>设置 NetworkIdentity.NetworkIdentity() 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Networking.Fakes.ShimNetworkIdentity.ForceSceneIdInt32">
            <summary>设置 NetworkIdentity.ForceSceneId(Int32 newSceneId) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Networking.Fakes.ShimNetworkIdentity.GetNextNetworkId">
            <summary>设置 NetworkIdentity.GetNextNetworkId() 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Networking.Fakes.ShimNetworkIdentity.HandleClientAuthorityBoolean">
            <summary>设置 NetworkIdentity.HandleClientAuthority(Boolean authority) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Networking.Fakes.ShimNetworkIdentity.HandleCommandInt32NetworkReader">
            <summary>设置 NetworkIdentity.HandleCommand(Int32 cmdHash, NetworkReader reader) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Networking.Fakes.ShimNetworkIdentity.HandleRPCInt32NetworkReader">
            <summary>设置 NetworkIdentity.HandleRPC(Int32 cmdHash, NetworkReader reader) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Networking.Fakes.ShimNetworkIdentity.HandleSyncEventInt32NetworkReader">
            <summary>设置 NetworkIdentity.HandleSyncEvent(Int32 cmdHash, NetworkReader reader) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Networking.Fakes.ShimNetworkIdentity.HandleSyncListInt32NetworkReader">
            <summary>设置 NetworkIdentity.HandleSyncList(Int32 cmdHash, NetworkReader reader) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Networking.Fakes.ShimNetworkIdentity.OnCheckObserverNetworkConnection">
            <summary>设置 NetworkIdentity.OnCheckObserver(NetworkConnection conn) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Networking.Fakes.ShimNetworkIdentity.OnDestroy">
            <summary>设置 NetworkIdentity.OnDestroy() 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Networking.Fakes.ShimNetworkIdentity.OnNetworkDestroy">
            <summary>设置 NetworkIdentity.OnNetworkDestroy() 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Networking.Fakes.ShimNetworkIdentity.OnSetLocalVisibilityBoolean">
            <summary>设置 NetworkIdentity.OnSetLocalVisibility(Boolean vis) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Networking.Fakes.ShimNetworkIdentity.OnStartAuthority">
            <summary>设置 NetworkIdentity.OnStartAuthority() 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Networking.Fakes.ShimNetworkIdentity.OnStartClient">
            <summary>设置 NetworkIdentity.OnStartClient() 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Networking.Fakes.ShimNetworkIdentity.OnStartServer">
            <summary>设置 NetworkIdentity.OnStartServer() 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Networking.Fakes.ShimNetworkIdentity.OnStopAuthority">
            <summary>设置 NetworkIdentity.OnStopAuthority() 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Networking.Fakes.ShimNetworkIdentity.OnUpdateVarsNetworkReaderBoolean">
            <summary>设置 NetworkIdentity.OnUpdateVars(NetworkReader reader, Boolean initialState) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Networking.Fakes.ShimNetworkIdentity.OnValidate">
            <summary>设置 NetworkIdentity.OnValidate() 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Networking.Fakes.ShimNetworkIdentity.RebuildObserversBoolean">
            <summary>设置 NetworkIdentity.RebuildObservers(Boolean initialize) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Networking.Fakes.ShimNetworkIdentity.RemoveClientAuthorityNetworkConnection">
            <summary>设置 NetworkIdentity.RemoveClientAuthority(NetworkConnection conn) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Networking.Fakes.ShimNetworkIdentity.RemoveObserverInternalNetworkConnection">
            <summary>设置 NetworkIdentity.RemoveObserverInternal(NetworkConnection conn) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Networking.Fakes.ShimNetworkIdentity.RemoveObserverNetworkConnection">
            <summary>设置 NetworkIdentity.RemoveObserver(NetworkConnection conn) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Networking.Fakes.ShimNetworkIdentity.SetClientOwnerNetworkConnection">
            <summary>设置 NetworkIdentity.SetClientOwner(NetworkConnection conn) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Networking.Fakes.ShimNetworkIdentity.SetConnectionToClientNetworkConnectionInt16">
            <summary>设置 NetworkIdentity.SetConnectionToClient(NetworkConnection conn, Int16 newPlayerControllerId) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Networking.Fakes.ShimNetworkIdentity.SetConnectionToServerNetworkConnection">
            <summary>设置 NetworkIdentity.SetConnectionToServer(NetworkConnection conn) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Networking.Fakes.ShimNetworkIdentity.SetDynamicAssetIdNetworkHash128">
            <summary>设置 NetworkIdentity.SetDynamicAssetId(NetworkHash128 newAssetId) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Networking.Fakes.ShimNetworkIdentity.SetLocalPlayerInt16">
            <summary>设置 NetworkIdentity.SetLocalPlayer(Int16 localPlayerControllerId) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Networking.Fakes.ShimNetworkIdentity.SetNetworkInstanceIdNetworkInstanceId">
            <summary>设置 NetworkIdentity.SetNetworkInstanceId(NetworkInstanceId newNetId) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Networking.Fakes.ShimNetworkIdentity.SetNoServer">
            <summary>设置 NetworkIdentity.SetNoServer() 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Networking.Fakes.ShimNetworkIdentity.SetNotLocalPlayer">
            <summary>设置 NetworkIdentity.SetNotLocalPlayer() 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Networking.Fakes.ShimNetworkIdentity.SetupIDs">
            <summary>设置 NetworkIdentity.SetupIDs() 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Networking.Fakes.ShimNetworkIdentity.StaticConstructor">
            <summary>设置 NetworkIdentity.NetworkIdentity() 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Networking.Fakes.ShimNetworkIdentity.ThisIsAPrefab">
            <summary>设置 NetworkIdentity.ThisIsAPrefab() 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Networking.Fakes.ShimNetworkIdentity.ThisIsASceneObjectWithPrefabParentGameObjectOut">
            <summary>设置 NetworkIdentity.ThisIsASceneObjectWithPrefabParent(GameObject&amp; prefab) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Networking.Fakes.ShimNetworkIdentity.UNetSerializeAllVarsNetworkWriter">
            <summary>设置 NetworkIdentity.UNetSerializeAllVars(NetworkWriter writer) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Networking.Fakes.ShimNetworkIdentity.UNetStaticUpdate">
            <summary>设置 NetworkIdentity.UNetStaticUpdate() 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Networking.Fakes.ShimNetworkIdentity.UNetUpdate">
            <summary>设置 NetworkIdentity.UNetUpdate() 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Networking.Fakes.ShimNetworkIdentity.UpdateClientServerBooleanBoolean">
            <summary>设置 NetworkIdentity.UpdateClientServer(Boolean isClientFlag, Boolean isServerFlag) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Networking.Fakes.ShimNetworkIdentity.assetIdGet">
            <summary>设置 NetworkIdentity.get_assetId() 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Networking.Fakes.ShimNetworkIdentity.clientAuthorityOwnerGet">
            <summary>设置 NetworkIdentity.get_clientAuthorityOwner() 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Networking.Fakes.ShimNetworkIdentity.connectionToClientGet">
            <summary>设置 NetworkIdentity.get_connectionToClient() 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Networking.Fakes.ShimNetworkIdentity.connectionToServerGet">
            <summary>设置 NetworkIdentity.get_connectionToServer() 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Networking.Fakes.ShimNetworkIdentity.hasAuthorityGet">
            <summary>设置 NetworkIdentity.get_hasAuthority() 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Networking.Fakes.ShimNetworkIdentity.isClientGet">
            <summary>设置 NetworkIdentity.get_isClient() 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Networking.Fakes.ShimNetworkIdentity.isLocalPlayerGet">
            <summary>设置 NetworkIdentity.get_isLocalPlayer() 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Networking.Fakes.ShimNetworkIdentity.isServerGet">
            <summary>设置 NetworkIdentity.get_isServer() 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Networking.Fakes.ShimNetworkIdentity.localPlayerAuthorityGet">
            <summary>设置 NetworkIdentity.get_localPlayerAuthority() 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Networking.Fakes.ShimNetworkIdentity.localPlayerAuthoritySetBoolean">
            <summary>设置 NetworkIdentity.set_localPlayerAuthority(Boolean value) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Networking.Fakes.ShimNetworkIdentity.netIdGet">
            <summary>设置 NetworkIdentity.get_netId() 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Networking.Fakes.ShimNetworkIdentity.observersGet">
            <summary>设置 NetworkIdentity.get_observers() 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Networking.Fakes.ShimNetworkIdentity.playerControllerIdGet">
            <summary>设置 NetworkIdentity.get_playerControllerId() 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Networking.Fakes.ShimNetworkIdentity.sceneIdGet">
            <summary>设置 NetworkIdentity.get_sceneId() 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Networking.Fakes.ShimNetworkIdentity.serverOnlyGet">
            <summary>设置 NetworkIdentity.get_serverOnly() 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Networking.Fakes.ShimNetworkIdentity.serverOnlySetBoolean">
            <summary>设置 NetworkIdentity.set_serverOnly(Boolean value) 的 填充码</summary>
        </member>
        <member name="T:UnityEngine.Networking.Fakes.ShimNetworkInstanceId">
            <summary>UnityEngine.Networking.NetworkInstanceId 的填充码类型</summary>
        </member>
        <member name="M:UnityEngine.Networking.Fakes.ShimNetworkInstanceId.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="T:UnityEngine.Networking.Fakes.ShimNetworkInstanceId.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="M:UnityEngine.Networking.Fakes.ShimNetworkInstanceId.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:UnityEngine.Networking.Fakes.ShimNetworkInstanceId.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:UnityEngine.Networking.Fakes.ShimNetworkInstanceId.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:UnityEngine.Networking.Fakes.ShimNetworkInstanceId.EqualityOpNetworkInstanceIdNetworkInstanceId">
            <summary>设置 NetworkInstanceId.op_Equality(NetworkInstanceId c1, NetworkInstanceId c2) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Networking.Fakes.ShimNetworkInstanceId.InequalityOpNetworkInstanceIdNetworkInstanceId">
            <summary>设置 NetworkInstanceId.op_Inequality(NetworkInstanceId c1, NetworkInstanceId c2) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Networking.Fakes.ShimNetworkInstanceId.StaticConstructor">
            <summary>设置 NetworkInstanceId.NetworkInstanceId() 的 填充码</summary>
        </member>
        <member name="T:UnityEngine.Networking.Fakes.ShimNetworkLobbyManager">
            <summary>UnityEngine.Networking.NetworkLobbyManager 的填充码类型</summary>
        </member>
        <member name="M:UnityEngine.Networking.Fakes.ShimNetworkLobbyManager.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:UnityEngine.Networking.Fakes.ShimNetworkLobbyManager.#ctor(UnityEngine.Networking.NetworkLobbyManager)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="T:UnityEngine.Networking.Fakes.ShimNetworkLobbyManager.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:UnityEngine.Networking.Fakes.ShimNetworkLobbyManager.AllInstances.CallOnClientEnterLobby">
            <summary>设置 NetworkLobbyManager.CallOnClientEnterLobby() 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Networking.Fakes.ShimNetworkLobbyManager.AllInstances.CallOnClientExitLobby">
            <summary>设置 NetworkLobbyManager.CallOnClientExitLobby() 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Networking.Fakes.ShimNetworkLobbyManager.AllInstances.CheckReadyToBegin">
            <summary>设置 NetworkLobbyManager.CheckReadyToBegin() 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Networking.Fakes.ShimNetworkLobbyManager.AllInstances.FindSlot">
            <summary>设置 NetworkLobbyManager.FindSlot() 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Networking.Fakes.ShimNetworkLobbyManager.AllInstances.OnClientAddPlayerFailedMessageNetworkMessage">
            <summary>设置 NetworkLobbyManager.OnClientAddPlayerFailedMessage(NetworkMessage netMsg) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Networking.Fakes.ShimNetworkLobbyManager.AllInstances.OnClientConnectNetworkConnection">
            <summary>设置 NetworkLobbyManager.OnClientConnect(NetworkConnection conn) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Networking.Fakes.ShimNetworkLobbyManager.AllInstances.OnClientDisconnectNetworkConnection">
            <summary>设置 NetworkLobbyManager.OnClientDisconnect(NetworkConnection conn) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Networking.Fakes.ShimNetworkLobbyManager.AllInstances.OnClientReadyToBeginNetworkMessage">
            <summary>设置 NetworkLobbyManager.OnClientReadyToBegin(NetworkMessage netMsg) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Networking.Fakes.ShimNetworkLobbyManager.AllInstances.OnClientSceneChangedNetworkConnection">
            <summary>设置 NetworkLobbyManager.OnClientSceneChanged(NetworkConnection conn) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Networking.Fakes.ShimNetworkLobbyManager.AllInstances.OnGUI">
            <summary>设置 NetworkLobbyManager.OnGUI() 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Networking.Fakes.ShimNetworkLobbyManager.AllInstances.OnLobbyClientAddPlayerFailed">
            <summary>设置 NetworkLobbyManager.OnLobbyClientAddPlayerFailed() 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Networking.Fakes.ShimNetworkLobbyManager.AllInstances.OnLobbyClientConnectNetworkConnection">
            <summary>设置 NetworkLobbyManager.OnLobbyClientConnect(NetworkConnection conn) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Networking.Fakes.ShimNetworkLobbyManager.AllInstances.OnLobbyClientDisconnectNetworkConnection">
            <summary>设置 NetworkLobbyManager.OnLobbyClientDisconnect(NetworkConnection conn) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Networking.Fakes.ShimNetworkLobbyManager.AllInstances.OnLobbyClientEnter">
            <summary>设置 NetworkLobbyManager.OnLobbyClientEnter() 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Networking.Fakes.ShimNetworkLobbyManager.AllInstances.OnLobbyClientExit">
            <summary>设置 NetworkLobbyManager.OnLobbyClientExit() 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Networking.Fakes.ShimNetworkLobbyManager.AllInstances.OnLobbyClientSceneChangedNetworkConnection">
            <summary>设置 NetworkLobbyManager.OnLobbyClientSceneChanged(NetworkConnection conn) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Networking.Fakes.ShimNetworkLobbyManager.AllInstances.OnLobbyServerConnectNetworkConnection">
            <summary>设置 NetworkLobbyManager.OnLobbyServerConnect(NetworkConnection conn) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Networking.Fakes.ShimNetworkLobbyManager.AllInstances.OnLobbyServerCreateGamePlayerNetworkConnectionInt16">
            <summary>设置 NetworkLobbyManager.OnLobbyServerCreateGamePlayer(NetworkConnection conn, Int16 playerControllerId) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Networking.Fakes.ShimNetworkLobbyManager.AllInstances.OnLobbyServerCreateLobbyPlayerNetworkConnectionInt16">
            <summary>设置 NetworkLobbyManager.OnLobbyServerCreateLobbyPlayer(NetworkConnection conn, Int16 playerControllerId) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Networking.Fakes.ShimNetworkLobbyManager.AllInstances.OnLobbyServerDisconnectNetworkConnection">
            <summary>设置 NetworkLobbyManager.OnLobbyServerDisconnect(NetworkConnection conn) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Networking.Fakes.ShimNetworkLobbyManager.AllInstances.OnLobbyServerPlayerRemovedNetworkConnectionInt16">
            <summary>设置 NetworkLobbyManager.OnLobbyServerPlayerRemoved(NetworkConnection conn, Int16 playerControllerId) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Networking.Fakes.ShimNetworkLobbyManager.AllInstances.OnLobbyServerPlayersReady">
            <summary>设置 NetworkLobbyManager.OnLobbyServerPlayersReady() 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Networking.Fakes.ShimNetworkLobbyManager.AllInstances.OnLobbyServerSceneChangedString">
            <summary>设置 NetworkLobbyManager.OnLobbyServerSceneChanged(String sceneName) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Networking.Fakes.ShimNetworkLobbyManager.AllInstances.OnLobbyServerSceneLoadedForPlayerGameObjectGameObject">
            <summary>设置 NetworkLobbyManager.OnLobbyServerSceneLoadedForPlayer(GameObject lobbyPlayer, GameObject gamePlayer) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Networking.Fakes.ShimNetworkLobbyManager.AllInstances.OnLobbyStartClientNetworkClient">
            <summary>设置 NetworkLobbyManager.OnLobbyStartClient(NetworkClient lobbyClient) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Networking.Fakes.ShimNetworkLobbyManager.AllInstances.OnLobbyStartHost">
            <summary>设置 NetworkLobbyManager.OnLobbyStartHost() 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Networking.Fakes.ShimNetworkLobbyManager.AllInstances.OnLobbyStartServer">
            <summary>设置 NetworkLobbyManager.OnLobbyStartServer() 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Networking.Fakes.ShimNetworkLobbyManager.AllInstances.OnLobbyStopClient">
            <summary>设置 NetworkLobbyManager.OnLobbyStopClient() 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Networking.Fakes.ShimNetworkLobbyManager.AllInstances.OnLobbyStopHost">
            <summary>设置 NetworkLobbyManager.OnLobbyStopHost() 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Networking.Fakes.ShimNetworkLobbyManager.AllInstances.OnServerAddPlayerNetworkConnectionInt16">
            <summary>设置 NetworkLobbyManager.OnServerAddPlayer(NetworkConnection conn, Int16 playerControllerId) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Networking.Fakes.ShimNetworkLobbyManager.AllInstances.OnServerConnectNetworkConnection">
            <summary>设置 NetworkLobbyManager.OnServerConnect(NetworkConnection conn) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Networking.Fakes.ShimNetworkLobbyManager.AllInstances.OnServerDisconnectNetworkConnection">
            <summary>设置 NetworkLobbyManager.OnServerDisconnect(NetworkConnection conn) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Networking.Fakes.ShimNetworkLobbyManager.AllInstances.OnServerReadyToBeginMessageNetworkMessage">
            <summary>设置 NetworkLobbyManager.OnServerReadyToBeginMessage(NetworkMessage netMsg) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Networking.Fakes.ShimNetworkLobbyManager.AllInstances.OnServerRemovePlayerNetworkConnectionPlayerController">
            <summary>设置 NetworkLobbyManager.OnServerRemovePlayer(NetworkConnection conn, PlayerController player) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Networking.Fakes.ShimNetworkLobbyManager.AllInstances.OnServerReturnToLobbyMessageNetworkMessage">
            <summary>设置 NetworkLobbyManager.OnServerReturnToLobbyMessage(NetworkMessage netMsg) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Networking.Fakes.ShimNetworkLobbyManager.AllInstances.OnServerSceneChangedString">
            <summary>设置 NetworkLobbyManager.OnServerSceneChanged(String sceneName) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Networking.Fakes.ShimNetworkLobbyManager.AllInstances.OnServerSceneLoadedMessageNetworkMessage">
            <summary>设置 NetworkLobbyManager.OnServerSceneLoadedMessage(NetworkMessage netMsg) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Networking.Fakes.ShimNetworkLobbyManager.AllInstances.OnStartClientNetworkClient">
            <summary>设置 NetworkLobbyManager.OnStartClient(NetworkClient lobbyClient) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Networking.Fakes.ShimNetworkLobbyManager.AllInstances.OnStartHost">
            <summary>设置 NetworkLobbyManager.OnStartHost() 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Networking.Fakes.ShimNetworkLobbyManager.AllInstances.OnStartServer">
            <summary>设置 NetworkLobbyManager.OnStartServer() 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Networking.Fakes.ShimNetworkLobbyManager.AllInstances.OnStopClient">
            <summary>设置 NetworkLobbyManager.OnStopClient() 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Networking.Fakes.ShimNetworkLobbyManager.AllInstances.OnStopHost">
            <summary>设置 NetworkLobbyManager.OnStopHost() 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Networking.Fakes.ShimNetworkLobbyManager.AllInstances.OnValidate">
            <summary>设置 NetworkLobbyManager.OnValidate() 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Networking.Fakes.ShimNetworkLobbyManager.AllInstances.SceneLoadedForPlayerNetworkConnectionGameObject">
            <summary>设置 NetworkLobbyManager.SceneLoadedForPlayer(NetworkConnection conn, GameObject lobbyPlayerGameObject) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Networking.Fakes.ShimNetworkLobbyManager.AllInstances.SendReturnToLobby">
            <summary>设置 NetworkLobbyManager.SendReturnToLobby() 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Networking.Fakes.ShimNetworkLobbyManager.AllInstances.ServerChangeSceneString">
            <summary>设置 NetworkLobbyManager.ServerChangeScene(String sceneName) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Networking.Fakes.ShimNetworkLobbyManager.AllInstances.ServerReturnToLobby">
            <summary>设置 NetworkLobbyManager.ServerReturnToLobby() 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Networking.Fakes.ShimNetworkLobbyManager.AllInstances.TryToAddPlayer">
            <summary>设置 NetworkLobbyManager.TryToAddPlayer() 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Networking.Fakes.ShimNetworkLobbyManager.AllInstances.gamePlayerPrefabGet">
            <summary>设置 NetworkLobbyManager.get_gamePlayerPrefab() 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Networking.Fakes.ShimNetworkLobbyManager.AllInstances.gamePlayerPrefabSetGameObject">
            <summary>设置 NetworkLobbyManager.set_gamePlayerPrefab(GameObject value) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Networking.Fakes.ShimNetworkLobbyManager.AllInstances.lobbyPlayerPrefabGet">
            <summary>设置 NetworkLobbyManager.get_lobbyPlayerPrefab() 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Networking.Fakes.ShimNetworkLobbyManager.AllInstances.lobbyPlayerPrefabSetNetworkLobbyPlayer">
            <summary>设置 NetworkLobbyManager.set_lobbyPlayerPrefab(NetworkLobbyPlayer value) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Networking.Fakes.ShimNetworkLobbyManager.AllInstances.lobbySceneGet">
            <summary>设置 NetworkLobbyManager.get_lobbyScene() 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Networking.Fakes.ShimNetworkLobbyManager.AllInstances.lobbySceneSetString">
            <summary>设置 NetworkLobbyManager.set_lobbyScene(String value) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Networking.Fakes.ShimNetworkLobbyManager.AllInstances.maxPlayersGet">
            <summary>设置 NetworkLobbyManager.get_maxPlayers() 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Networking.Fakes.ShimNetworkLobbyManager.AllInstances.maxPlayersPerConnectionGet">
            <summary>设置 NetworkLobbyManager.get_maxPlayersPerConnection() 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Networking.Fakes.ShimNetworkLobbyManager.AllInstances.maxPlayersPerConnectionSetInt32">
            <summary>设置 NetworkLobbyManager.set_maxPlayersPerConnection(Int32 value) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Networking.Fakes.ShimNetworkLobbyManager.AllInstances.maxPlayersSetInt32">
            <summary>设置 NetworkLobbyManager.set_maxPlayers(Int32 value) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Networking.Fakes.ShimNetworkLobbyManager.AllInstances.minPlayersGet">
            <summary>设置 NetworkLobbyManager.get_minPlayers() 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Networking.Fakes.ShimNetworkLobbyManager.AllInstances.minPlayersSetInt32">
            <summary>设置 NetworkLobbyManager.set_minPlayers(Int32 value) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Networking.Fakes.ShimNetworkLobbyManager.AllInstances.playSceneGet">
            <summary>设置 NetworkLobbyManager.get_playScene() 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Networking.Fakes.ShimNetworkLobbyManager.AllInstances.playSceneSetString">
            <summary>设置 NetworkLobbyManager.set_playScene(String value) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Networking.Fakes.ShimNetworkLobbyManager.AllInstances.showLobbyGUIGet">
            <summary>设置 NetworkLobbyManager.get_showLobbyGUI() 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Networking.Fakes.ShimNetworkLobbyManager.AllInstances.showLobbyGUISetBoolean">
            <summary>设置 NetworkLobbyManager.set_showLobbyGUI(Boolean value) 的 填充码</summary>
        </member>
        <member name="M:UnityEngine.Networking.Fakes.ShimNetworkLobbyManager.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:UnityEngine.Networking.Fakes.ShimNetworkLobbyManager.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:UnityEngine.Networking.Fakes.ShimNetworkLobbyManager.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:UnityEngine.Networking.Fakes.ShimNetworkLobbyManager.CallOnClientEnterLobby">
            <summary>设置 NetworkLobbyManager.CallOnClientEnterLobby() 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Networking.Fakes.ShimNetworkLobbyManager.CallOnClientExitLobby">
            <summary>设置 NetworkLobbyManager.CallOnClientExitLobby() 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Networking.Fakes.ShimNetworkLobbyManager.CheckConnectionIsReadyToBeginNetworkConnection">
            <summary>设置 NetworkLobbyManager.CheckConnectionIsReadyToBegin(NetworkConnection conn) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Networking.Fakes.ShimNetworkLobbyManager.CheckReadyToBegin">
            <summary>设置 NetworkLobbyManager.CheckReadyToBegin() 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Networking.Fakes.ShimNetworkLobbyManager.Constructor">
            <summary>设置 NetworkLobbyManager.NetworkLobbyManager() 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Networking.Fakes.ShimNetworkLobbyManager.FindSlot">
            <summary>设置 NetworkLobbyManager.FindSlot() 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Networking.Fakes.ShimNetworkLobbyManager.OnClientAddPlayerFailedMessageNetworkMessage">
            <summary>设置 NetworkLobbyManager.OnClientAddPlayerFailedMessage(NetworkMessage netMsg) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Networking.Fakes.ShimNetworkLobbyManager.OnClientConnectNetworkConnection">
            <summary>设置 NetworkLobbyManager.OnClientConnect(NetworkConnection conn) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Networking.Fakes.ShimNetworkLobbyManager.OnClientDisconnectNetworkConnection">
            <summary>设置 NetworkLobbyManager.OnClientDisconnect(NetworkConnection conn) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Networking.Fakes.ShimNetworkLobbyManager.OnClientReadyToBeginNetworkMessage">
            <summary>设置 NetworkLobbyManager.OnClientReadyToBegin(NetworkMessage netMsg) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Networking.Fakes.ShimNetworkLobbyManager.OnClientSceneChangedNetworkConnection">
            <summary>设置 NetworkLobbyManager.OnClientSceneChanged(NetworkConnection conn) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Networking.Fakes.ShimNetworkLobbyManager.OnGUI">
            <summary>设置 NetworkLobbyManager.OnGUI() 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Networking.Fakes.ShimNetworkLobbyManager.OnLobbyClientAddPlayerFailed">
            <summary>设置 NetworkLobbyManager.OnLobbyClientAddPlayerFailed() 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Networking.Fakes.ShimNetworkLobbyManager.OnLobbyClientConnectNetworkConnection">
            <summary>设置 NetworkLobbyManager.OnLobbyClientConnect(NetworkConnection conn) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Networking.Fakes.ShimNetworkLobbyManager.OnLobbyClientDisconnectNetworkConnection">
            <summary>设置 NetworkLobbyManager.OnLobbyClientDisconnect(NetworkConnection conn) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Networking.Fakes.ShimNetworkLobbyManager.OnLobbyClientEnter">
            <summary>设置 NetworkLobbyManager.OnLobbyClientEnter() 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Networking.Fakes.ShimNetworkLobbyManager.OnLobbyClientExit">
            <summary>设置 NetworkLobbyManager.OnLobbyClientExit() 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Networking.Fakes.ShimNetworkLobbyManager.OnLobbyClientSceneChangedNetworkConnection">
            <summary>设置 NetworkLobbyManager.OnLobbyClientSceneChanged(NetworkConnection conn) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Networking.Fakes.ShimNetworkLobbyManager.OnLobbyServerConnectNetworkConnection">
            <summary>设置 NetworkLobbyManager.OnLobbyServerConnect(NetworkConnection conn) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Networking.Fakes.ShimNetworkLobbyManager.OnLobbyServerCreateGamePlayerNetworkConnectionInt16">
            <summary>设置 NetworkLobbyManager.OnLobbyServerCreateGamePlayer(NetworkConnection conn, Int16 playerControllerId) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Networking.Fakes.ShimNetworkLobbyManager.OnLobbyServerCreateLobbyPlayerNetworkConnectionInt16">
            <summary>设置 NetworkLobbyManager.OnLobbyServerCreateLobbyPlayer(NetworkConnection conn, Int16 playerControllerId) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Networking.Fakes.ShimNetworkLobbyManager.OnLobbyServerDisconnectNetworkConnection">
            <summary>设置 NetworkLobbyManager.OnLobbyServerDisconnect(NetworkConnection conn) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Networking.Fakes.ShimNetworkLobbyManager.OnLobbyServerPlayerRemovedNetworkConnectionInt16">
            <summary>设置 NetworkLobbyManager.OnLobbyServerPlayerRemoved(NetworkConnection conn, Int16 playerControllerId) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Networking.Fakes.ShimNetworkLobbyManager.OnLobbyServerPlayersReady">
            <summary>设置 NetworkLobbyManager.OnLobbyServerPlayersReady() 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Networking.Fakes.ShimNetworkLobbyManager.OnLobbyServerSceneChangedString">
            <summary>设置 NetworkLobbyManager.OnLobbyServerSceneChanged(String sceneName) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Networking.Fakes.ShimNetworkLobbyManager.OnLobbyServerSceneLoadedForPlayerGameObjectGameObject">
            <summary>设置 NetworkLobbyManager.OnLobbyServerSceneLoadedForPlayer(GameObject lobbyPlayer, GameObject gamePlayer) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Networking.Fakes.ShimNetworkLobbyManager.OnLobbyStartClientNetworkClient">
            <summary>设置 NetworkLobbyManager.OnLobbyStartClient(NetworkClient lobbyClient) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Networking.Fakes.ShimNetworkLobbyManager.OnLobbyStartHost">
            <summary>设置 NetworkLobbyManager.OnLobbyStartHost() 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Networking.Fakes.ShimNetworkLobbyManager.OnLobbyStartServer">
            <summary>设置 NetworkLobbyManager.OnLobbyStartServer() 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Networking.Fakes.ShimNetworkLobbyManager.OnLobbyStopClient">
            <summary>设置 NetworkLobbyManager.OnLobbyStopClient() 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Networking.Fakes.ShimNetworkLobbyManager.OnLobbyStopHost">
            <summary>设置 NetworkLobbyManager.OnLobbyStopHost() 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Networking.Fakes.ShimNetworkLobbyManager.OnServerAddPlayerNetworkConnectionInt16">
            <summary>设置 NetworkLobbyManager.OnServerAddPlayer(NetworkConnection conn, Int16 playerControllerId) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Networking.Fakes.ShimNetworkLobbyManager.OnServerConnectNetworkConnection">
            <summary>设置 NetworkLobbyManager.OnServerConnect(NetworkConnection conn) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Networking.Fakes.ShimNetworkLobbyManager.OnServerDisconnectNetworkConnection">
            <summary>设置 NetworkLobbyManager.OnServerDisconnect(NetworkConnection conn) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Networking.Fakes.ShimNetworkLobbyManager.OnServerReadyToBeginMessageNetworkMessage">
            <summary>设置 NetworkLobbyManager.OnServerReadyToBeginMessage(NetworkMessage netMsg) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Networking.Fakes.ShimNetworkLobbyManager.OnServerRemovePlayerNetworkConnectionPlayerController">
            <summary>设置 NetworkLobbyManager.OnServerRemovePlayer(NetworkConnection conn, PlayerController player) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Networking.Fakes.ShimNetworkLobbyManager.OnServerReturnToLobbyMessageNetworkMessage">
            <summary>设置 NetworkLobbyManager.OnServerReturnToLobbyMessage(NetworkMessage netMsg) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Networking.Fakes.ShimNetworkLobbyManager.OnServerSceneChangedString">
            <summary>设置 NetworkLobbyManager.OnServerSceneChanged(String sceneName) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Networking.Fakes.ShimNetworkLobbyManager.OnServerSceneLoadedMessageNetworkMessage">
            <summary>设置 NetworkLobbyManager.OnServerSceneLoadedMessage(NetworkMessage netMsg) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Networking.Fakes.ShimNetworkLobbyManager.OnStartClientNetworkClient">
            <summary>设置 NetworkLobbyManager.OnStartClient(NetworkClient lobbyClient) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Networking.Fakes.ShimNetworkLobbyManager.OnStartHost">
            <summary>设置 NetworkLobbyManager.OnStartHost() 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Networking.Fakes.ShimNetworkLobbyManager.OnStartServer">
            <summary>设置 NetworkLobbyManager.OnStartServer() 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Networking.Fakes.ShimNetworkLobbyManager.OnStopClient">
            <summary>设置 NetworkLobbyManager.OnStopClient() 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Networking.Fakes.ShimNetworkLobbyManager.OnStopHost">
            <summary>设置 NetworkLobbyManager.OnStopHost() 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Networking.Fakes.ShimNetworkLobbyManager.OnValidate">
            <summary>设置 NetworkLobbyManager.OnValidate() 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Networking.Fakes.ShimNetworkLobbyManager.SceneLoadedForPlayerNetworkConnectionGameObject">
            <summary>设置 NetworkLobbyManager.SceneLoadedForPlayer(NetworkConnection conn, GameObject lobbyPlayerGameObject) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Networking.Fakes.ShimNetworkLobbyManager.SendReturnToLobby">
            <summary>设置 NetworkLobbyManager.SendReturnToLobby() 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Networking.Fakes.ShimNetworkLobbyManager.ServerChangeSceneString">
            <summary>设置 NetworkLobbyManager.ServerChangeScene(String sceneName) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Networking.Fakes.ShimNetworkLobbyManager.ServerReturnToLobby">
            <summary>设置 NetworkLobbyManager.ServerReturnToLobby() 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Networking.Fakes.ShimNetworkLobbyManager.StaticConstructor">
            <summary>设置 NetworkLobbyManager.NetworkLobbyManager() 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Networking.Fakes.ShimNetworkLobbyManager.TryToAddPlayer">
            <summary>设置 NetworkLobbyManager.TryToAddPlayer() 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Networking.Fakes.ShimNetworkLobbyManager.gamePlayerPrefabGet">
            <summary>设置 NetworkLobbyManager.get_gamePlayerPrefab() 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Networking.Fakes.ShimNetworkLobbyManager.gamePlayerPrefabSetGameObject">
            <summary>设置 NetworkLobbyManager.set_gamePlayerPrefab(GameObject value) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Networking.Fakes.ShimNetworkLobbyManager.lobbyPlayerPrefabGet">
            <summary>设置 NetworkLobbyManager.get_lobbyPlayerPrefab() 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Networking.Fakes.ShimNetworkLobbyManager.lobbyPlayerPrefabSetNetworkLobbyPlayer">
            <summary>设置 NetworkLobbyManager.set_lobbyPlayerPrefab(NetworkLobbyPlayer value) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Networking.Fakes.ShimNetworkLobbyManager.lobbySceneGet">
            <summary>设置 NetworkLobbyManager.get_lobbyScene() 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Networking.Fakes.ShimNetworkLobbyManager.lobbySceneSetString">
            <summary>设置 NetworkLobbyManager.set_lobbyScene(String value) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Networking.Fakes.ShimNetworkLobbyManager.maxPlayersGet">
            <summary>设置 NetworkLobbyManager.get_maxPlayers() 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Networking.Fakes.ShimNetworkLobbyManager.maxPlayersPerConnectionGet">
            <summary>设置 NetworkLobbyManager.get_maxPlayersPerConnection() 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Networking.Fakes.ShimNetworkLobbyManager.maxPlayersPerConnectionSetInt32">
            <summary>设置 NetworkLobbyManager.set_maxPlayersPerConnection(Int32 value) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Networking.Fakes.ShimNetworkLobbyManager.maxPlayersSetInt32">
            <summary>设置 NetworkLobbyManager.set_maxPlayers(Int32 value) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Networking.Fakes.ShimNetworkLobbyManager.minPlayersGet">
            <summary>设置 NetworkLobbyManager.get_minPlayers() 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Networking.Fakes.ShimNetworkLobbyManager.minPlayersSetInt32">
            <summary>设置 NetworkLobbyManager.set_minPlayers(Int32 value) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Networking.Fakes.ShimNetworkLobbyManager.playSceneGet">
            <summary>设置 NetworkLobbyManager.get_playScene() 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Networking.Fakes.ShimNetworkLobbyManager.playSceneSetString">
            <summary>设置 NetworkLobbyManager.set_playScene(String value) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Networking.Fakes.ShimNetworkLobbyManager.showLobbyGUIGet">
            <summary>设置 NetworkLobbyManager.get_showLobbyGUI() 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Networking.Fakes.ShimNetworkLobbyManager.showLobbyGUISetBoolean">
            <summary>设置 NetworkLobbyManager.set_showLobbyGUI(Boolean value) 的 填充码</summary>
        </member>
        <member name="T:UnityEngine.Networking.Fakes.ShimNetworkLobbyPlayer">
            <summary>UnityEngine.Networking.NetworkLobbyPlayer 的填充码类型</summary>
        </member>
        <member name="M:UnityEngine.Networking.Fakes.ShimNetworkLobbyPlayer.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:UnityEngine.Networking.Fakes.ShimNetworkLobbyPlayer.#ctor(UnityEngine.Networking.NetworkLobbyPlayer)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="T:UnityEngine.Networking.Fakes.ShimNetworkLobbyPlayer.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:UnityEngine.Networking.Fakes.ShimNetworkLobbyPlayer.AllInstances.OnClientEnterLobby">
            <summary>设置 NetworkLobbyPlayer.OnClientEnterLobby() 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Networking.Fakes.ShimNetworkLobbyPlayer.AllInstances.OnClientExitLobby">
            <summary>设置 NetworkLobbyPlayer.OnClientExitLobby() 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Networking.Fakes.ShimNetworkLobbyPlayer.AllInstances.OnClientReadyBoolean">
            <summary>设置 NetworkLobbyPlayer.OnClientReady(Boolean readyState) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Networking.Fakes.ShimNetworkLobbyPlayer.AllInstances.OnDeserializeNetworkReaderBoolean">
            <summary>设置 NetworkLobbyPlayer.OnDeserialize(NetworkReader reader, Boolean initialState) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Networking.Fakes.ShimNetworkLobbyPlayer.AllInstances.OnGUI">
            <summary>设置 NetworkLobbyPlayer.OnGUI() 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Networking.Fakes.ShimNetworkLobbyPlayer.AllInstances.OnLevelWasLoaded">
            <summary>设置 NetworkLobbyPlayer.OnLevelWasLoaded() 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Networking.Fakes.ShimNetworkLobbyPlayer.AllInstances.OnSerializeNetworkWriterBoolean">
            <summary>设置 NetworkLobbyPlayer.OnSerialize(NetworkWriter writer, Boolean initialState) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Networking.Fakes.ShimNetworkLobbyPlayer.AllInstances.OnStartClient">
            <summary>设置 NetworkLobbyPlayer.OnStartClient() 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Networking.Fakes.ShimNetworkLobbyPlayer.AllInstances.RemovePlayer">
            <summary>设置 NetworkLobbyPlayer.RemovePlayer() 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Networking.Fakes.ShimNetworkLobbyPlayer.AllInstances.SendNotReadyToBeginMessage">
            <summary>设置 NetworkLobbyPlayer.SendNotReadyToBeginMessage() 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Networking.Fakes.ShimNetworkLobbyPlayer.AllInstances.SendReadyToBeginMessage">
            <summary>设置 NetworkLobbyPlayer.SendReadyToBeginMessage() 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Networking.Fakes.ShimNetworkLobbyPlayer.AllInstances.SendSceneLoadedMessage">
            <summary>设置 NetworkLobbyPlayer.SendSceneLoadedMessage() 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Networking.Fakes.ShimNetworkLobbyPlayer.AllInstances.Start">
            <summary>设置 NetworkLobbyPlayer.Start() 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Networking.Fakes.ShimNetworkLobbyPlayer.AllInstances.readyToBeginGet">
            <summary>设置 NetworkLobbyPlayer.get_readyToBegin() 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Networking.Fakes.ShimNetworkLobbyPlayer.AllInstances.readyToBeginSetBoolean">
            <summary>设置 NetworkLobbyPlayer.set_readyToBegin(Boolean value) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Networking.Fakes.ShimNetworkLobbyPlayer.AllInstances.slotGet">
            <summary>设置 NetworkLobbyPlayer.get_slot() 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Networking.Fakes.ShimNetworkLobbyPlayer.AllInstances.slotSetByte">
            <summary>设置 NetworkLobbyPlayer.set_slot(Byte value) 的 填充码</summary>
        </member>
        <member name="M:UnityEngine.Networking.Fakes.ShimNetworkLobbyPlayer.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:UnityEngine.Networking.Fakes.ShimNetworkLobbyPlayer.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:UnityEngine.Networking.Fakes.ShimNetworkLobbyPlayer.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:UnityEngine.Networking.Fakes.ShimNetworkLobbyPlayer.Constructor">
            <summary>设置 NetworkLobbyPlayer.NetworkLobbyPlayer() 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Networking.Fakes.ShimNetworkLobbyPlayer.OnClientEnterLobby">
            <summary>设置 NetworkLobbyPlayer.OnClientEnterLobby() 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Networking.Fakes.ShimNetworkLobbyPlayer.OnClientExitLobby">
            <summary>设置 NetworkLobbyPlayer.OnClientExitLobby() 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Networking.Fakes.ShimNetworkLobbyPlayer.OnClientReadyBoolean">
            <summary>设置 NetworkLobbyPlayer.OnClientReady(Boolean readyState) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Networking.Fakes.ShimNetworkLobbyPlayer.OnDeserializeNetworkReaderBoolean">
            <summary>设置 NetworkLobbyPlayer.OnDeserialize(NetworkReader reader, Boolean initialState) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Networking.Fakes.ShimNetworkLobbyPlayer.OnGUI">
            <summary>设置 NetworkLobbyPlayer.OnGUI() 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Networking.Fakes.ShimNetworkLobbyPlayer.OnLevelWasLoaded">
            <summary>设置 NetworkLobbyPlayer.OnLevelWasLoaded() 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Networking.Fakes.ShimNetworkLobbyPlayer.OnSerializeNetworkWriterBoolean">
            <summary>设置 NetworkLobbyPlayer.OnSerialize(NetworkWriter writer, Boolean initialState) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Networking.Fakes.ShimNetworkLobbyPlayer.OnStartClient">
            <summary>设置 NetworkLobbyPlayer.OnStartClient() 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Networking.Fakes.ShimNetworkLobbyPlayer.RemovePlayer">
            <summary>设置 NetworkLobbyPlayer.RemovePlayer() 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Networking.Fakes.ShimNetworkLobbyPlayer.SendNotReadyToBeginMessage">
            <summary>设置 NetworkLobbyPlayer.SendNotReadyToBeginMessage() 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Networking.Fakes.ShimNetworkLobbyPlayer.SendReadyToBeginMessage">
            <summary>设置 NetworkLobbyPlayer.SendReadyToBeginMessage() 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Networking.Fakes.ShimNetworkLobbyPlayer.SendSceneLoadedMessage">
            <summary>设置 NetworkLobbyPlayer.SendSceneLoadedMessage() 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Networking.Fakes.ShimNetworkLobbyPlayer.Start">
            <summary>设置 NetworkLobbyPlayer.Start() 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Networking.Fakes.ShimNetworkLobbyPlayer.readyToBeginGet">
            <summary>设置 NetworkLobbyPlayer.get_readyToBegin() 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Networking.Fakes.ShimNetworkLobbyPlayer.readyToBeginSetBoolean">
            <summary>设置 NetworkLobbyPlayer.set_readyToBegin(Boolean value) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Networking.Fakes.ShimNetworkLobbyPlayer.slotGet">
            <summary>设置 NetworkLobbyPlayer.get_slot() 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Networking.Fakes.ShimNetworkLobbyPlayer.slotSetByte">
            <summary>设置 NetworkLobbyPlayer.set_slot(Byte value) 的 填充码</summary>
        </member>
        <member name="T:UnityEngine.Networking.Fakes.ShimNetworkManager">
            <summary>UnityEngine.Networking.NetworkManager 的填充码类型</summary>
        </member>
        <member name="M:UnityEngine.Networking.Fakes.ShimNetworkManager.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:UnityEngine.Networking.Fakes.ShimNetworkManager.#ctor(UnityEngine.Networking.NetworkManager)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="T:UnityEngine.Networking.Fakes.ShimNetworkManager.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:UnityEngine.Networking.Fakes.ShimNetworkManager.AllInstances.Awake">
            <summary>设置 NetworkManager.Awake() 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Networking.Fakes.ShimNetworkManager.AllInstances.ClientChangeSceneStringBoolean">
            <summary>设置 NetworkManager.ClientChangeScene(String newSceneName, Boolean forceReload) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Networking.Fakes.ShimNetworkManager.AllInstances.ConnectLocalClient">
            <summary>设置 NetworkManager.ConnectLocalClient() 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Networking.Fakes.ShimNetworkManager.AllInstances.FinishLoadScene">
            <summary>设置 NetworkManager.FinishLoadScene() 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Networking.Fakes.ShimNetworkManager.AllInstances.GetStartPosition">
            <summary>设置 NetworkManager.GetStartPosition() 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Networking.Fakes.ShimNetworkManager.AllInstances.IsClientConnected">
            <summary>设置 NetworkManager.IsClientConnected() 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Networking.Fakes.ShimNetworkManager.AllInstances.OnClientConnectInternalNetworkMessage">
            <summary>设置 NetworkManager.OnClientConnectInternal(NetworkMessage netMsg) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Networking.Fakes.ShimNetworkManager.AllInstances.OnClientConnectNetworkConnection">
            <summary>设置 NetworkManager.OnClientConnect(NetworkConnection conn) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Networking.Fakes.ShimNetworkManager.AllInstances.OnClientDisconnectInternalNetworkMessage">
            <summary>设置 NetworkManager.OnClientDisconnectInternal(NetworkMessage netMsg) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Networking.Fakes.ShimNetworkManager.AllInstances.OnClientDisconnectNetworkConnection">
            <summary>设置 NetworkManager.OnClientDisconnect(NetworkConnection conn) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Networking.Fakes.ShimNetworkManager.AllInstances.OnClientErrorInternalNetworkMessage">
            <summary>设置 NetworkManager.OnClientErrorInternal(NetworkMessage netMsg) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Networking.Fakes.ShimNetworkManager.AllInstances.OnClientErrorNetworkConnectionInt32">
            <summary>设置 NetworkManager.OnClientError(NetworkConnection conn, Int32 errorCode) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Networking.Fakes.ShimNetworkManager.AllInstances.OnClientNotReadyMessageInternalNetworkMessage">
            <summary>设置 NetworkManager.OnClientNotReadyMessageInternal(NetworkMessage netMsg) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Networking.Fakes.ShimNetworkManager.AllInstances.OnClientNotReadyNetworkConnection">
            <summary>设置 NetworkManager.OnClientNotReady(NetworkConnection conn) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Networking.Fakes.ShimNetworkManager.AllInstances.OnClientSceneChangedNetworkConnection">
            <summary>设置 NetworkManager.OnClientSceneChanged(NetworkConnection conn) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Networking.Fakes.ShimNetworkManager.AllInstances.OnClientSceneInternalNetworkMessage">
            <summary>设置 NetworkManager.OnClientSceneInternal(NetworkMessage netMsg) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Networking.Fakes.ShimNetworkManager.AllInstances.OnDestroy">
            <summary>设置 NetworkManager.OnDestroy() 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Networking.Fakes.ShimNetworkManager.AllInstances.OnMatchCreateCreateMatchResponse">
            <summary>设置 NetworkManager.OnMatchCreate(CreateMatchResponse matchInfo) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Networking.Fakes.ShimNetworkManager.AllInstances.OnMatchJoinedJoinMatchResponse">
            <summary>设置 NetworkManager.OnMatchJoined(JoinMatchResponse matchInfo) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Networking.Fakes.ShimNetworkManager.AllInstances.OnMatchListListMatchResponse">
            <summary>设置 NetworkManager.OnMatchList(ListMatchResponse matchList) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Networking.Fakes.ShimNetworkManager.AllInstances.OnServerAddPlayerInternalNetworkConnectionInt16">
            <summary>设置 NetworkManager.OnServerAddPlayerInternal(NetworkConnection conn, Int16 playerControllerId) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Networking.Fakes.ShimNetworkManager.AllInstances.OnServerAddPlayerMessageInternalNetworkMessage">
            <summary>设置 NetworkManager.OnServerAddPlayerMessageInternal(NetworkMessage netMsg) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Networking.Fakes.ShimNetworkManager.AllInstances.OnServerAddPlayerNetworkConnectionInt16">
            <summary>设置 NetworkManager.OnServerAddPlayer(NetworkConnection conn, Int16 playerControllerId) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Networking.Fakes.ShimNetworkManager.AllInstances.OnServerAddPlayerNetworkConnectionInt16NetworkReader">
            <summary>设置 NetworkManager.OnServerAddPlayer(NetworkConnection conn, Int16 playerControllerId, NetworkReader extraMessageReader) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Networking.Fakes.ShimNetworkManager.AllInstances.OnServerConnectInternalNetworkMessage">
            <summary>设置 NetworkManager.OnServerConnectInternal(NetworkMessage netMsg) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Networking.Fakes.ShimNetworkManager.AllInstances.OnServerConnectNetworkConnection">
            <summary>设置 NetworkManager.OnServerConnect(NetworkConnection conn) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Networking.Fakes.ShimNetworkManager.AllInstances.OnServerDisconnectInternalNetworkMessage">
            <summary>设置 NetworkManager.OnServerDisconnectInternal(NetworkMessage netMsg) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Networking.Fakes.ShimNetworkManager.AllInstances.OnServerDisconnectNetworkConnection">
            <summary>设置 NetworkManager.OnServerDisconnect(NetworkConnection conn) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Networking.Fakes.ShimNetworkManager.AllInstances.OnServerErrorInternalNetworkMessage">
            <summary>设置 NetworkManager.OnServerErrorInternal(NetworkMessage netMsg) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Networking.Fakes.ShimNetworkManager.AllInstances.OnServerErrorNetworkConnectionInt32">
            <summary>设置 NetworkManager.OnServerError(NetworkConnection conn, Int32 errorCode) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Networking.Fakes.ShimNetworkManager.AllInstances.OnServerReadyMessageInternalNetworkMessage">
            <summary>设置 NetworkManager.OnServerReadyMessageInternal(NetworkMessage netMsg) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Networking.Fakes.ShimNetworkManager.AllInstances.OnServerReadyNetworkConnection">
            <summary>设置 NetworkManager.OnServerReady(NetworkConnection conn) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Networking.Fakes.ShimNetworkManager.AllInstances.OnServerRemovePlayerMessageInternalNetworkMessage">
            <summary>设置 NetworkManager.OnServerRemovePlayerMessageInternal(NetworkMessage netMsg) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Networking.Fakes.ShimNetworkManager.AllInstances.OnServerRemovePlayerNetworkConnectionPlayerController">
            <summary>设置 NetworkManager.OnServerRemovePlayer(NetworkConnection conn, PlayerController player) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Networking.Fakes.ShimNetworkManager.AllInstances.OnServerSceneChangedString">
            <summary>设置 NetworkManager.OnServerSceneChanged(String sceneName) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Networking.Fakes.ShimNetworkManager.AllInstances.OnStartClientNetworkClient">
            <summary>设置 NetworkManager.OnStartClient(NetworkClient client) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Networking.Fakes.ShimNetworkManager.AllInstances.OnStartHost">
            <summary>设置 NetworkManager.OnStartHost() 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Networking.Fakes.ShimNetworkManager.AllInstances.OnStartServer">
            <summary>设置 NetworkManager.OnStartServer() 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Networking.Fakes.ShimNetworkManager.AllInstances.OnStopClient">
            <summary>设置 NetworkManager.OnStopClient() 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Networking.Fakes.ShimNetworkManager.AllInstances.OnStopHost">
            <summary>设置 NetworkManager.OnStopHost() 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Networking.Fakes.ShimNetworkManager.AllInstances.OnStopServer">
            <summary>设置 NetworkManager.OnStopServer() 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Networking.Fakes.ShimNetworkManager.AllInstances.OnValidate">
            <summary>设置 NetworkManager.OnValidate() 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Networking.Fakes.ShimNetworkManager.AllInstances.RegisterClientMessagesNetworkClient">
            <summary>设置 NetworkManager.RegisterClientMessages(NetworkClient client) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Networking.Fakes.ShimNetworkManager.AllInstances.RegisterServerMessages">
            <summary>设置 NetworkManager.RegisterServerMessages() 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Networking.Fakes.ShimNetworkManager.AllInstances.ServerChangeSceneString">
            <summary>设置 NetworkManager.ServerChangeScene(String newSceneName) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Networking.Fakes.ShimNetworkManager.AllInstances.SetMatchHostStringInt32Boolean">
            <summary>设置 NetworkManager.SetMatchHost(String newHost, Int32 port, Boolean https) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Networking.Fakes.ShimNetworkManager.AllInstances.StartClient">
            <summary>设置 NetworkManager.StartClient() 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Networking.Fakes.ShimNetworkManager.AllInstances.StartClientMatchInfo">
            <summary>设置 NetworkManager.StartClient(MatchInfo matchInfo) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Networking.Fakes.ShimNetworkManager.AllInstances.StartClientMatchInfoConnectionConfig">
            <summary>设置 NetworkManager.StartClient(MatchInfo info, ConnectionConfig config) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Networking.Fakes.ShimNetworkManager.AllInstances.StartHost">
            <summary>设置 NetworkManager.StartHost() 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Networking.Fakes.ShimNetworkManager.AllInstances.StartHostConnectionConfigInt32">
            <summary>设置 NetworkManager.StartHost(ConnectionConfig config, Int32 maxConnections) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Networking.Fakes.ShimNetworkManager.AllInstances.StartHostMatchInfo">
            <summary>设置 NetworkManager.StartHost(MatchInfo info) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Networking.Fakes.ShimNetworkManager.AllInstances.StartMatchMaker">
            <summary>设置 NetworkManager.StartMatchMaker() 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Networking.Fakes.ShimNetworkManager.AllInstances.StartServer">
            <summary>设置 NetworkManager.StartServer() 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Networking.Fakes.ShimNetworkManager.AllInstances.StartServerConnectionConfigInt32">
            <summary>设置 NetworkManager.StartServer(ConnectionConfig config, Int32 maxConnections) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Networking.Fakes.ShimNetworkManager.AllInstances.StartServerMatchInfo">
            <summary>设置 NetworkManager.StartServer(MatchInfo info) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Networking.Fakes.ShimNetworkManager.AllInstances.StartServerMatchInfoConnectionConfigInt32">
            <summary>设置 NetworkManager.StartServer(MatchInfo info, ConnectionConfig config, Int32 maxConnections) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Networking.Fakes.ShimNetworkManager.AllInstances.StopClient">
            <summary>设置 NetworkManager.StopClient() 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Networking.Fakes.ShimNetworkManager.AllInstances.StopHost">
            <summary>设置 NetworkManager.StopHost() 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Networking.Fakes.ShimNetworkManager.AllInstances.StopMatchMaker">
            <summary>设置 NetworkManager.StopMatchMaker() 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Networking.Fakes.ShimNetworkManager.AllInstances.StopServer">
            <summary>设置 NetworkManager.StopServer() 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Networking.Fakes.ShimNetworkManager.AllInstances.autoCreatePlayerGet">
            <summary>设置 NetworkManager.get_autoCreatePlayer() 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Networking.Fakes.ShimNetworkManager.AllInstances.autoCreatePlayerSetBoolean">
            <summary>设置 NetworkManager.set_autoCreatePlayer(Boolean value) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Networking.Fakes.ShimNetworkManager.AllInstances.channelsGet">
            <summary>设置 NetworkManager.get_channels() 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Networking.Fakes.ShimNetworkManager.AllInstances.connectionConfigGet">
            <summary>设置 NetworkManager.get_connectionConfig() 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Networking.Fakes.ShimNetworkManager.AllInstances.customConfigGet">
            <summary>设置 NetworkManager.get_customConfig() 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Networking.Fakes.ShimNetworkManager.AllInstances.customConfigSetBoolean">
            <summary>设置 NetworkManager.set_customConfig(Boolean value) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Networking.Fakes.ShimNetworkManager.AllInstances.dontDestroyOnLoadGet">
            <summary>设置 NetworkManager.get_dontDestroyOnLoad() 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Networking.Fakes.ShimNetworkManager.AllInstances.dontDestroyOnLoadSetBoolean">
            <summary>设置 NetworkManager.set_dontDestroyOnLoad(Boolean value) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Networking.Fakes.ShimNetworkManager.AllInstances.logLevelGet">
            <summary>设置 NetworkManager.get_logLevel() 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Networking.Fakes.ShimNetworkManager.AllInstances.logLevelSetLogFilterFilterLevel">
            <summary>设置 NetworkManager.set_logLevel(FilterLevel value) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Networking.Fakes.ShimNetworkManager.AllInstances.matchHostGet">
            <summary>设置 NetworkManager.get_matchHost() 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Networking.Fakes.ShimNetworkManager.AllInstances.matchHostSetString">
            <summary>设置 NetworkManager.set_matchHost(String value) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Networking.Fakes.ShimNetworkManager.AllInstances.matchPortGet">
            <summary>设置 NetworkManager.get_matchPort() 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Networking.Fakes.ShimNetworkManager.AllInstances.matchPortSetInt32">
            <summary>设置 NetworkManager.set_matchPort(Int32 value) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Networking.Fakes.ShimNetworkManager.AllInstances.maxConnectionsGet">
            <summary>设置 NetworkManager.get_maxConnections() 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Networking.Fakes.ShimNetworkManager.AllInstances.maxConnectionsSetInt32">
            <summary>设置 NetworkManager.set_maxConnections(Int32 value) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Networking.Fakes.ShimNetworkManager.AllInstances.maxDelayGet">
            <summary>设置 NetworkManager.get_maxDelay() 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Networking.Fakes.ShimNetworkManager.AllInstances.maxDelaySetSingle">
            <summary>设置 NetworkManager.set_maxDelay(Single value) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Networking.Fakes.ShimNetworkManager.AllInstances.networkAddressGet">
            <summary>设置 NetworkManager.get_networkAddress() 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Networking.Fakes.ShimNetworkManager.AllInstances.networkAddressSetString">
            <summary>设置 NetworkManager.set_networkAddress(String value) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Networking.Fakes.ShimNetworkManager.AllInstances.networkPortGet">
            <summary>设置 NetworkManager.get_networkPort() 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Networking.Fakes.ShimNetworkManager.AllInstances.networkPortSetInt32">
            <summary>设置 NetworkManager.set_networkPort(Int32 value) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Networking.Fakes.ShimNetworkManager.AllInstances.numPlayersGet">
            <summary>设置 NetworkManager.get_numPlayers() 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Networking.Fakes.ShimNetworkManager.AllInstances.offlineSceneGet">
            <summary>设置 NetworkManager.get_offlineScene() 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Networking.Fakes.ShimNetworkManager.AllInstances.offlineSceneSetString">
            <summary>设置 NetworkManager.set_offlineScene(String value) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Networking.Fakes.ShimNetworkManager.AllInstances.onlineSceneGet">
            <summary>设置 NetworkManager.get_onlineScene() 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Networking.Fakes.ShimNetworkManager.AllInstances.onlineSceneSetString">
            <summary>设置 NetworkManager.set_onlineScene(String value) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Networking.Fakes.ShimNetworkManager.AllInstances.packetLossPercentageGet">
            <summary>设置 NetworkManager.get_packetLossPercentage() 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Networking.Fakes.ShimNetworkManager.AllInstances.packetLossPercentageSetSingle">
            <summary>设置 NetworkManager.set_packetLossPercentage(Single value) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Networking.Fakes.ShimNetworkManager.AllInstances.playerPrefabGet">
            <summary>设置 NetworkManager.get_playerPrefab() 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Networking.Fakes.ShimNetworkManager.AllInstances.playerPrefabSetGameObject">
            <summary>设置 NetworkManager.set_playerPrefab(GameObject value) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Networking.Fakes.ShimNetworkManager.AllInstances.playerSpawnMethodGet">
            <summary>设置 NetworkManager.get_playerSpawnMethod() 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Networking.Fakes.ShimNetworkManager.AllInstances.playerSpawnMethodSetPlayerSpawnMethod">
            <summary>设置 NetworkManager.set_playerSpawnMethod(PlayerSpawnMethod value) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Networking.Fakes.ShimNetworkManager.AllInstances.runInBackgroundGet">
            <summary>设置 NetworkManager.get_runInBackground() 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Networking.Fakes.ShimNetworkManager.AllInstances.runInBackgroundSetBoolean">
            <summary>设置 NetworkManager.set_runInBackground(Boolean value) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Networking.Fakes.ShimNetworkManager.AllInstances.scriptCRCCheckGet">
            <summary>设置 NetworkManager.get_scriptCRCCheck() 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Networking.Fakes.ShimNetworkManager.AllInstances.scriptCRCCheckSetBoolean">
            <summary>设置 NetworkManager.set_scriptCRCCheck(Boolean value) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Networking.Fakes.ShimNetworkManager.AllInstances.secureTunnelEndpointGet">
            <summary>设置 NetworkManager.get_secureTunnelEndpoint() 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Networking.Fakes.ShimNetworkManager.AllInstances.secureTunnelEndpointSetEndPoint">
            <summary>设置 NetworkManager.set_secureTunnelEndpoint(EndPoint value) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Networking.Fakes.ShimNetworkManager.AllInstances.sendPeerInfoGet">
            <summary>设置 NetworkManager.get_sendPeerInfo() 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Networking.Fakes.ShimNetworkManager.AllInstances.sendPeerInfoSetBoolean">
            <summary>设置 NetworkManager.set_sendPeerInfo(Boolean value) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Networking.Fakes.ShimNetworkManager.AllInstances.serverBindAddressGet">
            <summary>设置 NetworkManager.get_serverBindAddress() 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Networking.Fakes.ShimNetworkManager.AllInstances.serverBindAddressSetString">
            <summary>设置 NetworkManager.set_serverBindAddress(String value) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Networking.Fakes.ShimNetworkManager.AllInstances.serverBindToIPGet">
            <summary>设置 NetworkManager.get_serverBindToIP() 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Networking.Fakes.ShimNetworkManager.AllInstances.serverBindToIPSetBoolean">
            <summary>设置 NetworkManager.set_serverBindToIP(Boolean value) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Networking.Fakes.ShimNetworkManager.AllInstances.simulatedLatencyGet">
            <summary>设置 NetworkManager.get_simulatedLatency() 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Networking.Fakes.ShimNetworkManager.AllInstances.simulatedLatencySetInt32">
            <summary>设置 NetworkManager.set_simulatedLatency(Int32 value) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Networking.Fakes.ShimNetworkManager.AllInstances.spawnPrefabsGet">
            <summary>设置 NetworkManager.get_spawnPrefabs() 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Networking.Fakes.ShimNetworkManager.AllInstances.startPositionsGet">
            <summary>设置 NetworkManager.get_startPositions() 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Networking.Fakes.ShimNetworkManager.AllInstances.useSimulatorGet">
            <summary>设置 NetworkManager.get_useSimulator() 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Networking.Fakes.ShimNetworkManager.AllInstances.useSimulatorSetBoolean">
            <summary>设置 NetworkManager.set_useSimulator(Boolean value) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Networking.Fakes.ShimNetworkManager.Awake">
            <summary>设置 NetworkManager.Awake() 的 填充码</summary>
        </member>
        <member name="M:UnityEngine.Networking.Fakes.ShimNetworkManager.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:UnityEngine.Networking.Fakes.ShimNetworkManager.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:UnityEngine.Networking.Fakes.ShimNetworkManager.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:UnityEngine.Networking.Fakes.ShimNetworkManager.ClientChangeSceneStringBoolean">
            <summary>设置 NetworkManager.ClientChangeScene(String newSceneName, Boolean forceReload) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Networking.Fakes.ShimNetworkManager.ConnectLocalClient">
            <summary>设置 NetworkManager.ConnectLocalClient() 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Networking.Fakes.ShimNetworkManager.Constructor">
            <summary>设置 NetworkManager.NetworkManager() 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Networking.Fakes.ShimNetworkManager.FinishLoadScene">
            <summary>设置 NetworkManager.FinishLoadScene() 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Networking.Fakes.ShimNetworkManager.GetStartPosition">
            <summary>设置 NetworkManager.GetStartPosition() 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Networking.Fakes.ShimNetworkManager.IsClientConnected">
            <summary>设置 NetworkManager.IsClientConnected() 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Networking.Fakes.ShimNetworkManager.OnClientConnectInternalNetworkMessage">
            <summary>设置 NetworkManager.OnClientConnectInternal(NetworkMessage netMsg) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Networking.Fakes.ShimNetworkManager.OnClientConnectNetworkConnection">
            <summary>设置 NetworkManager.OnClientConnect(NetworkConnection conn) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Networking.Fakes.ShimNetworkManager.OnClientDisconnectInternalNetworkMessage">
            <summary>设置 NetworkManager.OnClientDisconnectInternal(NetworkMessage netMsg) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Networking.Fakes.ShimNetworkManager.OnClientDisconnectNetworkConnection">
            <summary>设置 NetworkManager.OnClientDisconnect(NetworkConnection conn) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Networking.Fakes.ShimNetworkManager.OnClientErrorInternalNetworkMessage">
            <summary>设置 NetworkManager.OnClientErrorInternal(NetworkMessage netMsg) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Networking.Fakes.ShimNetworkManager.OnClientErrorNetworkConnectionInt32">
            <summary>设置 NetworkManager.OnClientError(NetworkConnection conn, Int32 errorCode) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Networking.Fakes.ShimNetworkManager.OnClientNotReadyMessageInternalNetworkMessage">
            <summary>设置 NetworkManager.OnClientNotReadyMessageInternal(NetworkMessage netMsg) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Networking.Fakes.ShimNetworkManager.OnClientNotReadyNetworkConnection">
            <summary>设置 NetworkManager.OnClientNotReady(NetworkConnection conn) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Networking.Fakes.ShimNetworkManager.OnClientSceneChangedNetworkConnection">
            <summary>设置 NetworkManager.OnClientSceneChanged(NetworkConnection conn) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Networking.Fakes.ShimNetworkManager.OnClientSceneInternalNetworkMessage">
            <summary>设置 NetworkManager.OnClientSceneInternal(NetworkMessage netMsg) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Networking.Fakes.ShimNetworkManager.OnDestroy">
            <summary>设置 NetworkManager.OnDestroy() 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Networking.Fakes.ShimNetworkManager.OnMatchCreateCreateMatchResponse">
            <summary>设置 NetworkManager.OnMatchCreate(CreateMatchResponse matchInfo) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Networking.Fakes.ShimNetworkManager.OnMatchJoinedJoinMatchResponse">
            <summary>设置 NetworkManager.OnMatchJoined(JoinMatchResponse matchInfo) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Networking.Fakes.ShimNetworkManager.OnMatchListListMatchResponse">
            <summary>设置 NetworkManager.OnMatchList(ListMatchResponse matchList) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Networking.Fakes.ShimNetworkManager.OnServerAddPlayerInternalNetworkConnectionInt16">
            <summary>设置 NetworkManager.OnServerAddPlayerInternal(NetworkConnection conn, Int16 playerControllerId) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Networking.Fakes.ShimNetworkManager.OnServerAddPlayerMessageInternalNetworkMessage">
            <summary>设置 NetworkManager.OnServerAddPlayerMessageInternal(NetworkMessage netMsg) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Networking.Fakes.ShimNetworkManager.OnServerAddPlayerNetworkConnectionInt16">
            <summary>设置 NetworkManager.OnServerAddPlayer(NetworkConnection conn, Int16 playerControllerId) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Networking.Fakes.ShimNetworkManager.OnServerAddPlayerNetworkConnectionInt16NetworkReader">
            <summary>设置 NetworkManager.OnServerAddPlayer(NetworkConnection conn, Int16 playerControllerId, NetworkReader extraMessageReader) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Networking.Fakes.ShimNetworkManager.OnServerConnectInternalNetworkMessage">
            <summary>设置 NetworkManager.OnServerConnectInternal(NetworkMessage netMsg) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Networking.Fakes.ShimNetworkManager.OnServerConnectNetworkConnection">
            <summary>设置 NetworkManager.OnServerConnect(NetworkConnection conn) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Networking.Fakes.ShimNetworkManager.OnServerDisconnectInternalNetworkMessage">
            <summary>设置 NetworkManager.OnServerDisconnectInternal(NetworkMessage netMsg) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Networking.Fakes.ShimNetworkManager.OnServerDisconnectNetworkConnection">
            <summary>设置 NetworkManager.OnServerDisconnect(NetworkConnection conn) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Networking.Fakes.ShimNetworkManager.OnServerErrorInternalNetworkMessage">
            <summary>设置 NetworkManager.OnServerErrorInternal(NetworkMessage netMsg) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Networking.Fakes.ShimNetworkManager.OnServerErrorNetworkConnectionInt32">
            <summary>设置 NetworkManager.OnServerError(NetworkConnection conn, Int32 errorCode) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Networking.Fakes.ShimNetworkManager.OnServerReadyMessageInternalNetworkMessage">
            <summary>设置 NetworkManager.OnServerReadyMessageInternal(NetworkMessage netMsg) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Networking.Fakes.ShimNetworkManager.OnServerReadyNetworkConnection">
            <summary>设置 NetworkManager.OnServerReady(NetworkConnection conn) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Networking.Fakes.ShimNetworkManager.OnServerRemovePlayerMessageInternalNetworkMessage">
            <summary>设置 NetworkManager.OnServerRemovePlayerMessageInternal(NetworkMessage netMsg) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Networking.Fakes.ShimNetworkManager.OnServerRemovePlayerNetworkConnectionPlayerController">
            <summary>设置 NetworkManager.OnServerRemovePlayer(NetworkConnection conn, PlayerController player) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Networking.Fakes.ShimNetworkManager.OnServerSceneChangedString">
            <summary>设置 NetworkManager.OnServerSceneChanged(String sceneName) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Networking.Fakes.ShimNetworkManager.OnStartClientNetworkClient">
            <summary>设置 NetworkManager.OnStartClient(NetworkClient client) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Networking.Fakes.ShimNetworkManager.OnStartHost">
            <summary>设置 NetworkManager.OnStartHost() 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Networking.Fakes.ShimNetworkManager.OnStartServer">
            <summary>设置 NetworkManager.OnStartServer() 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Networking.Fakes.ShimNetworkManager.OnStopClient">
            <summary>设置 NetworkManager.OnStopClient() 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Networking.Fakes.ShimNetworkManager.OnStopHost">
            <summary>设置 NetworkManager.OnStopHost() 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Networking.Fakes.ShimNetworkManager.OnStopServer">
            <summary>设置 NetworkManager.OnStopServer() 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Networking.Fakes.ShimNetworkManager.OnValidate">
            <summary>设置 NetworkManager.OnValidate() 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Networking.Fakes.ShimNetworkManager.RegisterClientMessagesNetworkClient">
            <summary>设置 NetworkManager.RegisterClientMessages(NetworkClient client) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Networking.Fakes.ShimNetworkManager.RegisterServerMessages">
            <summary>设置 NetworkManager.RegisterServerMessages() 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Networking.Fakes.ShimNetworkManager.RegisterStartPositionTransform">
            <summary>设置 NetworkManager.RegisterStartPosition(Transform start) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Networking.Fakes.ShimNetworkManager.ServerChangeSceneString">
            <summary>设置 NetworkManager.ServerChangeScene(String newSceneName) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Networking.Fakes.ShimNetworkManager.SetMatchHostStringInt32Boolean">
            <summary>设置 NetworkManager.SetMatchHost(String newHost, Int32 port, Boolean https) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Networking.Fakes.ShimNetworkManager.Shutdown">
            <summary>设置 NetworkManager.Shutdown() 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Networking.Fakes.ShimNetworkManager.StartClient">
            <summary>设置 NetworkManager.StartClient() 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Networking.Fakes.ShimNetworkManager.StartClientMatchInfo">
            <summary>设置 NetworkManager.StartClient(MatchInfo matchInfo) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Networking.Fakes.ShimNetworkManager.StartClientMatchInfoConnectionConfig">
            <summary>设置 NetworkManager.StartClient(MatchInfo info, ConnectionConfig config) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Networking.Fakes.ShimNetworkManager.StartHost">
            <summary>设置 NetworkManager.StartHost() 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Networking.Fakes.ShimNetworkManager.StartHostConnectionConfigInt32">
            <summary>设置 NetworkManager.StartHost(ConnectionConfig config, Int32 maxConnections) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Networking.Fakes.ShimNetworkManager.StartHostMatchInfo">
            <summary>设置 NetworkManager.StartHost(MatchInfo info) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Networking.Fakes.ShimNetworkManager.StartMatchMaker">
            <summary>设置 NetworkManager.StartMatchMaker() 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Networking.Fakes.ShimNetworkManager.StartServer">
            <summary>设置 NetworkManager.StartServer() 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Networking.Fakes.ShimNetworkManager.StartServerConnectionConfigInt32">
            <summary>设置 NetworkManager.StartServer(ConnectionConfig config, Int32 maxConnections) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Networking.Fakes.ShimNetworkManager.StartServerMatchInfo">
            <summary>设置 NetworkManager.StartServer(MatchInfo info) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Networking.Fakes.ShimNetworkManager.StartServerMatchInfoConnectionConfigInt32">
            <summary>设置 NetworkManager.StartServer(MatchInfo info, ConnectionConfig config, Int32 maxConnections) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Networking.Fakes.ShimNetworkManager.StaticConstructor">
            <summary>设置 NetworkManager.NetworkManager() 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Networking.Fakes.ShimNetworkManager.StopClient">
            <summary>设置 NetworkManager.StopClient() 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Networking.Fakes.ShimNetworkManager.StopHost">
            <summary>设置 NetworkManager.StopHost() 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Networking.Fakes.ShimNetworkManager.StopMatchMaker">
            <summary>设置 NetworkManager.StopMatchMaker() 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Networking.Fakes.ShimNetworkManager.StopServer">
            <summary>设置 NetworkManager.StopServer() 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Networking.Fakes.ShimNetworkManager.UnRegisterStartPositionTransform">
            <summary>设置 NetworkManager.UnRegisterStartPosition(Transform start) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Networking.Fakes.ShimNetworkManager.UpdateScene">
            <summary>设置 NetworkManager.UpdateScene() 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Networking.Fakes.ShimNetworkManager.autoCreatePlayerGet">
            <summary>设置 NetworkManager.get_autoCreatePlayer() 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Networking.Fakes.ShimNetworkManager.autoCreatePlayerSetBoolean">
            <summary>设置 NetworkManager.set_autoCreatePlayer(Boolean value) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Networking.Fakes.ShimNetworkManager.channelsGet">
            <summary>设置 NetworkManager.get_channels() 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Networking.Fakes.ShimNetworkManager.connectionConfigGet">
            <summary>设置 NetworkManager.get_connectionConfig() 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Networking.Fakes.ShimNetworkManager.customConfigGet">
            <summary>设置 NetworkManager.get_customConfig() 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Networking.Fakes.ShimNetworkManager.customConfigSetBoolean">
            <summary>设置 NetworkManager.set_customConfig(Boolean value) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Networking.Fakes.ShimNetworkManager.dontDestroyOnLoadGet">
            <summary>设置 NetworkManager.get_dontDestroyOnLoad() 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Networking.Fakes.ShimNetworkManager.dontDestroyOnLoadSetBoolean">
            <summary>设置 NetworkManager.set_dontDestroyOnLoad(Boolean value) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Networking.Fakes.ShimNetworkManager.logLevelGet">
            <summary>设置 NetworkManager.get_logLevel() 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Networking.Fakes.ShimNetworkManager.logLevelSetLogFilterFilterLevel">
            <summary>设置 NetworkManager.set_logLevel(FilterLevel value) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Networking.Fakes.ShimNetworkManager.matchHostGet">
            <summary>设置 NetworkManager.get_matchHost() 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Networking.Fakes.ShimNetworkManager.matchHostSetString">
            <summary>设置 NetworkManager.set_matchHost(String value) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Networking.Fakes.ShimNetworkManager.matchPortGet">
            <summary>设置 NetworkManager.get_matchPort() 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Networking.Fakes.ShimNetworkManager.matchPortSetInt32">
            <summary>设置 NetworkManager.set_matchPort(Int32 value) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Networking.Fakes.ShimNetworkManager.maxConnectionsGet">
            <summary>设置 NetworkManager.get_maxConnections() 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Networking.Fakes.ShimNetworkManager.maxConnectionsSetInt32">
            <summary>设置 NetworkManager.set_maxConnections(Int32 value) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Networking.Fakes.ShimNetworkManager.maxDelayGet">
            <summary>设置 NetworkManager.get_maxDelay() 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Networking.Fakes.ShimNetworkManager.maxDelaySetSingle">
            <summary>设置 NetworkManager.set_maxDelay(Single value) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Networking.Fakes.ShimNetworkManager.networkAddressGet">
            <summary>设置 NetworkManager.get_networkAddress() 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Networking.Fakes.ShimNetworkManager.networkAddressSetString">
            <summary>设置 NetworkManager.set_networkAddress(String value) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Networking.Fakes.ShimNetworkManager.networkPortGet">
            <summary>设置 NetworkManager.get_networkPort() 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Networking.Fakes.ShimNetworkManager.networkPortSetInt32">
            <summary>设置 NetworkManager.set_networkPort(Int32 value) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Networking.Fakes.ShimNetworkManager.numPlayersGet">
            <summary>设置 NetworkManager.get_numPlayers() 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Networking.Fakes.ShimNetworkManager.offlineSceneGet">
            <summary>设置 NetworkManager.get_offlineScene() 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Networking.Fakes.ShimNetworkManager.offlineSceneSetString">
            <summary>设置 NetworkManager.set_offlineScene(String value) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Networking.Fakes.ShimNetworkManager.onlineSceneGet">
            <summary>设置 NetworkManager.get_onlineScene() 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Networking.Fakes.ShimNetworkManager.onlineSceneSetString">
            <summary>设置 NetworkManager.set_onlineScene(String value) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Networking.Fakes.ShimNetworkManager.packetLossPercentageGet">
            <summary>设置 NetworkManager.get_packetLossPercentage() 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Networking.Fakes.ShimNetworkManager.packetLossPercentageSetSingle">
            <summary>设置 NetworkManager.set_packetLossPercentage(Single value) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Networking.Fakes.ShimNetworkManager.playerPrefabGet">
            <summary>设置 NetworkManager.get_playerPrefab() 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Networking.Fakes.ShimNetworkManager.playerPrefabSetGameObject">
            <summary>设置 NetworkManager.set_playerPrefab(GameObject value) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Networking.Fakes.ShimNetworkManager.playerSpawnMethodGet">
            <summary>设置 NetworkManager.get_playerSpawnMethod() 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Networking.Fakes.ShimNetworkManager.playerSpawnMethodSetPlayerSpawnMethod">
            <summary>设置 NetworkManager.set_playerSpawnMethod(PlayerSpawnMethod value) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Networking.Fakes.ShimNetworkManager.runInBackgroundGet">
            <summary>设置 NetworkManager.get_runInBackground() 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Networking.Fakes.ShimNetworkManager.runInBackgroundSetBoolean">
            <summary>设置 NetworkManager.set_runInBackground(Boolean value) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Networking.Fakes.ShimNetworkManager.scriptCRCCheckGet">
            <summary>设置 NetworkManager.get_scriptCRCCheck() 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Networking.Fakes.ShimNetworkManager.scriptCRCCheckSetBoolean">
            <summary>设置 NetworkManager.set_scriptCRCCheck(Boolean value) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Networking.Fakes.ShimNetworkManager.secureTunnelEndpointGet">
            <summary>设置 NetworkManager.get_secureTunnelEndpoint() 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Networking.Fakes.ShimNetworkManager.secureTunnelEndpointSetEndPoint">
            <summary>设置 NetworkManager.set_secureTunnelEndpoint(EndPoint value) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Networking.Fakes.ShimNetworkManager.sendPeerInfoGet">
            <summary>设置 NetworkManager.get_sendPeerInfo() 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Networking.Fakes.ShimNetworkManager.sendPeerInfoSetBoolean">
            <summary>设置 NetworkManager.set_sendPeerInfo(Boolean value) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Networking.Fakes.ShimNetworkManager.serverBindAddressGet">
            <summary>设置 NetworkManager.get_serverBindAddress() 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Networking.Fakes.ShimNetworkManager.serverBindAddressSetString">
            <summary>设置 NetworkManager.set_serverBindAddress(String value) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Networking.Fakes.ShimNetworkManager.serverBindToIPGet">
            <summary>设置 NetworkManager.get_serverBindToIP() 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Networking.Fakes.ShimNetworkManager.serverBindToIPSetBoolean">
            <summary>设置 NetworkManager.set_serverBindToIP(Boolean value) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Networking.Fakes.ShimNetworkManager.simulatedLatencyGet">
            <summary>设置 NetworkManager.get_simulatedLatency() 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Networking.Fakes.ShimNetworkManager.simulatedLatencySetInt32">
            <summary>设置 NetworkManager.set_simulatedLatency(Int32 value) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Networking.Fakes.ShimNetworkManager.spawnPrefabsGet">
            <summary>设置 NetworkManager.get_spawnPrefabs() 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Networking.Fakes.ShimNetworkManager.startPositionsGet">
            <summary>设置 NetworkManager.get_startPositions() 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Networking.Fakes.ShimNetworkManager.useSimulatorGet">
            <summary>设置 NetworkManager.get_useSimulator() 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Networking.Fakes.ShimNetworkManager.useSimulatorSetBoolean">
            <summary>设置 NetworkManager.set_useSimulator(Boolean value) 的 填充码</summary>
        </member>
        <member name="T:UnityEngine.Networking.Fakes.ShimNetworkManagerHUD">
            <summary>UnityEngine.Networking.NetworkManagerHUD 的填充码类型</summary>
        </member>
        <member name="M:UnityEngine.Networking.Fakes.ShimNetworkManagerHUD.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:UnityEngine.Networking.Fakes.ShimNetworkManagerHUD.#ctor(UnityEngine.Networking.NetworkManagerHUD)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="T:UnityEngine.Networking.Fakes.ShimNetworkManagerHUD.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:UnityEngine.Networking.Fakes.ShimNetworkManagerHUD.AllInstances.Awake">
            <summary>设置 NetworkManagerHUD.Awake() 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Networking.Fakes.ShimNetworkManagerHUD.AllInstances.OnGUI">
            <summary>设置 NetworkManagerHUD.OnGUI() 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Networking.Fakes.ShimNetworkManagerHUD.AllInstances.Update">
            <summary>设置 NetworkManagerHUD.Update() 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Networking.Fakes.ShimNetworkManagerHUD.Awake">
            <summary>设置 NetworkManagerHUD.Awake() 的 填充码</summary>
        </member>
        <member name="M:UnityEngine.Networking.Fakes.ShimNetworkManagerHUD.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:UnityEngine.Networking.Fakes.ShimNetworkManagerHUD.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:UnityEngine.Networking.Fakes.ShimNetworkManagerHUD.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:UnityEngine.Networking.Fakes.ShimNetworkManagerHUD.Constructor">
            <summary>设置 NetworkManagerHUD.NetworkManagerHUD() 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Networking.Fakes.ShimNetworkManagerHUD.OnGUI">
            <summary>设置 NetworkManagerHUD.OnGUI() 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Networking.Fakes.ShimNetworkManagerHUD.Update">
            <summary>设置 NetworkManagerHUD.Update() 的 填充码</summary>
        </member>
        <member name="T:UnityEngine.Networking.Fakes.ShimNetworkMessage">
            <summary>UnityEngine.Networking.NetworkMessage 的填充码类型</summary>
        </member>
        <member name="M:UnityEngine.Networking.Fakes.ShimNetworkMessage.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:UnityEngine.Networking.Fakes.ShimNetworkMessage.#ctor(UnityEngine.Networking.NetworkMessage)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="T:UnityEngine.Networking.Fakes.ShimNetworkMessage.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="M:UnityEngine.Networking.Fakes.ShimNetworkMessage.AllInstances.ReadMessageOf1``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{UnityEngine.Networking.NetworkMessage,``0})">
            <summary>设置 NetworkMessage.ReadMessage() 的 填充码</summary>
        </member>
        <member name="M:UnityEngine.Networking.Fakes.ShimNetworkMessage.AllInstances.ReadMessageOf1M0``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Action{UnityEngine.Networking.NetworkMessage,``0})">
            <summary>设置 NetworkMessage.ReadMessage(!!0 msg) 的 填充码</summary>
        </member>
        <member name="M:UnityEngine.Networking.Fakes.ShimNetworkMessage.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:UnityEngine.Networking.Fakes.ShimNetworkMessage.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:UnityEngine.Networking.Fakes.ShimNetworkMessage.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:UnityEngine.Networking.Fakes.ShimNetworkMessage.Constructor">
            <summary>设置 NetworkMessage.NetworkMessage() 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Networking.Fakes.ShimNetworkMessage.DumpByteArrayInt32">
            <summary>设置 NetworkMessage.Dump(Byte[] payload, Int32 sz) 的 填充码</summary>
        </member>
        <member name="M:UnityEngine.Networking.Fakes.ShimNetworkMessage.ReadMessageOf1``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{``0})">
            <summary>设置 NetworkMessage.ReadMessage() 的 填充码</summary>
        </member>
        <member name="M:UnityEngine.Networking.Fakes.ShimNetworkMessage.ReadMessageOf1M0``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Action{``0})">
            <summary>设置 NetworkMessage.ReadMessage(!!0 msg) 的 填充码</summary>
        </member>
        <member name="T:UnityEngine.Networking.Fakes.ShimNetworkProximityChecker">
            <summary>UnityEngine.Networking.NetworkProximityChecker 的填充码类型</summary>
        </member>
        <member name="M:UnityEngine.Networking.Fakes.ShimNetworkProximityChecker.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:UnityEngine.Networking.Fakes.ShimNetworkProximityChecker.#ctor(UnityEngine.Networking.NetworkProximityChecker)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="T:UnityEngine.Networking.Fakes.ShimNetworkProximityChecker.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:UnityEngine.Networking.Fakes.ShimNetworkProximityChecker.AllInstances.OnCheckObserverNetworkConnection">
            <summary>设置 NetworkProximityChecker.OnCheckObserver(NetworkConnection newObserver) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Networking.Fakes.ShimNetworkProximityChecker.AllInstances.OnRebuildObserversHashSetOfNetworkConnectionBoolean">
            <summary>设置 NetworkProximityChecker.OnRebuildObservers(HashSet`1&lt;NetworkConnection&gt; observers, Boolean initial) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Networking.Fakes.ShimNetworkProximityChecker.AllInstances.OnSetLocalVisibilityBoolean">
            <summary>设置 NetworkProximityChecker.OnSetLocalVisibility(Boolean vis) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Networking.Fakes.ShimNetworkProximityChecker.AllInstances.Update">
            <summary>设置 NetworkProximityChecker.Update() 的 填充码</summary>
        </member>
        <member name="M:UnityEngine.Networking.Fakes.ShimNetworkProximityChecker.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:UnityEngine.Networking.Fakes.ShimNetworkProximityChecker.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:UnityEngine.Networking.Fakes.ShimNetworkProximityChecker.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:UnityEngine.Networking.Fakes.ShimNetworkProximityChecker.Constructor">
            <summary>设置 NetworkProximityChecker.NetworkProximityChecker() 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Networking.Fakes.ShimNetworkProximityChecker.OnCheckObserverNetworkConnection">
            <summary>设置 NetworkProximityChecker.OnCheckObserver(NetworkConnection newObserver) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Networking.Fakes.ShimNetworkProximityChecker.OnRebuildObserversHashSetOfNetworkConnectionBoolean">
            <summary>设置 NetworkProximityChecker.OnRebuildObservers(HashSet`1&lt;NetworkConnection&gt; observers, Boolean initial) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Networking.Fakes.ShimNetworkProximityChecker.OnSetLocalVisibilityBoolean">
            <summary>设置 NetworkProximityChecker.OnSetLocalVisibility(Boolean vis) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Networking.Fakes.ShimNetworkProximityChecker.SetVisGameObjectBoolean">
            <summary>设置 NetworkProximityChecker.SetVis(GameObject go, Boolean vis) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Networking.Fakes.ShimNetworkProximityChecker.Update">
            <summary>设置 NetworkProximityChecker.Update() 的 填充码</summary>
        </member>
        <member name="T:UnityEngine.Networking.Fakes.ShimNetworkReader">
            <summary>UnityEngine.Networking.NetworkReader 的填充码类型</summary>
        </member>
        <member name="M:UnityEngine.Networking.Fakes.ShimNetworkReader.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:UnityEngine.Networking.Fakes.ShimNetworkReader.#ctor(UnityEngine.Networking.NetworkReader)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="T:UnityEngine.Networking.Fakes.ShimNetworkReader.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:UnityEngine.Networking.Fakes.ShimNetworkReader.AllInstances.PositionGet">
            <summary>设置 NetworkReader.get_Position() 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Networking.Fakes.ShimNetworkReader.AllInstances.ReadBoolean">
            <summary>设置 NetworkReader.ReadBoolean() 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Networking.Fakes.ShimNetworkReader.AllInstances.ReadByte">
            <summary>设置 NetworkReader.ReadByte() 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Networking.Fakes.ShimNetworkReader.AllInstances.ReadBytesAndSize">
            <summary>设置 NetworkReader.ReadBytesAndSize() 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Networking.Fakes.ShimNetworkReader.AllInstances.ReadBytesInt32">
            <summary>设置 NetworkReader.ReadBytes(Int32 count) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Networking.Fakes.ShimNetworkReader.AllInstances.ReadChar">
            <summary>设置 NetworkReader.ReadChar() 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Networking.Fakes.ShimNetworkReader.AllInstances.ReadColor">
            <summary>设置 NetworkReader.ReadColor() 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Networking.Fakes.ShimNetworkReader.AllInstances.ReadColor32">
            <summary>设置 NetworkReader.ReadColor32() 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Networking.Fakes.ShimNetworkReader.AllInstances.ReadDouble">
            <summary>设置 NetworkReader.ReadDouble() 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Networking.Fakes.ShimNetworkReader.AllInstances.ReadGameObject">
            <summary>设置 NetworkReader.ReadGameObject() 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Networking.Fakes.ShimNetworkReader.AllInstances.ReadInt16">
            <summary>设置 NetworkReader.ReadInt16() 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Networking.Fakes.ShimNetworkReader.AllInstances.ReadInt32">
            <summary>设置 NetworkReader.ReadInt32() 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Networking.Fakes.ShimNetworkReader.AllInstances.ReadInt64">
            <summary>设置 NetworkReader.ReadInt64() 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Networking.Fakes.ShimNetworkReader.AllInstances.ReadMatrix4x4">
            <summary>设置 NetworkReader.ReadMatrix4x4() 的 填充码</summary>
        </member>
        <member name="M:UnityEngine.Networking.Fakes.ShimNetworkReader.AllInstances.ReadMessageOf1``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{UnityEngine.Networking.NetworkReader,``0})">
            <summary>设置 NetworkReader.ReadMessage() 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Networking.Fakes.ShimNetworkReader.AllInstances.ReadNetworkHash128">
            <summary>设置 NetworkReader.ReadNetworkHash128() 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Networking.Fakes.ShimNetworkReader.AllInstances.ReadNetworkId">
            <summary>设置 NetworkReader.ReadNetworkId() 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Networking.Fakes.ShimNetworkReader.AllInstances.ReadNetworkIdentity">
            <summary>设置 NetworkReader.ReadNetworkIdentity() 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Networking.Fakes.ShimNetworkReader.AllInstances.ReadPackedUInt32">
            <summary>设置 NetworkReader.ReadPackedUInt32() 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Networking.Fakes.ShimNetworkReader.AllInstances.ReadPackedUInt64">
            <summary>设置 NetworkReader.ReadPackedUInt64() 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Networking.Fakes.ShimNetworkReader.AllInstances.ReadPlane">
            <summary>设置 NetworkReader.ReadPlane() 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Networking.Fakes.ShimNetworkReader.AllInstances.ReadQuaternion">
            <summary>设置 NetworkReader.ReadQuaternion() 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Networking.Fakes.ShimNetworkReader.AllInstances.ReadRay">
            <summary>设置 NetworkReader.ReadRay() 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Networking.Fakes.ShimNetworkReader.AllInstances.ReadRect">
            <summary>设置 NetworkReader.ReadRect() 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Networking.Fakes.ShimNetworkReader.AllInstances.ReadSByte">
            <summary>设置 NetworkReader.ReadSByte() 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Networking.Fakes.ShimNetworkReader.AllInstances.ReadSceneId">
            <summary>设置 NetworkReader.ReadSceneId() 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Networking.Fakes.ShimNetworkReader.AllInstances.ReadSingle">
            <summary>设置 NetworkReader.ReadSingle() 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Networking.Fakes.ShimNetworkReader.AllInstances.ReadString">
            <summary>设置 NetworkReader.ReadString() 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Networking.Fakes.ShimNetworkReader.AllInstances.ReadTransform">
            <summary>设置 NetworkReader.ReadTransform() 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Networking.Fakes.ShimNetworkReader.AllInstances.ReadUInt16">
            <summary>设置 NetworkReader.ReadUInt16() 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Networking.Fakes.ShimNetworkReader.AllInstances.ReadUInt32">
            <summary>设置 NetworkReader.ReadUInt32() 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Networking.Fakes.ShimNetworkReader.AllInstances.ReadUInt64">
            <summary>设置 NetworkReader.ReadUInt64() 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Networking.Fakes.ShimNetworkReader.AllInstances.ReadVector2">
            <summary>设置 NetworkReader.ReadVector2() 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Networking.Fakes.ShimNetworkReader.AllInstances.ReadVector3">
            <summary>设置 NetworkReader.ReadVector3() 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Networking.Fakes.ShimNetworkReader.AllInstances.ReadVector4">
            <summary>设置 NetworkReader.ReadVector4() 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Networking.Fakes.ShimNetworkReader.AllInstances.ReplaceByteArray">
            <summary>设置 NetworkReader.Replace(Byte[] buffer) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Networking.Fakes.ShimNetworkReader.AllInstances.SeekZero">
            <summary>设置 NetworkReader.SeekZero() 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Networking.Fakes.ShimNetworkReader.AllInstances.ToString01">
            <summary>设置 NetworkReader.ToString() 的 填充码</summary>
        </member>
        <member name="M:UnityEngine.Networking.Fakes.ShimNetworkReader.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:UnityEngine.Networking.Fakes.ShimNetworkReader.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:UnityEngine.Networking.Fakes.ShimNetworkReader.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:UnityEngine.Networking.Fakes.ShimNetworkReader.Constructor">
            <summary>设置 NetworkReader.NetworkReader() 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Networking.Fakes.ShimNetworkReader.ConstructorByteArray">
            <summary>设置 NetworkReader.NetworkReader(Byte[] buffer) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Networking.Fakes.ShimNetworkReader.ConstructorNetworkWriter">
            <summary>设置 NetworkReader.NetworkReader(NetworkWriter writer) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Networking.Fakes.ShimNetworkReader.Initialize">
            <summary>设置 NetworkReader.Initialize() 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Networking.Fakes.ShimNetworkReader.PositionGet">
            <summary>设置 NetworkReader.get_Position() 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Networking.Fakes.ShimNetworkReader.ReadBoolean">
            <summary>设置 NetworkReader.ReadBoolean() 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Networking.Fakes.ShimNetworkReader.ReadByte">
            <summary>设置 NetworkReader.ReadByte() 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Networking.Fakes.ShimNetworkReader.ReadBytesAndSize">
            <summary>设置 NetworkReader.ReadBytesAndSize() 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Networking.Fakes.ShimNetworkReader.ReadBytesInt32">
            <summary>设置 NetworkReader.ReadBytes(Int32 count) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Networking.Fakes.ShimNetworkReader.ReadChar">
            <summary>设置 NetworkReader.ReadChar() 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Networking.Fakes.ShimNetworkReader.ReadColor">
            <summary>设置 NetworkReader.ReadColor() 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Networking.Fakes.ShimNetworkReader.ReadColor32">
            <summary>设置 NetworkReader.ReadColor32() 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Networking.Fakes.ShimNetworkReader.ReadDouble">
            <summary>设置 NetworkReader.ReadDouble() 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Networking.Fakes.ShimNetworkReader.ReadGameObject">
            <summary>设置 NetworkReader.ReadGameObject() 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Networking.Fakes.ShimNetworkReader.ReadInt16">
            <summary>设置 NetworkReader.ReadInt16() 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Networking.Fakes.ShimNetworkReader.ReadInt32">
            <summary>设置 NetworkReader.ReadInt32() 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Networking.Fakes.ShimNetworkReader.ReadInt64">
            <summary>设置 NetworkReader.ReadInt64() 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Networking.Fakes.ShimNetworkReader.ReadMatrix4x4">
            <summary>设置 NetworkReader.ReadMatrix4x4() 的 填充码</summary>
        </member>
        <member name="M:UnityEngine.Networking.Fakes.ShimNetworkReader.ReadMessageOf1``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{``0})">
            <summary>设置 NetworkReader.ReadMessage() 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Networking.Fakes.ShimNetworkReader.ReadNetworkHash128">
            <summary>设置 NetworkReader.ReadNetworkHash128() 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Networking.Fakes.ShimNetworkReader.ReadNetworkId">
            <summary>设置 NetworkReader.ReadNetworkId() 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Networking.Fakes.ShimNetworkReader.ReadNetworkIdentity">
            <summary>设置 NetworkReader.ReadNetworkIdentity() 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Networking.Fakes.ShimNetworkReader.ReadPackedUInt32">
            <summary>设置 NetworkReader.ReadPackedUInt32() 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Networking.Fakes.ShimNetworkReader.ReadPackedUInt64">
            <summary>设置 NetworkReader.ReadPackedUInt64() 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Networking.Fakes.ShimNetworkReader.ReadPlane">
            <summary>设置 NetworkReader.ReadPlane() 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Networking.Fakes.ShimNetworkReader.ReadQuaternion">
            <summary>设置 NetworkReader.ReadQuaternion() 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Networking.Fakes.ShimNetworkReader.ReadRay">
            <summary>设置 NetworkReader.ReadRay() 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Networking.Fakes.ShimNetworkReader.ReadRect">
            <summary>设置 NetworkReader.ReadRect() 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Networking.Fakes.ShimNetworkReader.ReadSByte">
            <summary>设置 NetworkReader.ReadSByte() 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Networking.Fakes.ShimNetworkReader.ReadSceneId">
            <summary>设置 NetworkReader.ReadSceneId() 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Networking.Fakes.ShimNetworkReader.ReadSingle">
            <summary>设置 NetworkReader.ReadSingle() 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Networking.Fakes.ShimNetworkReader.ReadString">
            <summary>设置 NetworkReader.ReadString() 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Networking.Fakes.ShimNetworkReader.ReadTransform">
            <summary>设置 NetworkReader.ReadTransform() 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Networking.Fakes.ShimNetworkReader.ReadUInt16">
            <summary>设置 NetworkReader.ReadUInt16() 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Networking.Fakes.ShimNetworkReader.ReadUInt32">
            <summary>设置 NetworkReader.ReadUInt32() 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Networking.Fakes.ShimNetworkReader.ReadUInt64">
            <summary>设置 NetworkReader.ReadUInt64() 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Networking.Fakes.ShimNetworkReader.ReadVector2">
            <summary>设置 NetworkReader.ReadVector2() 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Networking.Fakes.ShimNetworkReader.ReadVector3">
            <summary>设置 NetworkReader.ReadVector3() 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Networking.Fakes.ShimNetworkReader.ReadVector4">
            <summary>设置 NetworkReader.ReadVector4() 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Networking.Fakes.ShimNetworkReader.ReplaceByteArray">
            <summary>设置 NetworkReader.Replace(Byte[] buffer) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Networking.Fakes.ShimNetworkReader.SeekZero">
            <summary>设置 NetworkReader.SeekZero() 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Networking.Fakes.ShimNetworkReader.ToString">
            <summary>设置 NetworkReader.ToString() 的 填充码</summary>
        </member>
        <member name="T:UnityEngine.Networking.Fakes.ShimNetworkSceneId">
            <summary>UnityEngine.Networking.NetworkSceneId 的填充码类型</summary>
        </member>
        <member name="M:UnityEngine.Networking.Fakes.ShimNetworkSceneId.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="T:UnityEngine.Networking.Fakes.ShimNetworkSceneId.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="M:UnityEngine.Networking.Fakes.ShimNetworkSceneId.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:UnityEngine.Networking.Fakes.ShimNetworkSceneId.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:UnityEngine.Networking.Fakes.ShimNetworkSceneId.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:UnityEngine.Networking.Fakes.ShimNetworkSceneId.EqualityOpNetworkSceneIdNetworkSceneId">
            <summary>设置 NetworkSceneId.op_Equality(NetworkSceneId c1, NetworkSceneId c2) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Networking.Fakes.ShimNetworkSceneId.InequalityOpNetworkSceneIdNetworkSceneId">
            <summary>设置 NetworkSceneId.op_Inequality(NetworkSceneId c1, NetworkSceneId c2) 的 填充码</summary>
        </member>
        <member name="T:UnityEngine.Networking.Fakes.ShimNetworkServer">
            <summary>UnityEngine.Networking.NetworkServer 的填充码类型</summary>
        </member>
        <member name="M:UnityEngine.Networking.Fakes.ShimNetworkServer.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:UnityEngine.Networking.Fakes.ShimNetworkServer.#ctor(UnityEngine.Networking.NetworkServer)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="P:UnityEngine.Networking.Fakes.ShimNetworkServer.ActivateLocalClientScene">
            <summary>设置 NetworkServer.ActivateLocalClientScene() 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Networking.Fakes.ShimNetworkServer.AddExternalConnectionInternalNetworkConnection">
            <summary>设置 NetworkServer.AddExternalConnectionInternal(NetworkConnection conn) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Networking.Fakes.ShimNetworkServer.AddExternalConnectionNetworkConnection">
            <summary>设置 NetworkServer.AddExternalConnection(NetworkConnection conn) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Networking.Fakes.ShimNetworkServer.AddPlayerForConnectionNetworkConnectionGameObjectInt16">
            <summary>设置 NetworkServer.AddPlayerForConnection(NetworkConnection conn, GameObject player, Int16 playerControllerId) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Networking.Fakes.ShimNetworkServer.AddPlayerForConnectionNetworkConnectionGameObjectInt16NetworkHash128">
            <summary>设置 NetworkServer.AddPlayerForConnection(NetworkConnection conn, GameObject player, Int16 playerControllerId, NetworkHash128 assetId) 的 填充码</summary>
        </member>
        <member name="T:UnityEngine.Networking.Fakes.ShimNetworkServer.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:UnityEngine.Networking.Fakes.ShimNetworkServer.AllInstances.ActivateLocalClientScene">
            <summary>设置 NetworkServer.ActivateLocalClientScene() 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Networking.Fakes.ShimNetworkServer.AllInstances.AddExternalConnectionInternalNetworkConnection">
            <summary>设置 NetworkServer.AddExternalConnectionInternal(NetworkConnection conn) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Networking.Fakes.ShimNetworkServer.AllInstances.CheckForNullObjects">
            <summary>设置 NetworkServer.CheckForNullObjects() 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Networking.Fakes.ShimNetworkServer.AllInstances.GenerateConnectErrorInt32">
            <summary>设置 NetworkServer.GenerateConnectError(Int32 error) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Networking.Fakes.ShimNetworkServer.AllInstances.GenerateDataErrorNetworkConnectionInt32">
            <summary>设置 NetworkServer.GenerateDataError(NetworkConnection conn, Int32 error) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Networking.Fakes.ShimNetworkServer.AllInstances.GenerateDisconnectErrorNetworkConnectionInt32">
            <summary>设置 NetworkServer.GenerateDisconnectError(NetworkConnection conn, Int32 error) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Networking.Fakes.ShimNetworkServer.AllInstances.GenerateErrorNetworkConnectionInt32">
            <summary>设置 NetworkServer.GenerateError(NetworkConnection conn, Int32 error) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Networking.Fakes.ShimNetworkServer.AllInstances.InternalAddPlayerForConnectionNetworkConnectionGameObjectInt16">
            <summary>设置 NetworkServer.InternalAddPlayerForConnection(NetworkConnection conn, GameObject playerGameObject, Int16 playerControllerId) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Networking.Fakes.ShimNetworkServer.AllInstances.InternalDisconnectAll">
            <summary>设置 NetworkServer.InternalDisconnectAll() 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Networking.Fakes.ShimNetworkServer.AllInstances.InternalListenRelayStringInt32NetworkIDSourceIDNodeIDInt32">
            <summary>设置 NetworkServer.InternalListenRelay(String relayIp, Int32 relayPort, NetworkID netGuid, SourceID sourceId, NodeID nodeId, Int32 listenPort) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Networking.Fakes.ShimNetworkServer.AllInstances.InternalListenStringInt32">
            <summary>设置 NetworkServer.InternalListen(String ipAddress, Int32 serverPort) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Networking.Fakes.ShimNetworkServer.AllInstances.InternalReplacePlayerForConnectionNetworkConnectionGameObjectInt16">
            <summary>设置 NetworkServer.InternalReplacePlayerForConnection(NetworkConnection conn, GameObject playerGameObject, Int16 playerControllerId) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Networking.Fakes.ShimNetworkServer.AllInstances.InternalSetClientNotReadyNetworkConnection">
            <summary>设置 NetworkServer.InternalSetClientNotReady(NetworkConnection conn) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Networking.Fakes.ShimNetworkServer.AllInstances.InternalSetMaxDelaySingle">
            <summary>设置 NetworkServer.InternalSetMaxDelay(Single seconds) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Networking.Fakes.ShimNetworkServer.AllInstances.InternalUpdate">
            <summary>设置 NetworkServer.InternalUpdate() 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Networking.Fakes.ShimNetworkServer.AllInstances.RemoveExternalConnectionInternalInt32">
            <summary>设置 NetworkServer.RemoveExternalConnectionInternal(Int32 connectionId) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Networking.Fakes.ShimNetworkServer.AllInstances.SendNetworkInfoNetworkConnection">
            <summary>设置 NetworkServer.SendNetworkInfo(NetworkConnection targetConnection) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Networking.Fakes.ShimNetworkServer.AllInstances.SendSpawnMessageNetworkIdentityNetworkConnection">
            <summary>设置 NetworkServer.SendSpawnMessage(NetworkIdentity uv, NetworkConnection conn) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Networking.Fakes.ShimNetworkServer.AllInstances.SetClientReadyInternalNetworkConnection">
            <summary>设置 NetworkServer.SetClientReadyInternal(NetworkConnection conn) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Networking.Fakes.ShimNetworkServer.AllInstances.SetLocalObjectOnServerNetworkInstanceIdGameObject">
            <summary>设置 NetworkServer.SetLocalObjectOnServer(NetworkInstanceId netId, GameObject obj) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Networking.Fakes.ShimNetworkServer.AllInstances.SetupLocalPlayerForConnectionNetworkConnectionNetworkIdentityPlayerController">
            <summary>设置 NetworkServer.SetupLocalPlayerForConnection(NetworkConnection conn, NetworkIdentity uv, PlayerController newPlayerController) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Networking.Fakes.ShimNetworkServer.AllInstances.SpawnObjectGameObject">
            <summary>设置 NetworkServer.SpawnObject(GameObject obj) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Networking.Fakes.ShimNetworkServer.AllInstances.UpdateServerObjects">
            <summary>设置 NetworkServer.UpdateServerObjects() 的 填充码</summary>
        </member>
        <member name="M:UnityEngine.Networking.Fakes.ShimNetworkServer.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:UnityEngine.Networking.Fakes.ShimNetworkServer.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:UnityEngine.Networking.Fakes.ShimNetworkServer.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:UnityEngine.Networking.Fakes.ShimNetworkServer.CheckForNullObjects">
            <summary>设置 NetworkServer.CheckForNullObjects() 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Networking.Fakes.ShimNetworkServer.CheckPlayerControllerIdForConnectionNetworkConnectionInt16">
            <summary>设置 NetworkServer.CheckPlayerControllerIdForConnection(NetworkConnection conn, Int16 playerControllerId) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Networking.Fakes.ShimNetworkServer.ClearHandlers">
            <summary>设置 NetworkServer.ClearHandlers() 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Networking.Fakes.ShimNetworkServer.ClearLocalObjects">
            <summary>设置 NetworkServer.ClearLocalObjects() 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Networking.Fakes.ShimNetworkServer.ClearSpawners">
            <summary>设置 NetworkServer.ClearSpawners() 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Networking.Fakes.ShimNetworkServer.ConfigureConnectionConfigInt32">
            <summary>设置 NetworkServer.Configure(ConnectionConfig config, Int32 maxConnections) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Networking.Fakes.ShimNetworkServer.ConfigureHostTopology">
            <summary>设置 NetworkServer.Configure(HostTopology topology) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Networking.Fakes.ShimNetworkServer.Constructor">
            <summary>设置 NetworkServer.NetworkServer() 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Networking.Fakes.ShimNetworkServer.DestroyGameObject">
            <summary>设置 NetworkServer.Destroy(GameObject obj) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Networking.Fakes.ShimNetworkServer.DestroyObjectGameObject">
            <summary>设置 NetworkServer.DestroyObject(GameObject obj) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Networking.Fakes.ShimNetworkServer.DestroyObjectNetworkIdentityBoolean">
            <summary>设置 NetworkServer.DestroyObject(NetworkIdentity uv, Boolean destroyServerObject) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Networking.Fakes.ShimNetworkServer.DestroyPlayersForConnectionNetworkConnection">
            <summary>设置 NetworkServer.DestroyPlayersForConnection(NetworkConnection conn) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Networking.Fakes.ShimNetworkServer.DisconnectAll">
            <summary>设置 NetworkServer.DisconnectAll() 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Networking.Fakes.ShimNetworkServer.FindLocalObjectNetworkInstanceId">
            <summary>设置 NetworkServer.FindLocalObject(NetworkInstanceId netId) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Networking.Fakes.ShimNetworkServer.FinishPlayerForConnectionNetworkConnectionNetworkIdentityGameObject">
            <summary>设置 NetworkServer.FinishPlayerForConnection(NetworkConnection conn, NetworkIdentity uv, GameObject playerGameObject) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Networking.Fakes.ShimNetworkServer.GenerateConnectErrorInt32">
            <summary>设置 NetworkServer.GenerateConnectError(Int32 error) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Networking.Fakes.ShimNetworkServer.GenerateDataErrorNetworkConnectionInt32">
            <summary>设置 NetworkServer.GenerateDataError(NetworkConnection conn, Int32 error) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Networking.Fakes.ShimNetworkServer.GenerateDisconnectErrorNetworkConnectionInt32">
            <summary>设置 NetworkServer.GenerateDisconnectError(NetworkConnection conn, Int32 error) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Networking.Fakes.ShimNetworkServer.GenerateErrorNetworkConnectionInt32">
            <summary>设置 NetworkServer.GenerateError(NetworkConnection conn, Int32 error) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Networking.Fakes.ShimNetworkServer.GetConnectionStats">
            <summary>设置 NetworkServer.GetConnectionStats() 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Networking.Fakes.ShimNetworkServer.GetNetworkIdentityGameObjectNetworkIdentityOut">
            <summary>设置 NetworkServer.GetNetworkIdentity(GameObject go, NetworkIdentity&amp; view) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Networking.Fakes.ShimNetworkServer.GetStatsInInt32OutInt32Out">
            <summary>设置 NetworkServer.GetStatsIn(Int32&amp; numMsgs, Int32&amp; numBytes) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Networking.Fakes.ShimNetworkServer.GetStatsOutInt32OutInt32OutInt32OutInt32Out">
            <summary>设置 NetworkServer.GetStatsOut(Int32&amp; numMsgs, Int32&amp; numBufferedMsgs, Int32&amp; numBytes, Int32&amp; lastBufferedPerSecond) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Networking.Fakes.ShimNetworkServer.HideForConnectionNetworkIdentityNetworkConnection">
            <summary>设置 NetworkServer.HideForConnection(NetworkIdentity uv, NetworkConnection conn) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Networking.Fakes.ShimNetworkServer.InternalAddPlayerForConnectionNetworkConnectionGameObjectInt16">
            <summary>设置 NetworkServer.InternalAddPlayerForConnection(NetworkConnection conn, GameObject playerGameObject, Int16 playerControllerId) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Networking.Fakes.ShimNetworkServer.InternalDisconnectAll">
            <summary>设置 NetworkServer.InternalDisconnectAll() 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Networking.Fakes.ShimNetworkServer.InternalListenRelayStringInt32NetworkIDSourceIDNodeIDInt32">
            <summary>设置 NetworkServer.InternalListenRelay(String relayIp, Int32 relayPort, NetworkID netGuid, SourceID sourceId, NodeID nodeId, Int32 listenPort) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Networking.Fakes.ShimNetworkServer.InternalListenStringInt32">
            <summary>设置 NetworkServer.InternalListen(String ipAddress, Int32 serverPort) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Networking.Fakes.ShimNetworkServer.InternalReplacePlayerForConnectionNetworkConnectionGameObjectInt16">
            <summary>设置 NetworkServer.InternalReplacePlayerForConnection(NetworkConnection conn, GameObject playerGameObject, Int16 playerControllerId) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Networking.Fakes.ShimNetworkServer.InternalSetClientNotReadyNetworkConnection">
            <summary>设置 NetworkServer.InternalSetClientNotReady(NetworkConnection conn) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Networking.Fakes.ShimNetworkServer.InternalSetMaxDelaySingle">
            <summary>设置 NetworkServer.InternalSetMaxDelay(Single seconds) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Networking.Fakes.ShimNetworkServer.InternalUpdate">
            <summary>设置 NetworkServer.InternalUpdate() 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Networking.Fakes.ShimNetworkServer.ListenInt32">
            <summary>设置 NetworkServer.Listen(Int32 serverPort) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Networking.Fakes.ShimNetworkServer.ListenMatchInfoInt32">
            <summary>设置 NetworkServer.Listen(MatchInfo matchInfo, Int32 listenPort) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Networking.Fakes.ShimNetworkServer.ListenRelayStringInt32NetworkIDSourceIDNodeID">
            <summary>设置 NetworkServer.ListenRelay(String relayIp, Int32 relayPort, NetworkID netGuid, SourceID sourceId, NodeID nodeId) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Networking.Fakes.ShimNetworkServer.ListenStringInt32">
            <summary>设置 NetworkServer.Listen(String ipAddress, Int32 serverPort) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Networking.Fakes.ShimNetworkServer.OnClientReadyMessageNetworkMessage">
            <summary>设置 NetworkServer.OnClientReadyMessage(NetworkMessage netMsg) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Networking.Fakes.ShimNetworkServer.OnCommandMessageNetworkMessage">
            <summary>设置 NetworkServer.OnCommandMessage(NetworkMessage netMsg) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Networking.Fakes.ShimNetworkServer.OnRemovePlayerMessageNetworkMessage">
            <summary>设置 NetworkServer.OnRemovePlayerMessage(NetworkMessage netMsg) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Networking.Fakes.ShimNetworkServer.RegisterHandlerInt16NetworkMessageDelegate">
            <summary>设置 NetworkServer.RegisterHandler(Int16 msgType, NetworkMessageDelegate handler) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Networking.Fakes.ShimNetworkServer.RemoveExternalConnectionInt32">
            <summary>设置 NetworkServer.RemoveExternalConnection(Int32 connectionId) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Networking.Fakes.ShimNetworkServer.RemoveExternalConnectionInternalInt32">
            <summary>设置 NetworkServer.RemoveExternalConnectionInternal(Int32 connectionId) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Networking.Fakes.ShimNetworkServer.ReplacePlayerForConnectionNetworkConnectionGameObjectInt16">
            <summary>设置 NetworkServer.ReplacePlayerForConnection(NetworkConnection conn, GameObject player, Int16 playerControllerId) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Networking.Fakes.ShimNetworkServer.ReplacePlayerForConnectionNetworkConnectionGameObjectInt16NetworkHash128">
            <summary>设置 NetworkServer.ReplacePlayerForConnection(NetworkConnection conn, GameObject player, Int16 playerControllerId, NetworkHash128 assetId) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Networking.Fakes.ShimNetworkServer.Reset">
            <summary>设置 NetworkServer.Reset() 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Networking.Fakes.ShimNetworkServer.ResetConnectionStats">
            <summary>设置 NetworkServer.ResetConnectionStats() 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Networking.Fakes.ShimNetworkServer.SendByChannelToAllInt16MessageBaseInt32">
            <summary>设置 NetworkServer.SendByChannelToAll(Int16 msgType, MessageBase msg, Int32 channelId) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Networking.Fakes.ShimNetworkServer.SendByChannelToReadyGameObjectInt16MessageBaseInt32">
            <summary>设置 NetworkServer.SendByChannelToReady(GameObject contextObj, Int16 msgType, MessageBase msg, Int32 channelId) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Networking.Fakes.ShimNetworkServer.SendBytesToPlayerGameObjectByteArrayInt32Int32">
            <summary>设置 NetworkServer.SendBytesToPlayer(GameObject player, Byte[] buffer, Int32 numBytes, Int32 channelId) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Networking.Fakes.ShimNetworkServer.SendBytesToReadyGameObjectByteArrayInt32Int32">
            <summary>设置 NetworkServer.SendBytesToReady(GameObject contextObj, Byte[] buffer, Int32 numBytes, Int32 channelId) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Networking.Fakes.ShimNetworkServer.SendCrcNetworkConnection">
            <summary>设置 NetworkServer.SendCrc(NetworkConnection targetConnection) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Networking.Fakes.ShimNetworkServer.SendNetworkInfoNetworkConnection">
            <summary>设置 NetworkServer.SendNetworkInfo(NetworkConnection targetConnection) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Networking.Fakes.ShimNetworkServer.SendSpawnMessageNetworkIdentityNetworkConnection">
            <summary>设置 NetworkServer.SendSpawnMessage(NetworkIdentity uv, NetworkConnection conn) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Networking.Fakes.ShimNetworkServer.SendToAllInt16MessageBase">
            <summary>设置 NetworkServer.SendToAll(Int16 msgType, MessageBase msg) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Networking.Fakes.ShimNetworkServer.SendToClientInt32Int16MessageBase">
            <summary>设置 NetworkServer.SendToClient(Int32 connectionId, Int16 msgType, MessageBase msg) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Networking.Fakes.ShimNetworkServer.SendToClientOfPlayerGameObjectInt16MessageBase">
            <summary>设置 NetworkServer.SendToClientOfPlayer(GameObject player, Int16 msgType, MessageBase msg) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Networking.Fakes.ShimNetworkServer.SendToObserversGameObjectInt16MessageBase">
            <summary>设置 NetworkServer.SendToObservers(GameObject contextObj, Int16 msgType, MessageBase msg) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Networking.Fakes.ShimNetworkServer.SendToReadyGameObjectInt16MessageBase">
            <summary>设置 NetworkServer.SendToReady(GameObject contextObj, Int16 msgType, MessageBase msg) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Networking.Fakes.ShimNetworkServer.SendUnreliableToAllInt16MessageBase">
            <summary>设置 NetworkServer.SendUnreliableToAll(Int16 msgType, MessageBase msg) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Networking.Fakes.ShimNetworkServer.SendUnreliableToReadyGameObjectInt16MessageBase">
            <summary>设置 NetworkServer.SendUnreliableToReady(GameObject contextObj, Int16 msgType, MessageBase msg) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Networking.Fakes.ShimNetworkServer.SendWriterToReadyGameObjectNetworkWriterInt32">
            <summary>设置 NetworkServer.SendWriterToReady(GameObject contextObj, NetworkWriter writer, Int32 channelId) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Networking.Fakes.ShimNetworkServer.SetAllClientsNotReady">
            <summary>设置 NetworkServer.SetAllClientsNotReady() 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Networking.Fakes.ShimNetworkServer.SetClientNotReadyNetworkConnection">
            <summary>设置 NetworkServer.SetClientNotReady(NetworkConnection conn) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Networking.Fakes.ShimNetworkServer.SetClientReadyInternalNetworkConnection">
            <summary>设置 NetworkServer.SetClientReadyInternal(NetworkConnection conn) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Networking.Fakes.ShimNetworkServer.SetClientReadyNetworkConnection">
            <summary>设置 NetworkServer.SetClientReady(NetworkConnection conn) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Networking.Fakes.ShimNetworkServer.SetLocalObjectOnServerNetworkInstanceIdGameObject">
            <summary>设置 NetworkServer.SetLocalObjectOnServer(NetworkInstanceId netId, GameObject obj) 的 填充码</summary>
        </member>
        <member name="M:UnityEngine.Networking.Fakes.ShimNetworkServer.SetNetworkConnectionClassOf1``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Action)">
            <summary>设置 NetworkServer.SetNetworkConnectionClass() 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Networking.Fakes.ShimNetworkServer.SetupLocalPlayerForConnectionNetworkConnectionNetworkIdentityPlayerController">
            <summary>设置 NetworkServer.SetupLocalPlayerForConnection(NetworkConnection conn, NetworkIdentity uv, PlayerController newPlayerController) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Networking.Fakes.ShimNetworkServer.ShowForConnectionNetworkIdentityNetworkConnection">
            <summary>设置 NetworkServer.ShowForConnection(NetworkIdentity uv, NetworkConnection conn) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Networking.Fakes.ShimNetworkServer.Shutdown">
            <summary>设置 NetworkServer.Shutdown() 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Networking.Fakes.ShimNetworkServer.SpawnGameObject">
            <summary>设置 NetworkServer.Spawn(GameObject obj) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Networking.Fakes.ShimNetworkServer.SpawnGameObjectNetworkHash128">
            <summary>设置 NetworkServer.Spawn(GameObject obj, NetworkHash128 assetId) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Networking.Fakes.ShimNetworkServer.SpawnObjectGameObject">
            <summary>设置 NetworkServer.SpawnObject(GameObject obj) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Networking.Fakes.ShimNetworkServer.SpawnObjects">
            <summary>设置 NetworkServer.SpawnObjects() 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Networking.Fakes.ShimNetworkServer.SpawnWithClientAuthorityGameObjectGameObject">
            <summary>设置 NetworkServer.SpawnWithClientAuthority(GameObject obj, GameObject player) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Networking.Fakes.ShimNetworkServer.SpawnWithClientAuthorityGameObjectNetworkConnection">
            <summary>设置 NetworkServer.SpawnWithClientAuthority(GameObject obj, NetworkConnection conn) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Networking.Fakes.ShimNetworkServer.SpawnWithClientAuthorityGameObjectNetworkHash128NetworkConnection">
            <summary>设置 NetworkServer.SpawnWithClientAuthority(GameObject obj, NetworkHash128 assetId, NetworkConnection conn) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Networking.Fakes.ShimNetworkServer.StaticConstructor">
            <summary>设置 NetworkServer.NetworkServer() 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Networking.Fakes.ShimNetworkServer.UnSpawnGameObject">
            <summary>设置 NetworkServer.UnSpawn(GameObject obj) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Networking.Fakes.ShimNetworkServer.UnSpawnObjectGameObject">
            <summary>设置 NetworkServer.UnSpawnObject(GameObject obj) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Networking.Fakes.ShimNetworkServer.UnSpawnObjectNetworkIdentity">
            <summary>设置 NetworkServer.UnSpawnObject(NetworkIdentity uv) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Networking.Fakes.ShimNetworkServer.UnregisterHandlerInt16">
            <summary>设置 NetworkServer.UnregisterHandler(Int16 msgType) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Networking.Fakes.ShimNetworkServer.Update">
            <summary>设置 NetworkServer.Update() 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Networking.Fakes.ShimNetworkServer.UpdateServerObjects">
            <summary>设置 NetworkServer.UpdateServerObjects() 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Networking.Fakes.ShimNetworkServer.activeGet">
            <summary>设置 NetworkServer.get_active() 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Networking.Fakes.ShimNetworkServer.connectionsGet">
            <summary>设置 NetworkServer.get_connections() 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Networking.Fakes.ShimNetworkServer.handlersGet">
            <summary>设置 NetworkServer.get_handlers() 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Networking.Fakes.ShimNetworkServer.hostTopologyGet">
            <summary>设置 NetworkServer.get_hostTopology() 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Networking.Fakes.ShimNetworkServer.instanceGet">
            <summary>设置 NetworkServer.get_instance() 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Networking.Fakes.ShimNetworkServer.localClientActiveGet">
            <summary>设置 NetworkServer.get_localClientActive() 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Networking.Fakes.ShimNetworkServer.localConnectionsGet">
            <summary>设置 NetworkServer.get_localConnections() 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Networking.Fakes.ShimNetworkServer.maxDelayGet">
            <summary>设置 NetworkServer.get_maxDelay() 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Networking.Fakes.ShimNetworkServer.maxDelaySetSingle">
            <summary>设置 NetworkServer.set_maxDelay(Single value) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Networking.Fakes.ShimNetworkServer.networkConnectionClassGet">
            <summary>设置 NetworkServer.get_networkConnectionClass() 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Networking.Fakes.ShimNetworkServer.numChannelsGet">
            <summary>设置 NetworkServer.get_numChannels() 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Networking.Fakes.ShimNetworkServer.objectsGet">
            <summary>设置 NetworkServer.get_objects() 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Networking.Fakes.ShimNetworkServer.sendPeerInfoGet">
            <summary>设置 NetworkServer.get_sendPeerInfo() 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Networking.Fakes.ShimNetworkServer.sendPeerInfoSetBoolean">
            <summary>设置 NetworkServer.set_sendPeerInfo(Boolean value) 的 填充码</summary>
        </member>
        <member name="T:UnityEngine.Networking.Fakes.ShimNetworkSettingsAttribute">
            <summary>UnityEngine.Networking.NetworkSettingsAttribute 的填充码类型</summary>
        </member>
        <member name="M:UnityEngine.Networking.Fakes.ShimNetworkSettingsAttribute.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:UnityEngine.Networking.Fakes.ShimNetworkSettingsAttribute.#ctor(UnityEngine.Networking.NetworkSettingsAttribute)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="T:UnityEngine.Networking.Fakes.ShimNetworkSettingsAttribute.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="M:UnityEngine.Networking.Fakes.ShimNetworkSettingsAttribute.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:UnityEngine.Networking.Fakes.ShimNetworkSettingsAttribute.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:UnityEngine.Networking.Fakes.ShimNetworkSettingsAttribute.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:UnityEngine.Networking.Fakes.ShimNetworkSettingsAttribute.Constructor">
            <summary>设置 NetworkSettingsAttribute.NetworkSettingsAttribute() 的 填充码</summary>
        </member>
        <member name="T:UnityEngine.Networking.Fakes.ShimNetworkStartPosition">
            <summary>UnityEngine.Networking.NetworkStartPosition 的填充码类型</summary>
        </member>
        <member name="M:UnityEngine.Networking.Fakes.ShimNetworkStartPosition.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:UnityEngine.Networking.Fakes.ShimNetworkStartPosition.#ctor(UnityEngine.Networking.NetworkStartPosition)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="T:UnityEngine.Networking.Fakes.ShimNetworkStartPosition.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:UnityEngine.Networking.Fakes.ShimNetworkStartPosition.AllInstances.Awake">
            <summary>设置 NetworkStartPosition.Awake() 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Networking.Fakes.ShimNetworkStartPosition.AllInstances.OnDestroy">
            <summary>设置 NetworkStartPosition.OnDestroy() 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Networking.Fakes.ShimNetworkStartPosition.Awake">
            <summary>设置 NetworkStartPosition.Awake() 的 填充码</summary>
        </member>
        <member name="M:UnityEngine.Networking.Fakes.ShimNetworkStartPosition.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:UnityEngine.Networking.Fakes.ShimNetworkStartPosition.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:UnityEngine.Networking.Fakes.ShimNetworkStartPosition.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:UnityEngine.Networking.Fakes.ShimNetworkStartPosition.Constructor">
            <summary>设置 NetworkStartPosition.NetworkStartPosition() 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Networking.Fakes.ShimNetworkStartPosition.OnDestroy">
            <summary>设置 NetworkStartPosition.OnDestroy() 的 填充码</summary>
        </member>
        <member name="T:UnityEngine.Networking.Fakes.ShimNetworkTransform">
            <summary>UnityEngine.Networking.NetworkTransform 的填充码类型</summary>
        </member>
        <member name="M:UnityEngine.Networking.Fakes.ShimNetworkTransform.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:UnityEngine.Networking.Fakes.ShimNetworkTransform.#ctor(UnityEngine.Networking.NetworkTransform)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="T:UnityEngine.Networking.Fakes.ShimNetworkTransform.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:UnityEngine.Networking.Fakes.ShimNetworkTransform.AllInstances.Awake">
            <summary>设置 NetworkTransform.Awake() 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Networking.Fakes.ShimNetworkTransform.AllInstances.FixedUpdate">
            <summary>设置 NetworkTransform.FixedUpdate() 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Networking.Fakes.ShimNetworkTransform.AllInstances.FixedUpdateClient">
            <summary>设置 NetworkTransform.FixedUpdateClient() 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Networking.Fakes.ShimNetworkTransform.AllInstances.FixedUpdateServer">
            <summary>设置 NetworkTransform.FixedUpdateServer() 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Networking.Fakes.ShimNetworkTransform.AllInstances.GetNetworkChannel">
            <summary>设置 NetworkTransform.GetNetworkChannel() 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Networking.Fakes.ShimNetworkTransform.AllInstances.GetNetworkSendInterval">
            <summary>设置 NetworkTransform.GetNetworkSendInterval() 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Networking.Fakes.ShimNetworkTransform.AllInstances.HasMoved">
            <summary>设置 NetworkTransform.HasMoved() 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Networking.Fakes.ShimNetworkTransform.AllInstances.InterpolateTransformMode2D">
            <summary>设置 NetworkTransform.InterpolateTransformMode2D() 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Networking.Fakes.ShimNetworkTransform.AllInstances.InterpolateTransformMode3D">
            <summary>设置 NetworkTransform.InterpolateTransformMode3D() 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Networking.Fakes.ShimNetworkTransform.AllInstances.InterpolateTransformModeCharacterController">
            <summary>设置 NetworkTransform.InterpolateTransformModeCharacterController() 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Networking.Fakes.ShimNetworkTransform.AllInstances.OnDeserializeNetworkReaderBoolean">
            <summary>设置 NetworkTransform.OnDeserialize(NetworkReader reader, Boolean initialState) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Networking.Fakes.ShimNetworkTransform.AllInstances.OnSerializeNetworkWriterBoolean">
            <summary>设置 NetworkTransform.OnSerialize(NetworkWriter writer, Boolean initialState) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Networking.Fakes.ShimNetworkTransform.AllInstances.OnValidate">
            <summary>设置 NetworkTransform.OnValidate() 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Networking.Fakes.ShimNetworkTransform.AllInstances.SendTransform">
            <summary>设置 NetworkTransform.SendTransform() 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Networking.Fakes.ShimNetworkTransform.AllInstances.SerializeMode2DNetworkWriter">
            <summary>设置 NetworkTransform.SerializeMode2D(NetworkWriter writer) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Networking.Fakes.ShimNetworkTransform.AllInstances.SerializeMode3DNetworkWriter">
            <summary>设置 NetworkTransform.SerializeMode3D(NetworkWriter writer) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Networking.Fakes.ShimNetworkTransform.AllInstances.SerializeModeCharacterControllerNetworkWriter">
            <summary>设置 NetworkTransform.SerializeModeCharacterController(NetworkWriter writer) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Networking.Fakes.ShimNetworkTransform.AllInstances.SerializeModeTransformNetworkWriter">
            <summary>设置 NetworkTransform.SerializeModeTransform(NetworkWriter writer) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Networking.Fakes.ShimNetworkTransform.AllInstances.UnserializeMode2DNetworkReaderBoolean">
            <summary>设置 NetworkTransform.UnserializeMode2D(NetworkReader reader, Boolean initialState) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Networking.Fakes.ShimNetworkTransform.AllInstances.UnserializeMode3DNetworkReaderBoolean">
            <summary>设置 NetworkTransform.UnserializeMode3D(NetworkReader reader, Boolean initialState) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Networking.Fakes.ShimNetworkTransform.AllInstances.UnserializeModeCharacterControllerNetworkReaderBoolean">
            <summary>设置 NetworkTransform.UnserializeModeCharacterController(NetworkReader reader, Boolean initialState) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Networking.Fakes.ShimNetworkTransform.AllInstances.UnserializeModeTransformNetworkReaderBoolean">
            <summary>设置 NetworkTransform.UnserializeModeTransform(NetworkReader reader, Boolean initialState) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Networking.Fakes.ShimNetworkTransform.AllInstances.Update">
            <summary>设置 NetworkTransform.Update() 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Networking.Fakes.ShimNetworkTransform.AllInstances.characterContollerGet">
            <summary>设置 NetworkTransform.get_characterContoller() 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Networking.Fakes.ShimNetworkTransform.AllInstances.clientMoveCallback2DGet">
            <summary>设置 NetworkTransform.get_clientMoveCallback2D() 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Networking.Fakes.ShimNetworkTransform.AllInstances.clientMoveCallback2DSetNetworkTransformClientMoveCallback2D">
            <summary>设置 NetworkTransform.set_clientMoveCallback2D(ClientMoveCallback2D value) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Networking.Fakes.ShimNetworkTransform.AllInstances.clientMoveCallback3DGet">
            <summary>设置 NetworkTransform.get_clientMoveCallback3D() 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Networking.Fakes.ShimNetworkTransform.AllInstances.clientMoveCallback3DSetNetworkTransformClientMoveCallback3D">
            <summary>设置 NetworkTransform.set_clientMoveCallback3D(ClientMoveCallback3D value) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Networking.Fakes.ShimNetworkTransform.AllInstances.groundedGet">
            <summary>设置 NetworkTransform.get_grounded() 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Networking.Fakes.ShimNetworkTransform.AllInstances.groundedSetBoolean">
            <summary>设置 NetworkTransform.set_grounded(Boolean value) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Networking.Fakes.ShimNetworkTransform.AllInstances.interpolateMovementGet">
            <summary>设置 NetworkTransform.get_interpolateMovement() 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Networking.Fakes.ShimNetworkTransform.AllInstances.interpolateMovementSetSingle">
            <summary>设置 NetworkTransform.set_interpolateMovement(Single value) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Networking.Fakes.ShimNetworkTransform.AllInstances.interpolateRotationGet">
            <summary>设置 NetworkTransform.get_interpolateRotation() 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Networking.Fakes.ShimNetworkTransform.AllInstances.interpolateRotationSetSingle">
            <summary>设置 NetworkTransform.set_interpolateRotation(Single value) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Networking.Fakes.ShimNetworkTransform.AllInstances.lastSyncTimeGet">
            <summary>设置 NetworkTransform.get_lastSyncTime() 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Networking.Fakes.ShimNetworkTransform.AllInstances.movementThesholdGet">
            <summary>设置 NetworkTransform.get_movementTheshold() 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Networking.Fakes.ShimNetworkTransform.AllInstances.movementThesholdSetSingle">
            <summary>设置 NetworkTransform.set_movementTheshold(Single value) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Networking.Fakes.ShimNetworkTransform.AllInstances.rigidbody2DGet">
            <summary>设置 NetworkTransform.get_rigidbody2D() 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Networking.Fakes.ShimNetworkTransform.AllInstances.rigidbody3DGet">
            <summary>设置 NetworkTransform.get_rigidbody3D() 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Networking.Fakes.ShimNetworkTransform.AllInstances.rotationSyncCompressionGet">
            <summary>设置 NetworkTransform.get_rotationSyncCompression() 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Networking.Fakes.ShimNetworkTransform.AllInstances.rotationSyncCompressionSetNetworkTransformCompressionSyncMode">
            <summary>设置 NetworkTransform.set_rotationSyncCompression(CompressionSyncMode value) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Networking.Fakes.ShimNetworkTransform.AllInstances.sendIntervalGet">
            <summary>设置 NetworkTransform.get_sendInterval() 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Networking.Fakes.ShimNetworkTransform.AllInstances.sendIntervalSetSingle">
            <summary>设置 NetworkTransform.set_sendInterval(Single value) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Networking.Fakes.ShimNetworkTransform.AllInstances.snapThresholdGet">
            <summary>设置 NetworkTransform.get_snapThreshold() 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Networking.Fakes.ShimNetworkTransform.AllInstances.snapThresholdSetSingle">
            <summary>设置 NetworkTransform.set_snapThreshold(Single value) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Networking.Fakes.ShimNetworkTransform.AllInstances.syncRotationAxisGet">
            <summary>设置 NetworkTransform.get_syncRotationAxis() 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Networking.Fakes.ShimNetworkTransform.AllInstances.syncRotationAxisSetNetworkTransformAxisSyncMode">
            <summary>设置 NetworkTransform.set_syncRotationAxis(AxisSyncMode value) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Networking.Fakes.ShimNetworkTransform.AllInstances.syncSpinGet">
            <summary>设置 NetworkTransform.get_syncSpin() 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Networking.Fakes.ShimNetworkTransform.AllInstances.syncSpinSetBoolean">
            <summary>设置 NetworkTransform.set_syncSpin(Boolean value) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Networking.Fakes.ShimNetworkTransform.AllInstances.targetSyncPositionGet">
            <summary>设置 NetworkTransform.get_targetSyncPosition() 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Networking.Fakes.ShimNetworkTransform.AllInstances.targetSyncRotation2DGet">
            <summary>设置 NetworkTransform.get_targetSyncRotation2D() 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Networking.Fakes.ShimNetworkTransform.AllInstances.targetSyncRotation3DGet">
            <summary>设置 NetworkTransform.get_targetSyncRotation3D() 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Networking.Fakes.ShimNetworkTransform.AllInstances.targetSyncVelocityGet">
            <summary>设置 NetworkTransform.get_targetSyncVelocity() 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Networking.Fakes.ShimNetworkTransform.AllInstances.transformSyncModeGet">
            <summary>设置 NetworkTransform.get_transformSyncMode() 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Networking.Fakes.ShimNetworkTransform.AllInstances.transformSyncModeSetNetworkTransformTransformSyncMode">
            <summary>设置 NetworkTransform.set_transformSyncMode(TransformSyncMode value) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Networking.Fakes.ShimNetworkTransform.Awake">
            <summary>设置 NetworkTransform.Awake() 的 填充码</summary>
        </member>
        <member name="M:UnityEngine.Networking.Fakes.ShimNetworkTransform.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:UnityEngine.Networking.Fakes.ShimNetworkTransform.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:UnityEngine.Networking.Fakes.ShimNetworkTransform.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:UnityEngine.Networking.Fakes.ShimNetworkTransform.Constructor">
            <summary>设置 NetworkTransform.NetworkTransform() 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Networking.Fakes.ShimNetworkTransform.FixedUpdate">
            <summary>设置 NetworkTransform.FixedUpdate() 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Networking.Fakes.ShimNetworkTransform.FixedUpdateClient">
            <summary>设置 NetworkTransform.FixedUpdateClient() 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Networking.Fakes.ShimNetworkTransform.FixedUpdateServer">
            <summary>设置 NetworkTransform.FixedUpdateServer() 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Networking.Fakes.ShimNetworkTransform.GetNetworkChannel">
            <summary>设置 NetworkTransform.GetNetworkChannel() 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Networking.Fakes.ShimNetworkTransform.GetNetworkSendInterval">
            <summary>设置 NetworkTransform.GetNetworkSendInterval() 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Networking.Fakes.ShimNetworkTransform.HandleTransformNetworkMessage">
            <summary>设置 NetworkTransform.HandleTransform(NetworkMessage netMsg) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Networking.Fakes.ShimNetworkTransform.HasMoved">
            <summary>设置 NetworkTransform.HasMoved() 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Networking.Fakes.ShimNetworkTransform.InterpolateTransformMode2D">
            <summary>设置 NetworkTransform.InterpolateTransformMode2D() 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Networking.Fakes.ShimNetworkTransform.InterpolateTransformMode3D">
            <summary>设置 NetworkTransform.InterpolateTransformMode3D() 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Networking.Fakes.ShimNetworkTransform.InterpolateTransformModeCharacterController">
            <summary>设置 NetworkTransform.InterpolateTransformModeCharacterController() 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Networking.Fakes.ShimNetworkTransform.OnDeserializeNetworkReaderBoolean">
            <summary>设置 NetworkTransform.OnDeserialize(NetworkReader reader, Boolean initialState) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Networking.Fakes.ShimNetworkTransform.OnSerializeNetworkWriterBoolean">
            <summary>设置 NetworkTransform.OnSerialize(NetworkWriter writer, Boolean initialState) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Networking.Fakes.ShimNetworkTransform.OnValidate">
            <summary>设置 NetworkTransform.OnValidate() 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Networking.Fakes.ShimNetworkTransform.ReadAngleNetworkReaderNetworkTransformCompressionSyncMode">
            <summary>设置 NetworkTransform.ReadAngle(NetworkReader reader, CompressionSyncMode compression) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Networking.Fakes.ShimNetworkTransform.SendTransform">
            <summary>设置 NetworkTransform.SendTransform() 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Networking.Fakes.ShimNetworkTransform.SerializeMode2DNetworkWriter">
            <summary>设置 NetworkTransform.SerializeMode2D(NetworkWriter writer) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Networking.Fakes.ShimNetworkTransform.SerializeMode3DNetworkWriter">
            <summary>设置 NetworkTransform.SerializeMode3D(NetworkWriter writer) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Networking.Fakes.ShimNetworkTransform.SerializeModeCharacterControllerNetworkWriter">
            <summary>设置 NetworkTransform.SerializeModeCharacterController(NetworkWriter writer) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Networking.Fakes.ShimNetworkTransform.SerializeModeTransformNetworkWriter">
            <summary>设置 NetworkTransform.SerializeModeTransform(NetworkWriter writer) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Networking.Fakes.ShimNetworkTransform.SerializeRotation2DNetworkWriterSingleNetworkTransformCompressionSyncMode">
            <summary>设置 NetworkTransform.SerializeRotation2D(NetworkWriter writer, Single rot, CompressionSyncMode compression) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Networking.Fakes.ShimNetworkTransform.SerializeRotation3DNetworkWriterQuaternionNetworkTransformAxisSyncModeNetworkTransformCompressionSyncMode">
            <summary>设置 NetworkTransform.SerializeRotation3D(NetworkWriter writer, Quaternion rot, AxisSyncMode mode, CompressionSyncMode compression) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Networking.Fakes.ShimNetworkTransform.SerializeSpin2DNetworkWriterSingleNetworkTransformCompressionSyncMode">
            <summary>设置 NetworkTransform.SerializeSpin2D(NetworkWriter writer, Single angularVelocity, CompressionSyncMode compression) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Networking.Fakes.ShimNetworkTransform.SerializeSpin3DNetworkWriterVector3NetworkTransformAxisSyncModeNetworkTransformCompressionSyncMode">
            <summary>设置 NetworkTransform.SerializeSpin3D(NetworkWriter writer, Vector3 angularVelocity, AxisSyncMode mode, CompressionSyncMode compression) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Networking.Fakes.ShimNetworkTransform.SerializeVelocity2DNetworkWriterVector2NetworkTransformCompressionSyncMode">
            <summary>设置 NetworkTransform.SerializeVelocity2D(NetworkWriter writer, Vector2 velocity, CompressionSyncMode compression) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Networking.Fakes.ShimNetworkTransform.SerializeVelocity3DNetworkWriterVector3NetworkTransformCompressionSyncMode">
            <summary>设置 NetworkTransform.SerializeVelocity3D(NetworkWriter writer, Vector3 velocity, CompressionSyncMode compression) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Networking.Fakes.ShimNetworkTransform.UnserializeMode2DNetworkReaderBoolean">
            <summary>设置 NetworkTransform.UnserializeMode2D(NetworkReader reader, Boolean initialState) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Networking.Fakes.ShimNetworkTransform.UnserializeMode3DNetworkReaderBoolean">
            <summary>设置 NetworkTransform.UnserializeMode3D(NetworkReader reader, Boolean initialState) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Networking.Fakes.ShimNetworkTransform.UnserializeModeCharacterControllerNetworkReaderBoolean">
            <summary>设置 NetworkTransform.UnserializeModeCharacterController(NetworkReader reader, Boolean initialState) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Networking.Fakes.ShimNetworkTransform.UnserializeModeTransformNetworkReaderBoolean">
            <summary>设置 NetworkTransform.UnserializeModeTransform(NetworkReader reader, Boolean initialState) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Networking.Fakes.ShimNetworkTransform.UnserializeRotation2DNetworkReaderNetworkTransformCompressionSyncMode">
            <summary>设置 NetworkTransform.UnserializeRotation2D(NetworkReader reader, CompressionSyncMode compression) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Networking.Fakes.ShimNetworkTransform.UnserializeRotation3DNetworkReaderNetworkTransformAxisSyncModeNetworkTransformCompressionSyncMode">
            <summary>设置 NetworkTransform.UnserializeRotation3D(NetworkReader reader, AxisSyncMode mode, CompressionSyncMode compression) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Networking.Fakes.ShimNetworkTransform.UnserializeSpin2DNetworkReaderNetworkTransformCompressionSyncMode">
            <summary>设置 NetworkTransform.UnserializeSpin2D(NetworkReader reader, CompressionSyncMode compression) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Networking.Fakes.ShimNetworkTransform.UnserializeSpin3DNetworkReaderNetworkTransformAxisSyncModeNetworkTransformCompressionSyncMode">
            <summary>设置 NetworkTransform.UnserializeSpin3D(NetworkReader reader, AxisSyncMode mode, CompressionSyncMode compression) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Networking.Fakes.ShimNetworkTransform.UnserializeVelocity2DNetworkReaderNetworkTransformCompressionSyncMode">
            <summary>设置 NetworkTransform.UnserializeVelocity2D(NetworkReader reader, CompressionSyncMode compression) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Networking.Fakes.ShimNetworkTransform.UnserializeVelocity3DNetworkReaderNetworkTransformCompressionSyncMode">
            <summary>设置 NetworkTransform.UnserializeVelocity3D(NetworkReader reader, CompressionSyncMode compression) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Networking.Fakes.ShimNetworkTransform.Update">
            <summary>设置 NetworkTransform.Update() 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Networking.Fakes.ShimNetworkTransform.WriteAngleNetworkWriterSingleNetworkTransformCompressionSyncMode">
            <summary>设置 NetworkTransform.WriteAngle(NetworkWriter writer, Single angle, CompressionSyncMode compression) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Networking.Fakes.ShimNetworkTransform.characterContollerGet">
            <summary>设置 NetworkTransform.get_characterContoller() 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Networking.Fakes.ShimNetworkTransform.clientMoveCallback2DGet">
            <summary>设置 NetworkTransform.get_clientMoveCallback2D() 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Networking.Fakes.ShimNetworkTransform.clientMoveCallback2DSetNetworkTransformClientMoveCallback2D">
            <summary>设置 NetworkTransform.set_clientMoveCallback2D(ClientMoveCallback2D value) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Networking.Fakes.ShimNetworkTransform.clientMoveCallback3DGet">
            <summary>设置 NetworkTransform.get_clientMoveCallback3D() 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Networking.Fakes.ShimNetworkTransform.clientMoveCallback3DSetNetworkTransformClientMoveCallback3D">
            <summary>设置 NetworkTransform.set_clientMoveCallback3D(ClientMoveCallback3D value) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Networking.Fakes.ShimNetworkTransform.groundedGet">
            <summary>设置 NetworkTransform.get_grounded() 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Networking.Fakes.ShimNetworkTransform.groundedSetBoolean">
            <summary>设置 NetworkTransform.set_grounded(Boolean value) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Networking.Fakes.ShimNetworkTransform.interpolateMovementGet">
            <summary>设置 NetworkTransform.get_interpolateMovement() 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Networking.Fakes.ShimNetworkTransform.interpolateMovementSetSingle">
            <summary>设置 NetworkTransform.set_interpolateMovement(Single value) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Networking.Fakes.ShimNetworkTransform.interpolateRotationGet">
            <summary>设置 NetworkTransform.get_interpolateRotation() 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Networking.Fakes.ShimNetworkTransform.interpolateRotationSetSingle">
            <summary>设置 NetworkTransform.set_interpolateRotation(Single value) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Networking.Fakes.ShimNetworkTransform.lastSyncTimeGet">
            <summary>设置 NetworkTransform.get_lastSyncTime() 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Networking.Fakes.ShimNetworkTransform.movementThesholdGet">
            <summary>设置 NetworkTransform.get_movementTheshold() 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Networking.Fakes.ShimNetworkTransform.movementThesholdSetSingle">
            <summary>设置 NetworkTransform.set_movementTheshold(Single value) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Networking.Fakes.ShimNetworkTransform.rigidbody2DGet">
            <summary>设置 NetworkTransform.get_rigidbody2D() 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Networking.Fakes.ShimNetworkTransform.rigidbody3DGet">
            <summary>设置 NetworkTransform.get_rigidbody3D() 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Networking.Fakes.ShimNetworkTransform.rotationSyncCompressionGet">
            <summary>设置 NetworkTransform.get_rotationSyncCompression() 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Networking.Fakes.ShimNetworkTransform.rotationSyncCompressionSetNetworkTransformCompressionSyncMode">
            <summary>设置 NetworkTransform.set_rotationSyncCompression(CompressionSyncMode value) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Networking.Fakes.ShimNetworkTransform.sendIntervalGet">
            <summary>设置 NetworkTransform.get_sendInterval() 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Networking.Fakes.ShimNetworkTransform.sendIntervalSetSingle">
            <summary>设置 NetworkTransform.set_sendInterval(Single value) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Networking.Fakes.ShimNetworkTransform.snapThresholdGet">
            <summary>设置 NetworkTransform.get_snapThreshold() 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Networking.Fakes.ShimNetworkTransform.snapThresholdSetSingle">
            <summary>设置 NetworkTransform.set_snapThreshold(Single value) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Networking.Fakes.ShimNetworkTransform.syncRotationAxisGet">
            <summary>设置 NetworkTransform.get_syncRotationAxis() 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Networking.Fakes.ShimNetworkTransform.syncRotationAxisSetNetworkTransformAxisSyncMode">
            <summary>设置 NetworkTransform.set_syncRotationAxis(AxisSyncMode value) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Networking.Fakes.ShimNetworkTransform.syncSpinGet">
            <summary>设置 NetworkTransform.get_syncSpin() 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Networking.Fakes.ShimNetworkTransform.syncSpinSetBoolean">
            <summary>设置 NetworkTransform.set_syncSpin(Boolean value) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Networking.Fakes.ShimNetworkTransform.targetSyncPositionGet">
            <summary>设置 NetworkTransform.get_targetSyncPosition() 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Networking.Fakes.ShimNetworkTransform.targetSyncRotation2DGet">
            <summary>设置 NetworkTransform.get_targetSyncRotation2D() 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Networking.Fakes.ShimNetworkTransform.targetSyncRotation3DGet">
            <summary>设置 NetworkTransform.get_targetSyncRotation3D() 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Networking.Fakes.ShimNetworkTransform.targetSyncVelocityGet">
            <summary>设置 NetworkTransform.get_targetSyncVelocity() 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Networking.Fakes.ShimNetworkTransform.transformSyncModeGet">
            <summary>设置 NetworkTransform.get_transformSyncMode() 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Networking.Fakes.ShimNetworkTransform.transformSyncModeSetNetworkTransformTransformSyncMode">
            <summary>设置 NetworkTransform.set_transformSyncMode(TransformSyncMode value) 的 填充码</summary>
        </member>
        <member name="T:UnityEngine.Networking.Fakes.ShimNetworkTransformChild">
            <summary>UnityEngine.Networking.NetworkTransformChild 的填充码类型</summary>
        </member>
        <member name="M:UnityEngine.Networking.Fakes.ShimNetworkTransformChild.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:UnityEngine.Networking.Fakes.ShimNetworkTransformChild.#ctor(UnityEngine.Networking.NetworkTransformChild)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="T:UnityEngine.Networking.Fakes.ShimNetworkTransformChild.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:UnityEngine.Networking.Fakes.ShimNetworkTransformChild.AllInstances.Awake">
            <summary>设置 NetworkTransformChild.Awake() 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Networking.Fakes.ShimNetworkTransformChild.AllInstances.FixedUpdate">
            <summary>设置 NetworkTransformChild.FixedUpdate() 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Networking.Fakes.ShimNetworkTransformChild.AllInstances.FixedUpdateClient">
            <summary>设置 NetworkTransformChild.FixedUpdateClient() 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Networking.Fakes.ShimNetworkTransformChild.AllInstances.FixedUpdateServer">
            <summary>设置 NetworkTransformChild.FixedUpdateServer() 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Networking.Fakes.ShimNetworkTransformChild.AllInstances.GetNetworkChannel">
            <summary>设置 NetworkTransformChild.GetNetworkChannel() 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Networking.Fakes.ShimNetworkTransformChild.AllInstances.GetNetworkSendInterval">
            <summary>设置 NetworkTransformChild.GetNetworkSendInterval() 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Networking.Fakes.ShimNetworkTransformChild.AllInstances.HasMoved">
            <summary>设置 NetworkTransformChild.HasMoved() 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Networking.Fakes.ShimNetworkTransformChild.AllInstances.OnDeserializeNetworkReaderBoolean">
            <summary>设置 NetworkTransformChild.OnDeserialize(NetworkReader reader, Boolean initialState) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Networking.Fakes.ShimNetworkTransformChild.AllInstances.OnSerializeNetworkWriterBoolean">
            <summary>设置 NetworkTransformChild.OnSerialize(NetworkWriter writer, Boolean initialState) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Networking.Fakes.ShimNetworkTransformChild.AllInstances.OnValidate">
            <summary>设置 NetworkTransformChild.OnValidate() 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Networking.Fakes.ShimNetworkTransformChild.AllInstances.SendTransform">
            <summary>设置 NetworkTransformChild.SendTransform() 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Networking.Fakes.ShimNetworkTransformChild.AllInstances.SerializeModeTransformNetworkWriter">
            <summary>设置 NetworkTransformChild.SerializeModeTransform(NetworkWriter writer) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Networking.Fakes.ShimNetworkTransformChild.AllInstances.UnserializeModeTransformNetworkReaderBoolean">
            <summary>设置 NetworkTransformChild.UnserializeModeTransform(NetworkReader reader, Boolean initialState) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Networking.Fakes.ShimNetworkTransformChild.AllInstances.Update">
            <summary>设置 NetworkTransformChild.Update() 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Networking.Fakes.ShimNetworkTransformChild.AllInstances.childIndexGet">
            <summary>设置 NetworkTransformChild.get_childIndex() 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Networking.Fakes.ShimNetworkTransformChild.AllInstances.clientMoveCallback3DGet">
            <summary>设置 NetworkTransformChild.get_clientMoveCallback3D() 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Networking.Fakes.ShimNetworkTransformChild.AllInstances.clientMoveCallback3DSetNetworkTransformClientMoveCallback3D">
            <summary>设置 NetworkTransformChild.set_clientMoveCallback3D(ClientMoveCallback3D value) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Networking.Fakes.ShimNetworkTransformChild.AllInstances.interpolateMovementGet">
            <summary>设置 NetworkTransformChild.get_interpolateMovement() 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Networking.Fakes.ShimNetworkTransformChild.AllInstances.interpolateMovementSetSingle">
            <summary>设置 NetworkTransformChild.set_interpolateMovement(Single value) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Networking.Fakes.ShimNetworkTransformChild.AllInstances.interpolateRotationGet">
            <summary>设置 NetworkTransformChild.get_interpolateRotation() 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Networking.Fakes.ShimNetworkTransformChild.AllInstances.interpolateRotationSetSingle">
            <summary>设置 NetworkTransformChild.set_interpolateRotation(Single value) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Networking.Fakes.ShimNetworkTransformChild.AllInstances.lastSyncTimeGet">
            <summary>设置 NetworkTransformChild.get_lastSyncTime() 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Networking.Fakes.ShimNetworkTransformChild.AllInstances.movementThresholdGet">
            <summary>设置 NetworkTransformChild.get_movementThreshold() 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Networking.Fakes.ShimNetworkTransformChild.AllInstances.movementThresholdSetSingle">
            <summary>设置 NetworkTransformChild.set_movementThreshold(Single value) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Networking.Fakes.ShimNetworkTransformChild.AllInstances.rotationSyncCompressionGet">
            <summary>设置 NetworkTransformChild.get_rotationSyncCompression() 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Networking.Fakes.ShimNetworkTransformChild.AllInstances.rotationSyncCompressionSetNetworkTransformCompressionSyncMode">
            <summary>设置 NetworkTransformChild.set_rotationSyncCompression(CompressionSyncMode value) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Networking.Fakes.ShimNetworkTransformChild.AllInstances.sendIntervalGet">
            <summary>设置 NetworkTransformChild.get_sendInterval() 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Networking.Fakes.ShimNetworkTransformChild.AllInstances.sendIntervalSetSingle">
            <summary>设置 NetworkTransformChild.set_sendInterval(Single value) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Networking.Fakes.ShimNetworkTransformChild.AllInstances.syncRotationAxisGet">
            <summary>设置 NetworkTransformChild.get_syncRotationAxis() 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Networking.Fakes.ShimNetworkTransformChild.AllInstances.syncRotationAxisSetNetworkTransformAxisSyncMode">
            <summary>设置 NetworkTransformChild.set_syncRotationAxis(AxisSyncMode value) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Networking.Fakes.ShimNetworkTransformChild.AllInstances.targetGet">
            <summary>设置 NetworkTransformChild.get_target() 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Networking.Fakes.ShimNetworkTransformChild.AllInstances.targetSetTransform">
            <summary>设置 NetworkTransformChild.set_target(Transform value) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Networking.Fakes.ShimNetworkTransformChild.AllInstances.targetSyncPositionGet">
            <summary>设置 NetworkTransformChild.get_targetSyncPosition() 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Networking.Fakes.ShimNetworkTransformChild.AllInstances.targetSyncRotation3DGet">
            <summary>设置 NetworkTransformChild.get_targetSyncRotation3D() 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Networking.Fakes.ShimNetworkTransformChild.Awake">
            <summary>设置 NetworkTransformChild.Awake() 的 填充码</summary>
        </member>
        <member name="M:UnityEngine.Networking.Fakes.ShimNetworkTransformChild.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:UnityEngine.Networking.Fakes.ShimNetworkTransformChild.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:UnityEngine.Networking.Fakes.ShimNetworkTransformChild.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:UnityEngine.Networking.Fakes.ShimNetworkTransformChild.Constructor">
            <summary>设置 NetworkTransformChild.NetworkTransformChild() 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Networking.Fakes.ShimNetworkTransformChild.FixedUpdate">
            <summary>设置 NetworkTransformChild.FixedUpdate() 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Networking.Fakes.ShimNetworkTransformChild.FixedUpdateClient">
            <summary>设置 NetworkTransformChild.FixedUpdateClient() 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Networking.Fakes.ShimNetworkTransformChild.FixedUpdateServer">
            <summary>设置 NetworkTransformChild.FixedUpdateServer() 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Networking.Fakes.ShimNetworkTransformChild.GetNetworkChannel">
            <summary>设置 NetworkTransformChild.GetNetworkChannel() 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Networking.Fakes.ShimNetworkTransformChild.GetNetworkSendInterval">
            <summary>设置 NetworkTransformChild.GetNetworkSendInterval() 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Networking.Fakes.ShimNetworkTransformChild.HandleChildTransformNetworkMessage">
            <summary>设置 NetworkTransformChild.HandleChildTransform(NetworkMessage netMsg) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Networking.Fakes.ShimNetworkTransformChild.HasMoved">
            <summary>设置 NetworkTransformChild.HasMoved() 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Networking.Fakes.ShimNetworkTransformChild.OnDeserializeNetworkReaderBoolean">
            <summary>设置 NetworkTransformChild.OnDeserialize(NetworkReader reader, Boolean initialState) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Networking.Fakes.ShimNetworkTransformChild.OnSerializeNetworkWriterBoolean">
            <summary>设置 NetworkTransformChild.OnSerialize(NetworkWriter writer, Boolean initialState) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Networking.Fakes.ShimNetworkTransformChild.OnValidate">
            <summary>设置 NetworkTransformChild.OnValidate() 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Networking.Fakes.ShimNetworkTransformChild.SendTransform">
            <summary>设置 NetworkTransformChild.SendTransform() 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Networking.Fakes.ShimNetworkTransformChild.SerializeModeTransformNetworkWriter">
            <summary>设置 NetworkTransformChild.SerializeModeTransform(NetworkWriter writer) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Networking.Fakes.ShimNetworkTransformChild.UnserializeModeTransformNetworkReaderBoolean">
            <summary>设置 NetworkTransformChild.UnserializeModeTransform(NetworkReader reader, Boolean initialState) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Networking.Fakes.ShimNetworkTransformChild.Update">
            <summary>设置 NetworkTransformChild.Update() 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Networking.Fakes.ShimNetworkTransformChild.childIndexGet">
            <summary>设置 NetworkTransformChild.get_childIndex() 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Networking.Fakes.ShimNetworkTransformChild.clientMoveCallback3DGet">
            <summary>设置 NetworkTransformChild.get_clientMoveCallback3D() 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Networking.Fakes.ShimNetworkTransformChild.clientMoveCallback3DSetNetworkTransformClientMoveCallback3D">
            <summary>设置 NetworkTransformChild.set_clientMoveCallback3D(ClientMoveCallback3D value) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Networking.Fakes.ShimNetworkTransformChild.interpolateMovementGet">
            <summary>设置 NetworkTransformChild.get_interpolateMovement() 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Networking.Fakes.ShimNetworkTransformChild.interpolateMovementSetSingle">
            <summary>设置 NetworkTransformChild.set_interpolateMovement(Single value) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Networking.Fakes.ShimNetworkTransformChild.interpolateRotationGet">
            <summary>设置 NetworkTransformChild.get_interpolateRotation() 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Networking.Fakes.ShimNetworkTransformChild.interpolateRotationSetSingle">
            <summary>设置 NetworkTransformChild.set_interpolateRotation(Single value) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Networking.Fakes.ShimNetworkTransformChild.lastSyncTimeGet">
            <summary>设置 NetworkTransformChild.get_lastSyncTime() 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Networking.Fakes.ShimNetworkTransformChild.movementThresholdGet">
            <summary>设置 NetworkTransformChild.get_movementThreshold() 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Networking.Fakes.ShimNetworkTransformChild.movementThresholdSetSingle">
            <summary>设置 NetworkTransformChild.set_movementThreshold(Single value) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Networking.Fakes.ShimNetworkTransformChild.rotationSyncCompressionGet">
            <summary>设置 NetworkTransformChild.get_rotationSyncCompression() 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Networking.Fakes.ShimNetworkTransformChild.rotationSyncCompressionSetNetworkTransformCompressionSyncMode">
            <summary>设置 NetworkTransformChild.set_rotationSyncCompression(CompressionSyncMode value) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Networking.Fakes.ShimNetworkTransformChild.sendIntervalGet">
            <summary>设置 NetworkTransformChild.get_sendInterval() 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Networking.Fakes.ShimNetworkTransformChild.sendIntervalSetSingle">
            <summary>设置 NetworkTransformChild.set_sendInterval(Single value) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Networking.Fakes.ShimNetworkTransformChild.syncRotationAxisGet">
            <summary>设置 NetworkTransformChild.get_syncRotationAxis() 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Networking.Fakes.ShimNetworkTransformChild.syncRotationAxisSetNetworkTransformAxisSyncMode">
            <summary>设置 NetworkTransformChild.set_syncRotationAxis(AxisSyncMode value) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Networking.Fakes.ShimNetworkTransformChild.targetGet">
            <summary>设置 NetworkTransformChild.get_target() 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Networking.Fakes.ShimNetworkTransformChild.targetSetTransform">
            <summary>设置 NetworkTransformChild.set_target(Transform value) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Networking.Fakes.ShimNetworkTransformChild.targetSyncPositionGet">
            <summary>设置 NetworkTransformChild.get_targetSyncPosition() 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Networking.Fakes.ShimNetworkTransformChild.targetSyncRotation3DGet">
            <summary>设置 NetworkTransformChild.get_targetSyncRotation3D() 的 填充码</summary>
        </member>
        <member name="T:UnityEngine.Networking.Fakes.ShimNetworkTransformVisualizer">
            <summary>UnityEngine.Networking.NetworkTransformVisualizer 的填充码类型</summary>
        </member>
        <member name="M:UnityEngine.Networking.Fakes.ShimNetworkTransformVisualizer.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:UnityEngine.Networking.Fakes.ShimNetworkTransformVisualizer.#ctor(UnityEngine.Networking.NetworkTransformVisualizer)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="T:UnityEngine.Networking.Fakes.ShimNetworkTransformVisualizer.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:UnityEngine.Networking.Fakes.ShimNetworkTransformVisualizer.AllInstances.DrawRotationInterpolation">
            <summary>设置 NetworkTransformVisualizer.DrawRotationInterpolation() 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Networking.Fakes.ShimNetworkTransformVisualizer.AllInstances.FixedUpdate">
            <summary>设置 NetworkTransformVisualizer.FixedUpdate() 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Networking.Fakes.ShimNetworkTransformVisualizer.AllInstances.OnDestroy">
            <summary>设置 NetworkTransformVisualizer.OnDestroy() 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Networking.Fakes.ShimNetworkTransformVisualizer.AllInstances.OnRenderObject">
            <summary>设置 NetworkTransformVisualizer.OnRenderObject() 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Networking.Fakes.ShimNetworkTransformVisualizer.AllInstances.OnStartClient">
            <summary>设置 NetworkTransformVisualizer.OnStartClient() 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Networking.Fakes.ShimNetworkTransformVisualizer.AllInstances.OnStartLocalPlayer">
            <summary>设置 NetworkTransformVisualizer.OnStartLocalPlayer() 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Networking.Fakes.ShimNetworkTransformVisualizer.AllInstances.visualizerPrefabGet">
            <summary>设置 NetworkTransformVisualizer.get_visualizerPrefab() 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Networking.Fakes.ShimNetworkTransformVisualizer.AllInstances.visualizerPrefabSetGameObject">
            <summary>设置 NetworkTransformVisualizer.set_visualizerPrefab(GameObject value) 的 填充码</summary>
        </member>
        <member name="M:UnityEngine.Networking.Fakes.ShimNetworkTransformVisualizer.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:UnityEngine.Networking.Fakes.ShimNetworkTransformVisualizer.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:UnityEngine.Networking.Fakes.ShimNetworkTransformVisualizer.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:UnityEngine.Networking.Fakes.ShimNetworkTransformVisualizer.Constructor">
            <summary>设置 NetworkTransformVisualizer.NetworkTransformVisualizer() 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Networking.Fakes.ShimNetworkTransformVisualizer.CreateLineMaterial">
            <summary>设置 NetworkTransformVisualizer.CreateLineMaterial() 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Networking.Fakes.ShimNetworkTransformVisualizer.DrawRotationInterpolation">
            <summary>设置 NetworkTransformVisualizer.DrawRotationInterpolation() 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Networking.Fakes.ShimNetworkTransformVisualizer.FixedUpdate">
            <summary>设置 NetworkTransformVisualizer.FixedUpdate() 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Networking.Fakes.ShimNetworkTransformVisualizer.OnDestroy">
            <summary>设置 NetworkTransformVisualizer.OnDestroy() 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Networking.Fakes.ShimNetworkTransformVisualizer.OnRenderObject">
            <summary>设置 NetworkTransformVisualizer.OnRenderObject() 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Networking.Fakes.ShimNetworkTransformVisualizer.OnStartClient">
            <summary>设置 NetworkTransformVisualizer.OnStartClient() 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Networking.Fakes.ShimNetworkTransformVisualizer.OnStartLocalPlayer">
            <summary>设置 NetworkTransformVisualizer.OnStartLocalPlayer() 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Networking.Fakes.ShimNetworkTransformVisualizer.visualizerPrefabGet">
            <summary>设置 NetworkTransformVisualizer.get_visualizerPrefab() 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Networking.Fakes.ShimNetworkTransformVisualizer.visualizerPrefabSetGameObject">
            <summary>设置 NetworkTransformVisualizer.set_visualizerPrefab(GameObject value) 的 填充码</summary>
        </member>
        <member name="T:UnityEngine.Networking.Fakes.ShimNetworkWriter">
            <summary>UnityEngine.Networking.NetworkWriter 的填充码类型</summary>
        </member>
        <member name="M:UnityEngine.Networking.Fakes.ShimNetworkWriter.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:UnityEngine.Networking.Fakes.ShimNetworkWriter.#ctor(UnityEngine.Networking.NetworkWriter)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="T:UnityEngine.Networking.Fakes.ShimNetworkWriter.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:UnityEngine.Networking.Fakes.ShimNetworkWriter.AllInstances.AsArray">
            <summary>设置 NetworkWriter.AsArray() 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Networking.Fakes.ShimNetworkWriter.AllInstances.AsArraySegment">
            <summary>设置 NetworkWriter.AsArraySegment() 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Networking.Fakes.ShimNetworkWriter.AllInstances.FinishMessage">
            <summary>设置 NetworkWriter.FinishMessage() 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Networking.Fakes.ShimNetworkWriter.AllInstances.PositionGet">
            <summary>设置 NetworkWriter.get_Position() 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Networking.Fakes.ShimNetworkWriter.AllInstances.SeekZero">
            <summary>设置 NetworkWriter.SeekZero() 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Networking.Fakes.ShimNetworkWriter.AllInstances.StartMessageInt16">
            <summary>设置 NetworkWriter.StartMessage(Int16 msgType) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Networking.Fakes.ShimNetworkWriter.AllInstances.ToArray">
            <summary>设置 NetworkWriter.ToArray() 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Networking.Fakes.ShimNetworkWriter.AllInstances.WriteBoolean">
            <summary>设置 NetworkWriter.Write(Boolean value) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Networking.Fakes.ShimNetworkWriter.AllInstances.WriteByte">
            <summary>设置 NetworkWriter.Write(Byte value) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Networking.Fakes.ShimNetworkWriter.AllInstances.WriteByteArrayInt32">
            <summary>设置 NetworkWriter.Write(Byte[] buffer, Int32 count) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Networking.Fakes.ShimNetworkWriter.AllInstances.WriteByteArrayInt32Int32">
            <summary>设置 NetworkWriter.Write(Byte[] buffer, Int32 offset, Int32 count) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Networking.Fakes.ShimNetworkWriter.AllInstances.WriteBytesAndSizeByteArrayInt32">
            <summary>设置 NetworkWriter.WriteBytesAndSize(Byte[] buffer, Int32 count) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Networking.Fakes.ShimNetworkWriter.AllInstances.WriteBytesFullByteArray">
            <summary>设置 NetworkWriter.WriteBytesFull(Byte[] buffer) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Networking.Fakes.ShimNetworkWriter.AllInstances.WriteChar">
            <summary>设置 NetworkWriter.Write(Char value) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Networking.Fakes.ShimNetworkWriter.AllInstances.WriteColor">
            <summary>设置 NetworkWriter.Write(Color value) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Networking.Fakes.ShimNetworkWriter.AllInstances.WriteColor32">
            <summary>设置 NetworkWriter.Write(Color32 value) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Networking.Fakes.ShimNetworkWriter.AllInstances.WriteDouble">
            <summary>设置 NetworkWriter.Write(Double value) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Networking.Fakes.ShimNetworkWriter.AllInstances.WriteGameObject">
            <summary>设置 NetworkWriter.Write(GameObject value) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Networking.Fakes.ShimNetworkWriter.AllInstances.WriteInt16">
            <summary>设置 NetworkWriter.Write(Int16 value) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Networking.Fakes.ShimNetworkWriter.AllInstances.WriteInt32">
            <summary>设置 NetworkWriter.Write(Int32 value) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Networking.Fakes.ShimNetworkWriter.AllInstances.WriteInt64">
            <summary>设置 NetworkWriter.Write(Int64 value) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Networking.Fakes.ShimNetworkWriter.AllInstances.WriteMatrix4x4">
            <summary>设置 NetworkWriter.Write(Matrix4x4 value) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Networking.Fakes.ShimNetworkWriter.AllInstances.WriteMessageBase">
            <summary>设置 NetworkWriter.Write(MessageBase msg) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Networking.Fakes.ShimNetworkWriter.AllInstances.WriteNetworkHash128">
            <summary>设置 NetworkWriter.Write(NetworkHash128 value) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Networking.Fakes.ShimNetworkWriter.AllInstances.WriteNetworkIdentity">
            <summary>设置 NetworkWriter.Write(NetworkIdentity value) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Networking.Fakes.ShimNetworkWriter.AllInstances.WriteNetworkInstanceId">
            <summary>设置 NetworkWriter.Write(NetworkInstanceId value) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Networking.Fakes.ShimNetworkWriter.AllInstances.WriteNetworkSceneId">
            <summary>设置 NetworkWriter.Write(NetworkSceneId value) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Networking.Fakes.ShimNetworkWriter.AllInstances.WritePackedUInt32UInt32">
            <summary>设置 NetworkWriter.WritePackedUInt32(UInt32 value) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Networking.Fakes.ShimNetworkWriter.AllInstances.WritePackedUInt64UInt64">
            <summary>设置 NetworkWriter.WritePackedUInt64(UInt64 value) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Networking.Fakes.ShimNetworkWriter.AllInstances.WritePlane">
            <summary>设置 NetworkWriter.Write(Plane value) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Networking.Fakes.ShimNetworkWriter.AllInstances.WriteQuaternion">
            <summary>设置 NetworkWriter.Write(Quaternion value) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Networking.Fakes.ShimNetworkWriter.AllInstances.WriteRay">
            <summary>设置 NetworkWriter.Write(Ray value) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Networking.Fakes.ShimNetworkWriter.AllInstances.WriteRect">
            <summary>设置 NetworkWriter.Write(Rect value) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Networking.Fakes.ShimNetworkWriter.AllInstances.WriteSByte">
            <summary>设置 NetworkWriter.Write(SByte value) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Networking.Fakes.ShimNetworkWriter.AllInstances.WriteSingle">
            <summary>设置 NetworkWriter.Write(Single value) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Networking.Fakes.ShimNetworkWriter.AllInstances.WriteString">
            <summary>设置 NetworkWriter.Write(String value) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Networking.Fakes.ShimNetworkWriter.AllInstances.WriteTransform">
            <summary>设置 NetworkWriter.Write(Transform value) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Networking.Fakes.ShimNetworkWriter.AllInstances.WriteUInt16">
            <summary>设置 NetworkWriter.Write(UInt16 value) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Networking.Fakes.ShimNetworkWriter.AllInstances.WriteUInt32">
            <summary>设置 NetworkWriter.Write(UInt32 value) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Networking.Fakes.ShimNetworkWriter.AllInstances.WriteUInt64">
            <summary>设置 NetworkWriter.Write(UInt64 value) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Networking.Fakes.ShimNetworkWriter.AllInstances.WriteVector2">
            <summary>设置 NetworkWriter.Write(Vector2 value) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Networking.Fakes.ShimNetworkWriter.AllInstances.WriteVector3">
            <summary>设置 NetworkWriter.Write(Vector3 value) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Networking.Fakes.ShimNetworkWriter.AllInstances.WriteVector4">
            <summary>设置 NetworkWriter.Write(Vector4 value) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Networking.Fakes.ShimNetworkWriter.AsArray">
            <summary>设置 NetworkWriter.AsArray() 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Networking.Fakes.ShimNetworkWriter.AsArraySegment">
            <summary>设置 NetworkWriter.AsArraySegment() 的 填充码</summary>
        </member>
        <member name="M:UnityEngine.Networking.Fakes.ShimNetworkWriter.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:UnityEngine.Networking.Fakes.ShimNetworkWriter.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:UnityEngine.Networking.Fakes.ShimNetworkWriter.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:UnityEngine.Networking.Fakes.ShimNetworkWriter.Constructor">
            <summary>设置 NetworkWriter.NetworkWriter() 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Networking.Fakes.ShimNetworkWriter.ConstructorByteArray">
            <summary>设置 NetworkWriter.NetworkWriter(Byte[] buffer) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Networking.Fakes.ShimNetworkWriter.FinishMessage">
            <summary>设置 NetworkWriter.FinishMessage() 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Networking.Fakes.ShimNetworkWriter.PositionGet">
            <summary>设置 NetworkWriter.get_Position() 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Networking.Fakes.ShimNetworkWriter.SeekZero">
            <summary>设置 NetworkWriter.SeekZero() 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Networking.Fakes.ShimNetworkWriter.StartMessageInt16">
            <summary>设置 NetworkWriter.StartMessage(Int16 msgType) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Networking.Fakes.ShimNetworkWriter.ToArray">
            <summary>设置 NetworkWriter.ToArray() 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Networking.Fakes.ShimNetworkWriter.WriteBoolean">
            <summary>设置 NetworkWriter.Write(Boolean value) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Networking.Fakes.ShimNetworkWriter.WriteByte">
            <summary>设置 NetworkWriter.Write(Byte value) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Networking.Fakes.ShimNetworkWriter.WriteByteArrayInt32">
            <summary>设置 NetworkWriter.Write(Byte[] buffer, Int32 count) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Networking.Fakes.ShimNetworkWriter.WriteByteArrayInt32Int32">
            <summary>设置 NetworkWriter.Write(Byte[] buffer, Int32 offset, Int32 count) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Networking.Fakes.ShimNetworkWriter.WriteBytesAndSizeByteArrayInt32">
            <summary>设置 NetworkWriter.WriteBytesAndSize(Byte[] buffer, Int32 count) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Networking.Fakes.ShimNetworkWriter.WriteBytesFullByteArray">
            <summary>设置 NetworkWriter.WriteBytesFull(Byte[] buffer) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Networking.Fakes.ShimNetworkWriter.WriteChar">
            <summary>设置 NetworkWriter.Write(Char value) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Networking.Fakes.ShimNetworkWriter.WriteColor">
            <summary>设置 NetworkWriter.Write(Color value) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Networking.Fakes.ShimNetworkWriter.WriteColor32">
            <summary>设置 NetworkWriter.Write(Color32 value) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Networking.Fakes.ShimNetworkWriter.WriteDouble">
            <summary>设置 NetworkWriter.Write(Double value) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Networking.Fakes.ShimNetworkWriter.WriteGameObject">
            <summary>设置 NetworkWriter.Write(GameObject value) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Networking.Fakes.ShimNetworkWriter.WriteInt16">
            <summary>设置 NetworkWriter.Write(Int16 value) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Networking.Fakes.ShimNetworkWriter.WriteInt32">
            <summary>设置 NetworkWriter.Write(Int32 value) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Networking.Fakes.ShimNetworkWriter.WriteInt64">
            <summary>设置 NetworkWriter.Write(Int64 value) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Networking.Fakes.ShimNetworkWriter.WriteMatrix4x4">
            <summary>设置 NetworkWriter.Write(Matrix4x4 value) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Networking.Fakes.ShimNetworkWriter.WriteMessageBase">
            <summary>设置 NetworkWriter.Write(MessageBase msg) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Networking.Fakes.ShimNetworkWriter.WriteNetworkHash128">
            <summary>设置 NetworkWriter.Write(NetworkHash128 value) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Networking.Fakes.ShimNetworkWriter.WriteNetworkIdentity">
            <summary>设置 NetworkWriter.Write(NetworkIdentity value) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Networking.Fakes.ShimNetworkWriter.WriteNetworkInstanceId">
            <summary>设置 NetworkWriter.Write(NetworkInstanceId value) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Networking.Fakes.ShimNetworkWriter.WriteNetworkSceneId">
            <summary>设置 NetworkWriter.Write(NetworkSceneId value) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Networking.Fakes.ShimNetworkWriter.WritePackedUInt32UInt32">
            <summary>设置 NetworkWriter.WritePackedUInt32(UInt32 value) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Networking.Fakes.ShimNetworkWriter.WritePackedUInt64UInt64">
            <summary>设置 NetworkWriter.WritePackedUInt64(UInt64 value) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Networking.Fakes.ShimNetworkWriter.WritePlane">
            <summary>设置 NetworkWriter.Write(Plane value) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Networking.Fakes.ShimNetworkWriter.WriteQuaternion">
            <summary>设置 NetworkWriter.Write(Quaternion value) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Networking.Fakes.ShimNetworkWriter.WriteRay">
            <summary>设置 NetworkWriter.Write(Ray value) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Networking.Fakes.ShimNetworkWriter.WriteRect">
            <summary>设置 NetworkWriter.Write(Rect value) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Networking.Fakes.ShimNetworkWriter.WriteSByte">
            <summary>设置 NetworkWriter.Write(SByte value) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Networking.Fakes.ShimNetworkWriter.WriteSingle">
            <summary>设置 NetworkWriter.Write(Single value) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Networking.Fakes.ShimNetworkWriter.WriteString">
            <summary>设置 NetworkWriter.Write(String value) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Networking.Fakes.ShimNetworkWriter.WriteTransform">
            <summary>设置 NetworkWriter.Write(Transform value) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Networking.Fakes.ShimNetworkWriter.WriteUInt16">
            <summary>设置 NetworkWriter.Write(UInt16 value) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Networking.Fakes.ShimNetworkWriter.WriteUInt32">
            <summary>设置 NetworkWriter.Write(UInt32 value) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Networking.Fakes.ShimNetworkWriter.WriteUInt64">
            <summary>设置 NetworkWriter.Write(UInt64 value) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Networking.Fakes.ShimNetworkWriter.WriteVector2">
            <summary>设置 NetworkWriter.Write(Vector2 value) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Networking.Fakes.ShimNetworkWriter.WriteVector3">
            <summary>设置 NetworkWriter.Write(Vector3 value) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Networking.Fakes.ShimNetworkWriter.WriteVector4">
            <summary>设置 NetworkWriter.Write(Vector4 value) 的 填充码</summary>
        </member>
        <member name="T:UnityEngine.Networking.Fakes.ShimPlayerController">
            <summary>UnityEngine.Networking.PlayerController 的填充码类型</summary>
        </member>
        <member name="M:UnityEngine.Networking.Fakes.ShimPlayerController.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:UnityEngine.Networking.Fakes.ShimPlayerController.#ctor(UnityEngine.Networking.PlayerController)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="T:UnityEngine.Networking.Fakes.ShimPlayerController.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:UnityEngine.Networking.Fakes.ShimPlayerController.AllInstances.IsValidGet">
            <summary>设置 PlayerController.get_IsValid() 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Networking.Fakes.ShimPlayerController.AllInstances.ToString01">
            <summary>设置 PlayerController.ToString() 的 填充码</summary>
        </member>
        <member name="M:UnityEngine.Networking.Fakes.ShimPlayerController.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:UnityEngine.Networking.Fakes.ShimPlayerController.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:UnityEngine.Networking.Fakes.ShimPlayerController.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:UnityEngine.Networking.Fakes.ShimPlayerController.Constructor">
            <summary>设置 PlayerController.PlayerController() 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Networking.Fakes.ShimPlayerController.ConstructorGameObjectInt16">
            <summary>设置 PlayerController.PlayerController(GameObject go, Int16 playerControllerId) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Networking.Fakes.ShimPlayerController.IsValidGet">
            <summary>设置 PlayerController.get_IsValid() 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Networking.Fakes.ShimPlayerController.ToString">
            <summary>设置 PlayerController.ToString() 的 填充码</summary>
        </member>
        <member name="T:UnityEngine.Networking.Fakes.ShimServerAttribute">
            <summary>UnityEngine.Networking.ServerAttribute 的填充码类型</summary>
        </member>
        <member name="M:UnityEngine.Networking.Fakes.ShimServerAttribute.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:UnityEngine.Networking.Fakes.ShimServerAttribute.#ctor(UnityEngine.Networking.ServerAttribute)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="T:UnityEngine.Networking.Fakes.ShimServerAttribute.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="M:UnityEngine.Networking.Fakes.ShimServerAttribute.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:UnityEngine.Networking.Fakes.ShimServerAttribute.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:UnityEngine.Networking.Fakes.ShimServerAttribute.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:UnityEngine.Networking.Fakes.ShimServerAttribute.Constructor">
            <summary>设置 ServerAttribute.ServerAttribute() 的 填充码</summary>
        </member>
        <member name="T:UnityEngine.Networking.Fakes.ShimServerCallbackAttribute">
            <summary>UnityEngine.Networking.ServerCallbackAttribute 的填充码类型</summary>
        </member>
        <member name="M:UnityEngine.Networking.Fakes.ShimServerCallbackAttribute.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:UnityEngine.Networking.Fakes.ShimServerCallbackAttribute.#ctor(UnityEngine.Networking.ServerCallbackAttribute)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="T:UnityEngine.Networking.Fakes.ShimServerCallbackAttribute.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="M:UnityEngine.Networking.Fakes.ShimServerCallbackAttribute.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:UnityEngine.Networking.Fakes.ShimServerCallbackAttribute.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:UnityEngine.Networking.Fakes.ShimServerCallbackAttribute.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:UnityEngine.Networking.Fakes.ShimServerCallbackAttribute.Constructor">
            <summary>设置 ServerCallbackAttribute.ServerCallbackAttribute() 的 填充码</summary>
        </member>
        <member name="T:UnityEngine.Networking.Fakes.ShimSyncEventAttribute">
            <summary>UnityEngine.Networking.SyncEventAttribute 的填充码类型</summary>
        </member>
        <member name="M:UnityEngine.Networking.Fakes.ShimSyncEventAttribute.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:UnityEngine.Networking.Fakes.ShimSyncEventAttribute.#ctor(UnityEngine.Networking.SyncEventAttribute)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="T:UnityEngine.Networking.Fakes.ShimSyncEventAttribute.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="M:UnityEngine.Networking.Fakes.ShimSyncEventAttribute.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:UnityEngine.Networking.Fakes.ShimSyncEventAttribute.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:UnityEngine.Networking.Fakes.ShimSyncEventAttribute.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:UnityEngine.Networking.Fakes.ShimSyncEventAttribute.Constructor">
            <summary>设置 SyncEventAttribute.SyncEventAttribute() 的 填充码</summary>
        </member>
        <member name="T:UnityEngine.Networking.Fakes.ShimSyncList`1">
            <summary>UnityEngine.Networking.SyncList`1 的填充码类型</summary>
        </member>
        <member name="M:UnityEngine.Networking.Fakes.ShimSyncList`1.#ctor(UnityEngine.Networking.SyncList{`0})">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="P:UnityEngine.Networking.Fakes.ShimSyncList`1.AddInternalT0">
            <summary>设置 SyncList`1.AddInternal(!0 item) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Networking.Fakes.ShimSyncList`1.AddT0">
            <summary>设置 SyncList`1.Add(!0 item) 的 填充码</summary>
        </member>
        <member name="T:UnityEngine.Networking.Fakes.ShimSyncList`1.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:UnityEngine.Networking.Fakes.ShimSyncList`1.AllInstances.AddInternalT0">
            <summary>设置 SyncList`1.AddInternal(!0 item) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Networking.Fakes.ShimSyncList`1.AllInstances.AddT0">
            <summary>设置 SyncList`1.Add(!0 item) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Networking.Fakes.ShimSyncList`1.AllInstances.CallbackGet">
            <summary>设置 SyncList`1.get_Callback() 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Networking.Fakes.ShimSyncList`1.AllInstances.CallbackSetSyncListSyncListChangedOfT0">
            <summary>设置 SyncList`1.set_Callback(SyncListChanged&lt;!0&gt; value) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Networking.Fakes.ShimSyncList`1.AllInstances.Clear">
            <summary>设置 SyncList`1.Clear() 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Networking.Fakes.ShimSyncList`1.AllInstances.ContainsT0">
            <summary>设置 SyncList`1.Contains(!0 item) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Networking.Fakes.ShimSyncList`1.AllInstances.CopyToT0ArrayInt32">
            <summary>设置 SyncList`1.CopyTo(!0[] array, Int32 index) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Networking.Fakes.ShimSyncList`1.AllInstances.CountGet">
            <summary>设置 SyncList`1.get_Count() 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Networking.Fakes.ShimSyncList`1.AllInstances.DirtyInt32">
            <summary>设置 SyncList`1.Dirty(Int32 index) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Networking.Fakes.ShimSyncList`1.AllInstances.GetEnumerator">
            <summary>设置 SyncList`1.GetEnumerator() 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Networking.Fakes.ShimSyncList`1.AllInstances.HandleMsgNetworkReader">
            <summary>设置 SyncList`1.HandleMsg(NetworkReader reader) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Networking.Fakes.ShimSyncList`1.AllInstances.IndexOfT0">
            <summary>设置 SyncList`1.IndexOf(!0 item) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Networking.Fakes.ShimSyncList`1.AllInstances.InitializeBehaviourNetworkBehaviourInt32">
            <summary>设置 SyncList`1.InitializeBehaviour(NetworkBehaviour beh, Int32 cmdHash) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Networking.Fakes.ShimSyncList`1.AllInstances.InsertInt32T0">
            <summary>设置 SyncList`1.Insert(Int32 index, !0 item) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Networking.Fakes.ShimSyncList`1.AllInstances.IsReadOnlyGet">
            <summary>设置 SyncList`1.get_IsReadOnly() 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Networking.Fakes.ShimSyncList`1.AllInstances.ItemGetInt32">
            <summary>设置 SyncList`1.get_Item(Int32 i) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Networking.Fakes.ShimSyncList`1.AllInstances.ItemSetInt32T0">
            <summary>设置 SyncList`1.set_Item(Int32 i, !0 value) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Networking.Fakes.ShimSyncList`1.AllInstances.RemoveAtInt32">
            <summary>设置 SyncList`1.RemoveAt(Int32 index) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Networking.Fakes.ShimSyncList`1.AllInstances.RemoveT0">
            <summary>设置 SyncList`1.Remove(!0 item) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Networking.Fakes.ShimSyncList`1.AllInstances.SendMsgSyncListOperationOfT0Int32">
            <summary>设置 SyncList`1.SendMsg(Operation&lt;!0&gt; op, Int32 itemIndex) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Networking.Fakes.ShimSyncList`1.AllInstances.SendMsgSyncListOperationOfT0Int32T0">
            <summary>设置 SyncList`1.SendMsg(Operation&lt;!0&gt; op, Int32 itemIndex, !0 item) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Networking.Fakes.ShimSyncList`1.AllInstances.SystemCollectionsIEnumerableGetEnumerator">
            <summary>设置 SyncList`1.System.Collections.IEnumerable.GetEnumerator() 的 填充码</summary>
        </member>
        <member name="M:UnityEngine.Networking.Fakes.ShimSyncList`1.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:UnityEngine.Networking.Fakes.ShimSyncList`1.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:UnityEngine.Networking.Fakes.ShimSyncList`1.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="M:UnityEngine.Networking.Fakes.ShimSyncList`1.Bind(System.Collections.IEnumerable)">
            <summary>将接口的成员绑定到此填充码。</summary>
        </member>
        <member name="M:UnityEngine.Networking.Fakes.ShimSyncList`1.Bind(System.Collections.Generic.ICollection{`0})">
            <summary>将接口的成员绑定到此填充码。</summary>
        </member>
        <member name="M:UnityEngine.Networking.Fakes.ShimSyncList`1.Bind(System.Collections.Generic.IEnumerable{`0})">
            <summary>将接口的成员绑定到此填充码。</summary>
        </member>
        <member name="M:UnityEngine.Networking.Fakes.ShimSyncList`1.Bind(System.Collections.Generic.IList{`0})">
            <summary>将接口的成员绑定到此填充码。</summary>
        </member>
        <member name="P:UnityEngine.Networking.Fakes.ShimSyncList`1.CallbackGet">
            <summary>设置 SyncList`1.get_Callback() 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Networking.Fakes.ShimSyncList`1.CallbackSetSyncListSyncListChangedOfT0">
            <summary>设置 SyncList`1.set_Callback(SyncListChanged&lt;!0&gt; value) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Networking.Fakes.ShimSyncList`1.Clear">
            <summary>设置 SyncList`1.Clear() 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Networking.Fakes.ShimSyncList`1.Constructor">
            <summary>设置 SyncList`1.SyncList`1() 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Networking.Fakes.ShimSyncList`1.ContainsT0">
            <summary>设置 SyncList`1.Contains(!0 item) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Networking.Fakes.ShimSyncList`1.CopyToT0ArrayInt32">
            <summary>设置 SyncList`1.CopyTo(!0[] array, Int32 index) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Networking.Fakes.ShimSyncList`1.CountGet">
            <summary>设置 SyncList`1.get_Count() 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Networking.Fakes.ShimSyncList`1.DirtyInt32">
            <summary>设置 SyncList`1.Dirty(Int32 index) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Networking.Fakes.ShimSyncList`1.GetEnumerator">
            <summary>设置 SyncList`1.GetEnumerator() 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Networking.Fakes.ShimSyncList`1.HandleMsgNetworkReader">
            <summary>设置 SyncList`1.HandleMsg(NetworkReader reader) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Networking.Fakes.ShimSyncList`1.IndexOfT0">
            <summary>设置 SyncList`1.IndexOf(!0 item) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Networking.Fakes.ShimSyncList`1.InitializeBehaviourNetworkBehaviourInt32">
            <summary>设置 SyncList`1.InitializeBehaviour(NetworkBehaviour beh, Int32 cmdHash) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Networking.Fakes.ShimSyncList`1.InsertInt32T0">
            <summary>设置 SyncList`1.Insert(Int32 index, !0 item) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Networking.Fakes.ShimSyncList`1.IsReadOnlyGet">
            <summary>设置 SyncList`1.get_IsReadOnly() 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Networking.Fakes.ShimSyncList`1.ItemGetInt32">
            <summary>设置 SyncList`1.get_Item(Int32 i) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Networking.Fakes.ShimSyncList`1.ItemSetInt32T0">
            <summary>设置 SyncList`1.set_Item(Int32 i, !0 value) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Networking.Fakes.ShimSyncList`1.RemoveAtInt32">
            <summary>设置 SyncList`1.RemoveAt(Int32 index) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Networking.Fakes.ShimSyncList`1.RemoveT0">
            <summary>设置 SyncList`1.Remove(!0 item) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Networking.Fakes.ShimSyncList`1.SendMsgSyncListOperationOfT0Int32">
            <summary>设置 SyncList`1.SendMsg(Operation&lt;!0&gt; op, Int32 itemIndex) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Networking.Fakes.ShimSyncList`1.SendMsgSyncListOperationOfT0Int32T0">
            <summary>设置 SyncList`1.SendMsg(Operation&lt;!0&gt; op, Int32 itemIndex, !0 item) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Networking.Fakes.ShimSyncList`1.SystemCollectionsIEnumerableGetEnumerator">
            <summary>设置 SyncList`1.System.Collections.IEnumerable.GetEnumerator() 的 填充码</summary>
        </member>
        <member name="T:UnityEngine.Networking.Fakes.ShimSyncListBool">
            <summary>UnityEngine.Networking.SyncListBool 的填充码类型</summary>
        </member>
        <member name="M:UnityEngine.Networking.Fakes.ShimSyncListBool.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:UnityEngine.Networking.Fakes.ShimSyncListBool.#ctor(UnityEngine.Networking.SyncListBool)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="T:UnityEngine.Networking.Fakes.ShimSyncListBool.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:UnityEngine.Networking.Fakes.ShimSyncListBool.AllInstances.DeserializeItemNetworkReader">
            <summary>设置 SyncListBool.DeserializeItem(NetworkReader reader) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Networking.Fakes.ShimSyncListBool.AllInstances.SerializeItemNetworkWriterBoolean">
            <summary>设置 SyncListBool.SerializeItem(NetworkWriter writer, Boolean item) 的 填充码</summary>
        </member>
        <member name="M:UnityEngine.Networking.Fakes.ShimSyncListBool.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:UnityEngine.Networking.Fakes.ShimSyncListBool.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:UnityEngine.Networking.Fakes.ShimSyncListBool.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="M:UnityEngine.Networking.Fakes.ShimSyncListBool.Bind(System.Collections.IEnumerable)">
            <summary>将接口的成员绑定到此填充码。</summary>
        </member>
        <member name="M:UnityEngine.Networking.Fakes.ShimSyncListBool.Bind(System.Collections.Generic.ICollection{System.Boolean})">
            <summary>将接口的成员绑定到此填充码。</summary>
        </member>
        <member name="M:UnityEngine.Networking.Fakes.ShimSyncListBool.Bind(System.Collections.Generic.IEnumerable{System.Boolean})">
            <summary>将接口的成员绑定到此填充码。</summary>
        </member>
        <member name="M:UnityEngine.Networking.Fakes.ShimSyncListBool.Bind(System.Collections.Generic.IList{System.Boolean})">
            <summary>将接口的成员绑定到此填充码。</summary>
        </member>
        <member name="P:UnityEngine.Networking.Fakes.ShimSyncListBool.Constructor">
            <summary>设置 SyncListBool.SyncListBool() 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Networking.Fakes.ShimSyncListBool.DeserializeItemNetworkReader">
            <summary>设置 SyncListBool.DeserializeItem(NetworkReader reader) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Networking.Fakes.ShimSyncListBool.ReadInstanceNetworkReader">
            <summary>设置 SyncListBool.ReadInstance(NetworkReader reader) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Networking.Fakes.ShimSyncListBool.SerializeItemNetworkWriterBoolean">
            <summary>设置 SyncListBool.SerializeItem(NetworkWriter writer, Boolean item) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Networking.Fakes.ShimSyncListBool.WriteInstanceNetworkWriterSyncListBool">
            <summary>设置 SyncListBool.WriteInstance(NetworkWriter writer, SyncListBool items) 的 填充码</summary>
        </member>
        <member name="T:UnityEngine.Networking.Fakes.ShimSyncListFloat">
            <summary>UnityEngine.Networking.SyncListFloat 的填充码类型</summary>
        </member>
        <member name="M:UnityEngine.Networking.Fakes.ShimSyncListFloat.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:UnityEngine.Networking.Fakes.ShimSyncListFloat.#ctor(UnityEngine.Networking.SyncListFloat)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="T:UnityEngine.Networking.Fakes.ShimSyncListFloat.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:UnityEngine.Networking.Fakes.ShimSyncListFloat.AllInstances.DeserializeItemNetworkReader">
            <summary>设置 SyncListFloat.DeserializeItem(NetworkReader reader) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Networking.Fakes.ShimSyncListFloat.AllInstances.SerializeItemNetworkWriterSingle">
            <summary>设置 SyncListFloat.SerializeItem(NetworkWriter writer, Single item) 的 填充码</summary>
        </member>
        <member name="M:UnityEngine.Networking.Fakes.ShimSyncListFloat.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:UnityEngine.Networking.Fakes.ShimSyncListFloat.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:UnityEngine.Networking.Fakes.ShimSyncListFloat.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="M:UnityEngine.Networking.Fakes.ShimSyncListFloat.Bind(System.Collections.IEnumerable)">
            <summary>将接口的成员绑定到此填充码。</summary>
        </member>
        <member name="M:UnityEngine.Networking.Fakes.ShimSyncListFloat.Bind(System.Collections.Generic.ICollection{System.Single})">
            <summary>将接口的成员绑定到此填充码。</summary>
        </member>
        <member name="M:UnityEngine.Networking.Fakes.ShimSyncListFloat.Bind(System.Collections.Generic.IEnumerable{System.Single})">
            <summary>将接口的成员绑定到此填充码。</summary>
        </member>
        <member name="M:UnityEngine.Networking.Fakes.ShimSyncListFloat.Bind(System.Collections.Generic.IList{System.Single})">
            <summary>将接口的成员绑定到此填充码。</summary>
        </member>
        <member name="P:UnityEngine.Networking.Fakes.ShimSyncListFloat.Constructor">
            <summary>设置 SyncListFloat.SyncListFloat() 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Networking.Fakes.ShimSyncListFloat.DeserializeItemNetworkReader">
            <summary>设置 SyncListFloat.DeserializeItem(NetworkReader reader) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Networking.Fakes.ShimSyncListFloat.ReadInstanceNetworkReader">
            <summary>设置 SyncListFloat.ReadInstance(NetworkReader reader) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Networking.Fakes.ShimSyncListFloat.SerializeItemNetworkWriterSingle">
            <summary>设置 SyncListFloat.SerializeItem(NetworkWriter writer, Single item) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Networking.Fakes.ShimSyncListFloat.WriteInstanceNetworkWriterSyncListFloat">
            <summary>设置 SyncListFloat.WriteInstance(NetworkWriter writer, SyncListFloat items) 的 填充码</summary>
        </member>
        <member name="T:UnityEngine.Networking.Fakes.ShimSyncListInt">
            <summary>UnityEngine.Networking.SyncListInt 的填充码类型</summary>
        </member>
        <member name="M:UnityEngine.Networking.Fakes.ShimSyncListInt.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:UnityEngine.Networking.Fakes.ShimSyncListInt.#ctor(UnityEngine.Networking.SyncListInt)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="T:UnityEngine.Networking.Fakes.ShimSyncListInt.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:UnityEngine.Networking.Fakes.ShimSyncListInt.AllInstances.DeserializeItemNetworkReader">
            <summary>设置 SyncListInt.DeserializeItem(NetworkReader reader) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Networking.Fakes.ShimSyncListInt.AllInstances.SerializeItemNetworkWriterInt32">
            <summary>设置 SyncListInt.SerializeItem(NetworkWriter writer, Int32 item) 的 填充码</summary>
        </member>
        <member name="M:UnityEngine.Networking.Fakes.ShimSyncListInt.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:UnityEngine.Networking.Fakes.ShimSyncListInt.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:UnityEngine.Networking.Fakes.ShimSyncListInt.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="M:UnityEngine.Networking.Fakes.ShimSyncListInt.Bind(System.Collections.IEnumerable)">
            <summary>将接口的成员绑定到此填充码。</summary>
        </member>
        <member name="M:UnityEngine.Networking.Fakes.ShimSyncListInt.Bind(System.Collections.Generic.ICollection{System.Int32})">
            <summary>将接口的成员绑定到此填充码。</summary>
        </member>
        <member name="M:UnityEngine.Networking.Fakes.ShimSyncListInt.Bind(System.Collections.Generic.IEnumerable{System.Int32})">
            <summary>将接口的成员绑定到此填充码。</summary>
        </member>
        <member name="M:UnityEngine.Networking.Fakes.ShimSyncListInt.Bind(System.Collections.Generic.IList{System.Int32})">
            <summary>将接口的成员绑定到此填充码。</summary>
        </member>
        <member name="P:UnityEngine.Networking.Fakes.ShimSyncListInt.Constructor">
            <summary>设置 SyncListInt.SyncListInt() 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Networking.Fakes.ShimSyncListInt.DeserializeItemNetworkReader">
            <summary>设置 SyncListInt.DeserializeItem(NetworkReader reader) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Networking.Fakes.ShimSyncListInt.ReadInstanceNetworkReader">
            <summary>设置 SyncListInt.ReadInstance(NetworkReader reader) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Networking.Fakes.ShimSyncListInt.SerializeItemNetworkWriterInt32">
            <summary>设置 SyncListInt.SerializeItem(NetworkWriter writer, Int32 item) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Networking.Fakes.ShimSyncListInt.WriteInstanceNetworkWriterSyncListInt">
            <summary>设置 SyncListInt.WriteInstance(NetworkWriter writer, SyncListInt items) 的 填充码</summary>
        </member>
        <member name="T:UnityEngine.Networking.Fakes.ShimSyncListString">
            <summary>UnityEngine.Networking.SyncListString 的填充码类型</summary>
        </member>
        <member name="M:UnityEngine.Networking.Fakes.ShimSyncListString.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:UnityEngine.Networking.Fakes.ShimSyncListString.#ctor(UnityEngine.Networking.SyncListString)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="T:UnityEngine.Networking.Fakes.ShimSyncListString.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:UnityEngine.Networking.Fakes.ShimSyncListString.AllInstances.DeserializeItemNetworkReader">
            <summary>设置 SyncListString.DeserializeItem(NetworkReader reader) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Networking.Fakes.ShimSyncListString.AllInstances.SerializeItemNetworkWriterString">
            <summary>设置 SyncListString.SerializeItem(NetworkWriter writer, String item) 的 填充码</summary>
        </member>
        <member name="M:UnityEngine.Networking.Fakes.ShimSyncListString.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:UnityEngine.Networking.Fakes.ShimSyncListString.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:UnityEngine.Networking.Fakes.ShimSyncListString.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="M:UnityEngine.Networking.Fakes.ShimSyncListString.Bind(System.Collections.IEnumerable)">
            <summary>将接口的成员绑定到此填充码。</summary>
        </member>
        <member name="M:UnityEngine.Networking.Fakes.ShimSyncListString.Bind(System.Collections.Generic.ICollection{System.String})">
            <summary>将接口的成员绑定到此填充码。</summary>
        </member>
        <member name="M:UnityEngine.Networking.Fakes.ShimSyncListString.Bind(System.Collections.Generic.IEnumerable{System.String})">
            <summary>将接口的成员绑定到此填充码。</summary>
        </member>
        <member name="M:UnityEngine.Networking.Fakes.ShimSyncListString.Bind(System.Collections.Generic.IList{System.String})">
            <summary>将接口的成员绑定到此填充码。</summary>
        </member>
        <member name="P:UnityEngine.Networking.Fakes.ShimSyncListString.Constructor">
            <summary>设置 SyncListString.SyncListString() 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Networking.Fakes.ShimSyncListString.DeserializeItemNetworkReader">
            <summary>设置 SyncListString.DeserializeItem(NetworkReader reader) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Networking.Fakes.ShimSyncListString.ReadInstanceNetworkReader">
            <summary>设置 SyncListString.ReadInstance(NetworkReader reader) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Networking.Fakes.ShimSyncListString.SerializeItemNetworkWriterString">
            <summary>设置 SyncListString.SerializeItem(NetworkWriter writer, String item) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Networking.Fakes.ShimSyncListString.WriteInstanceNetworkWriterSyncListString">
            <summary>设置 SyncListString.WriteInstance(NetworkWriter writer, SyncListString items) 的 填充码</summary>
        </member>
        <member name="T:UnityEngine.Networking.Fakes.ShimSyncListUInt">
            <summary>UnityEngine.Networking.SyncListUInt 的填充码类型</summary>
        </member>
        <member name="M:UnityEngine.Networking.Fakes.ShimSyncListUInt.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:UnityEngine.Networking.Fakes.ShimSyncListUInt.#ctor(UnityEngine.Networking.SyncListUInt)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="T:UnityEngine.Networking.Fakes.ShimSyncListUInt.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:UnityEngine.Networking.Fakes.ShimSyncListUInt.AllInstances.DeserializeItemNetworkReader">
            <summary>设置 SyncListUInt.DeserializeItem(NetworkReader reader) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Networking.Fakes.ShimSyncListUInt.AllInstances.SerializeItemNetworkWriterUInt32">
            <summary>设置 SyncListUInt.SerializeItem(NetworkWriter writer, UInt32 item) 的 填充码</summary>
        </member>
        <member name="M:UnityEngine.Networking.Fakes.ShimSyncListUInt.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:UnityEngine.Networking.Fakes.ShimSyncListUInt.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:UnityEngine.Networking.Fakes.ShimSyncListUInt.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="M:UnityEngine.Networking.Fakes.ShimSyncListUInt.Bind(System.Collections.IEnumerable)">
            <summary>将接口的成员绑定到此填充码。</summary>
        </member>
        <member name="M:UnityEngine.Networking.Fakes.ShimSyncListUInt.Bind(System.Collections.Generic.ICollection{System.UInt32})">
            <summary>将接口的成员绑定到此填充码。</summary>
        </member>
        <member name="M:UnityEngine.Networking.Fakes.ShimSyncListUInt.Bind(System.Collections.Generic.IEnumerable{System.UInt32})">
            <summary>将接口的成员绑定到此填充码。</summary>
        </member>
        <member name="M:UnityEngine.Networking.Fakes.ShimSyncListUInt.Bind(System.Collections.Generic.IList{System.UInt32})">
            <summary>将接口的成员绑定到此填充码。</summary>
        </member>
        <member name="P:UnityEngine.Networking.Fakes.ShimSyncListUInt.Constructor">
            <summary>设置 SyncListUInt.SyncListUInt() 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Networking.Fakes.ShimSyncListUInt.DeserializeItemNetworkReader">
            <summary>设置 SyncListUInt.DeserializeItem(NetworkReader reader) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Networking.Fakes.ShimSyncListUInt.ReadInstanceNetworkReader">
            <summary>设置 SyncListUInt.ReadInstance(NetworkReader reader) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Networking.Fakes.ShimSyncListUInt.SerializeItemNetworkWriterUInt32">
            <summary>设置 SyncListUInt.SerializeItem(NetworkWriter writer, UInt32 item) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Networking.Fakes.ShimSyncListUInt.WriteInstanceNetworkWriterSyncListUInt">
            <summary>设置 SyncListUInt.WriteInstance(NetworkWriter writer, SyncListUInt items) 的 填充码</summary>
        </member>
        <member name="T:UnityEngine.Networking.Fakes.ShimSyncVarAttribute">
            <summary>UnityEngine.Networking.SyncVarAttribute 的填充码类型</summary>
        </member>
        <member name="M:UnityEngine.Networking.Fakes.ShimSyncVarAttribute.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:UnityEngine.Networking.Fakes.ShimSyncVarAttribute.#ctor(UnityEngine.Networking.SyncVarAttribute)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="T:UnityEngine.Networking.Fakes.ShimSyncVarAttribute.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="M:UnityEngine.Networking.Fakes.ShimSyncVarAttribute.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:UnityEngine.Networking.Fakes.ShimSyncVarAttribute.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:UnityEngine.Networking.Fakes.ShimSyncVarAttribute.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:UnityEngine.Networking.Fakes.ShimSyncVarAttribute.Constructor">
            <summary>设置 SyncVarAttribute.SyncVarAttribute() 的 填充码</summary>
        </member>
        <member name="T:UnityEngine.Networking.Fakes.StubChannels">
            <summary>UnityEngine.Networking.Channels 的存根类型</summary>
        </member>
        <member name="M:UnityEngine.Networking.Fakes.StubChannels.#ctor">
            <summary>初始化新实例</summary>
        </member>
        <member name="P:UnityEngine.Networking.Fakes.StubChannels.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="M:UnityEngine.Networking.Fakes.StubChannels.InitializeStub">
            <summary>初始化 type StubChannels 的新实例</summary>
        </member>
        <member name="P:UnityEngine.Networking.Fakes.StubChannels.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:UnityEngine.Networking.Fakes.StubChannels.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="T:UnityEngine.Networking.Fakes.StubClientAttribute">
            <summary>UnityEngine.Networking.ClientAttribute 的存根类型</summary>
        </member>
        <member name="M:UnityEngine.Networking.Fakes.StubClientAttribute.#ctor">
            <summary>初始化新实例</summary>
        </member>
        <member name="P:UnityEngine.Networking.Fakes.StubClientAttribute.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="M:UnityEngine.Networking.Fakes.StubClientAttribute.Equals(System.Object)">
            <summary>设置 Attribute.Equals(Object obj) 的 存根</summary>
        </member>
        <member name="F:UnityEngine.Networking.Fakes.StubClientAttribute.EqualsObject">
            <summary>设置 Attribute.Equals(Object obj) 的 stub</summary>
        </member>
        <member name="M:UnityEngine.Networking.Fakes.StubClientAttribute.GetHashCode">
            <summary>设置 Attribute.GetHashCode() 的 存根</summary>
        </member>
        <member name="F:UnityEngine.Networking.Fakes.StubClientAttribute.GetHashCode01">
            <summary>设置 Attribute.GetHashCode() 的 stub</summary>
        </member>
        <member name="M:UnityEngine.Networking.Fakes.StubClientAttribute.InitializeStub">
            <summary>初始化 type StubClientAttribute 的新实例</summary>
        </member>
        <member name="P:UnityEngine.Networking.Fakes.StubClientAttribute.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:UnityEngine.Networking.Fakes.StubClientAttribute.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="M:UnityEngine.Networking.Fakes.StubClientAttribute.IsDefaultAttribute">
            <summary>设置 Attribute.IsDefaultAttribute() 的 存根</summary>
        </member>
        <member name="F:UnityEngine.Networking.Fakes.StubClientAttribute.IsDefaultAttribute01">
            <summary>设置 Attribute.IsDefaultAttribute() 的 stub</summary>
        </member>
        <member name="M:UnityEngine.Networking.Fakes.StubClientAttribute.Match(System.Object)">
            <summary>设置 Attribute.Match(Object obj) 的 存根</summary>
        </member>
        <member name="F:UnityEngine.Networking.Fakes.StubClientAttribute.MatchObject">
            <summary>设置 Attribute.Match(Object obj) 的 stub</summary>
        </member>
        <member name="P:UnityEngine.Networking.Fakes.StubClientAttribute.TypeId">
            <summary>设置 Attribute.get_TypeId() 的 stub</summary>
        </member>
        <member name="F:UnityEngine.Networking.Fakes.StubClientAttribute.TypeIdGet">
            <summary>设置 Attribute.get_TypeId() 的 stub</summary>
        </member>
        <member name="T:UnityEngine.Networking.Fakes.StubClientCallbackAttribute">
            <summary>UnityEngine.Networking.ClientCallbackAttribute 的存根类型</summary>
        </member>
        <member name="M:UnityEngine.Networking.Fakes.StubClientCallbackAttribute.#ctor">
            <summary>初始化新实例</summary>
        </member>
        <member name="P:UnityEngine.Networking.Fakes.StubClientCallbackAttribute.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="M:UnityEngine.Networking.Fakes.StubClientCallbackAttribute.Equals(System.Object)">
            <summary>设置 Attribute.Equals(Object obj) 的 存根</summary>
        </member>
        <member name="F:UnityEngine.Networking.Fakes.StubClientCallbackAttribute.EqualsObject">
            <summary>设置 Attribute.Equals(Object obj) 的 stub</summary>
        </member>
        <member name="M:UnityEngine.Networking.Fakes.StubClientCallbackAttribute.GetHashCode">
            <summary>设置 Attribute.GetHashCode() 的 存根</summary>
        </member>
        <member name="F:UnityEngine.Networking.Fakes.StubClientCallbackAttribute.GetHashCode01">
            <summary>设置 Attribute.GetHashCode() 的 stub</summary>
        </member>
        <member name="M:UnityEngine.Networking.Fakes.StubClientCallbackAttribute.InitializeStub">
            <summary>初始化 type StubClientCallbackAttribute 的新实例</summary>
        </member>
        <member name="P:UnityEngine.Networking.Fakes.StubClientCallbackAttribute.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:UnityEngine.Networking.Fakes.StubClientCallbackAttribute.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="M:UnityEngine.Networking.Fakes.StubClientCallbackAttribute.IsDefaultAttribute">
            <summary>设置 Attribute.IsDefaultAttribute() 的 存根</summary>
        </member>
        <member name="F:UnityEngine.Networking.Fakes.StubClientCallbackAttribute.IsDefaultAttribute01">
            <summary>设置 Attribute.IsDefaultAttribute() 的 stub</summary>
        </member>
        <member name="M:UnityEngine.Networking.Fakes.StubClientCallbackAttribute.Match(System.Object)">
            <summary>设置 Attribute.Match(Object obj) 的 存根</summary>
        </member>
        <member name="F:UnityEngine.Networking.Fakes.StubClientCallbackAttribute.MatchObject">
            <summary>设置 Attribute.Match(Object obj) 的 stub</summary>
        </member>
        <member name="P:UnityEngine.Networking.Fakes.StubClientCallbackAttribute.TypeId">
            <summary>设置 Attribute.get_TypeId() 的 stub</summary>
        </member>
        <member name="F:UnityEngine.Networking.Fakes.StubClientCallbackAttribute.TypeIdGet">
            <summary>设置 Attribute.get_TypeId() 的 stub</summary>
        </member>
        <member name="T:UnityEngine.Networking.Fakes.StubClientRpcAttribute">
            <summary>UnityEngine.Networking.ClientRpcAttribute 的存根类型</summary>
        </member>
        <member name="M:UnityEngine.Networking.Fakes.StubClientRpcAttribute.#ctor">
            <summary>初始化新实例</summary>
        </member>
        <member name="P:UnityEngine.Networking.Fakes.StubClientRpcAttribute.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="M:UnityEngine.Networking.Fakes.StubClientRpcAttribute.Equals(System.Object)">
            <summary>设置 Attribute.Equals(Object obj) 的 存根</summary>
        </member>
        <member name="F:UnityEngine.Networking.Fakes.StubClientRpcAttribute.EqualsObject">
            <summary>设置 Attribute.Equals(Object obj) 的 stub</summary>
        </member>
        <member name="M:UnityEngine.Networking.Fakes.StubClientRpcAttribute.GetHashCode">
            <summary>设置 Attribute.GetHashCode() 的 存根</summary>
        </member>
        <member name="F:UnityEngine.Networking.Fakes.StubClientRpcAttribute.GetHashCode01">
            <summary>设置 Attribute.GetHashCode() 的 stub</summary>
        </member>
        <member name="M:UnityEngine.Networking.Fakes.StubClientRpcAttribute.InitializeStub">
            <summary>初始化 type StubClientRpcAttribute 的新实例</summary>
        </member>
        <member name="P:UnityEngine.Networking.Fakes.StubClientRpcAttribute.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:UnityEngine.Networking.Fakes.StubClientRpcAttribute.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="M:UnityEngine.Networking.Fakes.StubClientRpcAttribute.IsDefaultAttribute">
            <summary>设置 Attribute.IsDefaultAttribute() 的 存根</summary>
        </member>
        <member name="F:UnityEngine.Networking.Fakes.StubClientRpcAttribute.IsDefaultAttribute01">
            <summary>设置 Attribute.IsDefaultAttribute() 的 stub</summary>
        </member>
        <member name="M:UnityEngine.Networking.Fakes.StubClientRpcAttribute.Match(System.Object)">
            <summary>设置 Attribute.Match(Object obj) 的 存根</summary>
        </member>
        <member name="F:UnityEngine.Networking.Fakes.StubClientRpcAttribute.MatchObject">
            <summary>设置 Attribute.Match(Object obj) 的 stub</summary>
        </member>
        <member name="P:UnityEngine.Networking.Fakes.StubClientRpcAttribute.TypeId">
            <summary>设置 Attribute.get_TypeId() 的 stub</summary>
        </member>
        <member name="F:UnityEngine.Networking.Fakes.StubClientRpcAttribute.TypeIdGet">
            <summary>设置 Attribute.get_TypeId() 的 stub</summary>
        </member>
        <member name="T:UnityEngine.Networking.Fakes.StubClientScene">
            <summary>UnityEngine.Networking.ClientScene 的存根类型</summary>
        </member>
        <member name="M:UnityEngine.Networking.Fakes.StubClientScene.#ctor">
            <summary>初始化新实例</summary>
        </member>
        <member name="P:UnityEngine.Networking.Fakes.StubClientScene.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="M:UnityEngine.Networking.Fakes.StubClientScene.InitializeStub">
            <summary>初始化 type StubClientScene 的新实例</summary>
        </member>
        <member name="P:UnityEngine.Networking.Fakes.StubClientScene.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:UnityEngine.Networking.Fakes.StubClientScene.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="T:UnityEngine.Networking.Fakes.StubCommandAttribute">
            <summary>UnityEngine.Networking.CommandAttribute 的存根类型</summary>
        </member>
        <member name="M:UnityEngine.Networking.Fakes.StubCommandAttribute.#ctor">
            <summary>初始化新实例</summary>
        </member>
        <member name="P:UnityEngine.Networking.Fakes.StubCommandAttribute.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="M:UnityEngine.Networking.Fakes.StubCommandAttribute.Equals(System.Object)">
            <summary>设置 Attribute.Equals(Object obj) 的 存根</summary>
        </member>
        <member name="F:UnityEngine.Networking.Fakes.StubCommandAttribute.EqualsObject">
            <summary>设置 Attribute.Equals(Object obj) 的 stub</summary>
        </member>
        <member name="M:UnityEngine.Networking.Fakes.StubCommandAttribute.GetHashCode">
            <summary>设置 Attribute.GetHashCode() 的 存根</summary>
        </member>
        <member name="F:UnityEngine.Networking.Fakes.StubCommandAttribute.GetHashCode01">
            <summary>设置 Attribute.GetHashCode() 的 stub</summary>
        </member>
        <member name="M:UnityEngine.Networking.Fakes.StubCommandAttribute.InitializeStub">
            <summary>初始化 type StubCommandAttribute 的新实例</summary>
        </member>
        <member name="P:UnityEngine.Networking.Fakes.StubCommandAttribute.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:UnityEngine.Networking.Fakes.StubCommandAttribute.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="M:UnityEngine.Networking.Fakes.StubCommandAttribute.IsDefaultAttribute">
            <summary>设置 Attribute.IsDefaultAttribute() 的 存根</summary>
        </member>
        <member name="F:UnityEngine.Networking.Fakes.StubCommandAttribute.IsDefaultAttribute01">
            <summary>设置 Attribute.IsDefaultAttribute() 的 stub</summary>
        </member>
        <member name="M:UnityEngine.Networking.Fakes.StubCommandAttribute.Match(System.Object)">
            <summary>设置 Attribute.Match(Object obj) 的 存根</summary>
        </member>
        <member name="F:UnityEngine.Networking.Fakes.StubCommandAttribute.MatchObject">
            <summary>设置 Attribute.Match(Object obj) 的 stub</summary>
        </member>
        <member name="P:UnityEngine.Networking.Fakes.StubCommandAttribute.TypeId">
            <summary>设置 Attribute.get_TypeId() 的 stub</summary>
        </member>
        <member name="F:UnityEngine.Networking.Fakes.StubCommandAttribute.TypeIdGet">
            <summary>设置 Attribute.get_TypeId() 的 stub</summary>
        </member>
        <member name="T:UnityEngine.Networking.Fakes.StubLogFilter">
            <summary>UnityEngine.Networking.LogFilter 的存根类型</summary>
        </member>
        <member name="M:UnityEngine.Networking.Fakes.StubLogFilter.#ctor">
            <summary>初始化新实例</summary>
        </member>
        <member name="P:UnityEngine.Networking.Fakes.StubLogFilter.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="M:UnityEngine.Networking.Fakes.StubLogFilter.InitializeStub">
            <summary>初始化 type StubLogFilter 的新实例</summary>
        </member>
        <member name="P:UnityEngine.Networking.Fakes.StubLogFilter.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:UnityEngine.Networking.Fakes.StubLogFilter.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="T:UnityEngine.Networking.Fakes.StubMessageBase">
            <summary>UnityEngine.Networking.MessageBase 的存根类型</summary>
        </member>
        <member name="M:UnityEngine.Networking.Fakes.StubMessageBase.#ctor">
            <summary>初始化新实例</summary>
        </member>
        <member name="P:UnityEngine.Networking.Fakes.StubMessageBase.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="M:UnityEngine.Networking.Fakes.StubMessageBase.Deserialize(UnityEngine.Networking.NetworkReader)">
            <summary>设置 MessageBase.Deserialize(NetworkReader reader) 的 存根</summary>
        </member>
        <member name="F:UnityEngine.Networking.Fakes.StubMessageBase.DeserializeNetworkReader">
            <summary>设置 MessageBase.Deserialize(NetworkReader reader) 的 stub</summary>
        </member>
        <member name="M:UnityEngine.Networking.Fakes.StubMessageBase.InitializeStub">
            <summary>初始化 type StubMessageBase 的新实例</summary>
        </member>
        <member name="P:UnityEngine.Networking.Fakes.StubMessageBase.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:UnityEngine.Networking.Fakes.StubMessageBase.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="M:UnityEngine.Networking.Fakes.StubMessageBase.Serialize(UnityEngine.Networking.NetworkWriter)">
            <summary>设置 MessageBase.Serialize(NetworkWriter writer) 的 存根</summary>
        </member>
        <member name="F:UnityEngine.Networking.Fakes.StubMessageBase.SerializeNetworkWriter">
            <summary>设置 MessageBase.Serialize(NetworkWriter writer) 的 stub</summary>
        </member>
        <member name="T:UnityEngine.Networking.Fakes.StubMsgType">
            <summary>UnityEngine.Networking.MsgType 的存根类型</summary>
        </member>
        <member name="M:UnityEngine.Networking.Fakes.StubMsgType.#ctor">
            <summary>初始化新实例</summary>
        </member>
        <member name="P:UnityEngine.Networking.Fakes.StubMsgType.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="M:UnityEngine.Networking.Fakes.StubMsgType.InitializeStub">
            <summary>初始化 type StubMsgType 的新实例</summary>
        </member>
        <member name="P:UnityEngine.Networking.Fakes.StubMsgType.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:UnityEngine.Networking.Fakes.StubMsgType.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="T:UnityEngine.Networking.Fakes.StubNetworkAnimator">
            <summary>UnityEngine.Networking.NetworkAnimator 的存根类型</summary>
        </member>
        <member name="M:UnityEngine.Networking.Fakes.StubNetworkAnimator.#ctor">
            <summary>初始化新实例</summary>
        </member>
        <member name="P:UnityEngine.Networking.Fakes.StubNetworkAnimator.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="M:UnityEngine.Networking.Fakes.StubNetworkAnimator.Equals(System.Object)">
            <summary>设置 Object.Equals(Object o) 的 存根</summary>
        </member>
        <member name="F:UnityEngine.Networking.Fakes.StubNetworkAnimator.EqualsObject">
            <summary>设置 Object.Equals(Object o) 的 stub</summary>
        </member>
        <member name="M:UnityEngine.Networking.Fakes.StubNetworkAnimator.GetHashCode">
            <summary>设置 Object.GetHashCode() 的 存根</summary>
        </member>
        <member name="F:UnityEngine.Networking.Fakes.StubNetworkAnimator.GetHashCode01">
            <summary>设置 Object.GetHashCode() 的 stub</summary>
        </member>
        <member name="M:UnityEngine.Networking.Fakes.StubNetworkAnimator.GetNetworkChannel">
            <summary>设置 NetworkBehaviour.GetNetworkChannel() 的 存根</summary>
        </member>
        <member name="F:UnityEngine.Networking.Fakes.StubNetworkAnimator.GetNetworkChannel01">
            <summary>设置 NetworkBehaviour.GetNetworkChannel() 的 stub</summary>
        </member>
        <member name="M:UnityEngine.Networking.Fakes.StubNetworkAnimator.GetNetworkSendInterval">
            <summary>设置 NetworkBehaviour.GetNetworkSendInterval() 的 存根</summary>
        </member>
        <member name="F:UnityEngine.Networking.Fakes.StubNetworkAnimator.GetNetworkSendInterval01">
            <summary>设置 NetworkBehaviour.GetNetworkSendInterval() 的 stub</summary>
        </member>
        <member name="M:UnityEngine.Networking.Fakes.StubNetworkAnimator.InitializeStub">
            <summary>初始化 type StubNetworkAnimator 的新实例</summary>
        </member>
        <member name="P:UnityEngine.Networking.Fakes.StubNetworkAnimator.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:UnityEngine.Networking.Fakes.StubNetworkAnimator.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="M:UnityEngine.Networking.Fakes.StubNetworkAnimator.InvokeCommand(System.Int32,UnityEngine.Networking.NetworkReader)">
            <summary>设置 NetworkBehaviour.InvokeCommand(Int32 cmdHash, NetworkReader reader) 的 存根</summary>
        </member>
        <member name="F:UnityEngine.Networking.Fakes.StubNetworkAnimator.InvokeCommandInt32NetworkReader">
            <summary>设置 NetworkBehaviour.InvokeCommand(Int32 cmdHash, NetworkReader reader) 的 stub</summary>
        </member>
        <member name="M:UnityEngine.Networking.Fakes.StubNetworkAnimator.InvokeRPC(System.Int32,UnityEngine.Networking.NetworkReader)">
            <summary>设置 NetworkBehaviour.InvokeRPC(Int32 cmdHash, NetworkReader reader) 的 存根</summary>
        </member>
        <member name="F:UnityEngine.Networking.Fakes.StubNetworkAnimator.InvokeRPCInt32NetworkReader">
            <summary>设置 NetworkBehaviour.InvokeRPC(Int32 cmdHash, NetworkReader reader) 的 stub</summary>
        </member>
        <member name="M:UnityEngine.Networking.Fakes.StubNetworkAnimator.InvokeSyncEvent(System.Int32,UnityEngine.Networking.NetworkReader)">
            <summary>设置 NetworkBehaviour.InvokeSyncEvent(Int32 cmdHash, NetworkReader reader) 的 存根</summary>
        </member>
        <member name="F:UnityEngine.Networking.Fakes.StubNetworkAnimator.InvokeSyncEventInt32NetworkReader">
            <summary>设置 NetworkBehaviour.InvokeSyncEvent(Int32 cmdHash, NetworkReader reader) 的 stub</summary>
        </member>
        <member name="M:UnityEngine.Networking.Fakes.StubNetworkAnimator.InvokeSyncList(System.Int32,UnityEngine.Networking.NetworkReader)">
            <summary>设置 NetworkBehaviour.InvokeSyncList(Int32 cmdHash, NetworkReader reader) 的 存根</summary>
        </member>
        <member name="F:UnityEngine.Networking.Fakes.StubNetworkAnimator.InvokeSyncListInt32NetworkReader">
            <summary>设置 NetworkBehaviour.InvokeSyncList(Int32 cmdHash, NetworkReader reader) 的 stub</summary>
        </member>
        <member name="M:UnityEngine.Networking.Fakes.StubNetworkAnimator.OnCheckObserver(UnityEngine.Networking.NetworkConnection)">
            <summary>设置 NetworkBehaviour.OnCheckObserver(NetworkConnection conn) 的 存根</summary>
        </member>
        <member name="F:UnityEngine.Networking.Fakes.StubNetworkAnimator.OnCheckObserverNetworkConnection">
            <summary>设置 NetworkBehaviour.OnCheckObserver(NetworkConnection conn) 的 stub</summary>
        </member>
        <member name="M:UnityEngine.Networking.Fakes.StubNetworkAnimator.OnDeserialize(UnityEngine.Networking.NetworkReader,System.Boolean)">
            <summary>设置 NetworkAnimator.OnDeserialize(NetworkReader reader, Boolean initialState) 的 存根</summary>
        </member>
        <member name="F:UnityEngine.Networking.Fakes.StubNetworkAnimator.OnDeserializeNetworkReaderBoolean">
            <summary>设置 NetworkAnimator.OnDeserialize(NetworkReader reader, Boolean initialState) 的 stub</summary>
        </member>
        <member name="M:UnityEngine.Networking.Fakes.StubNetworkAnimator.OnNetworkDestroy">
            <summary>设置 NetworkBehaviour.OnNetworkDestroy() 的 存根</summary>
        </member>
        <member name="F:UnityEngine.Networking.Fakes.StubNetworkAnimator.OnNetworkDestroy01">
            <summary>设置 NetworkBehaviour.OnNetworkDestroy() 的 stub</summary>
        </member>
        <member name="M:UnityEngine.Networking.Fakes.StubNetworkAnimator.OnRebuildObservers(System.Collections.Generic.HashSet{UnityEngine.Networking.NetworkConnection},System.Boolean)">
            <summary>设置 NetworkBehaviour.OnRebuildObservers(HashSet`1&lt;NetworkConnection&gt; observers, Boolean initialize) 的 存根</summary>
        </member>
        <member name="F:UnityEngine.Networking.Fakes.StubNetworkAnimator.OnRebuildObserversHashSetOfNetworkConnectionBoolean">
            <summary>设置 NetworkBehaviour.OnRebuildObservers(HashSet`1&lt;NetworkConnection&gt; observers, Boolean initialize) 的 stub</summary>
        </member>
        <member name="M:UnityEngine.Networking.Fakes.StubNetworkAnimator.OnSerialize(UnityEngine.Networking.NetworkWriter,System.Boolean)">
            <summary>设置 NetworkAnimator.OnSerialize(NetworkWriter writer, Boolean forceAll) 的 存根</summary>
        </member>
        <member name="F:UnityEngine.Networking.Fakes.StubNetworkAnimator.OnSerializeNetworkWriterBoolean">
            <summary>设置 NetworkAnimator.OnSerialize(NetworkWriter writer, Boolean forceAll) 的 stub</summary>
        </member>
        <member name="M:UnityEngine.Networking.Fakes.StubNetworkAnimator.OnSetLocalVisibility(System.Boolean)">
            <summary>设置 NetworkBehaviour.OnSetLocalVisibility(Boolean vis) 的 存根</summary>
        </member>
        <member name="F:UnityEngine.Networking.Fakes.StubNetworkAnimator.OnSetLocalVisibilityBoolean">
            <summary>设置 NetworkBehaviour.OnSetLocalVisibility(Boolean vis) 的 stub</summary>
        </member>
        <member name="M:UnityEngine.Networking.Fakes.StubNetworkAnimator.OnStartAuthority">
            <summary>设置 NetworkBehaviour.OnStartAuthority() 的 存根</summary>
        </member>
        <member name="F:UnityEngine.Networking.Fakes.StubNetworkAnimator.OnStartAuthority01">
            <summary>设置 NetworkBehaviour.OnStartAuthority() 的 stub</summary>
        </member>
        <member name="M:UnityEngine.Networking.Fakes.StubNetworkAnimator.OnStartClient">
            <summary>设置 NetworkBehaviour.OnStartClient() 的 存根</summary>
        </member>
        <member name="F:UnityEngine.Networking.Fakes.StubNetworkAnimator.OnStartClient01">
            <summary>设置 NetworkBehaviour.OnStartClient() 的 stub</summary>
        </member>
        <member name="M:UnityEngine.Networking.Fakes.StubNetworkAnimator.OnStartLocalPlayer">
            <summary>设置 NetworkAnimator.OnStartLocalPlayer() 的 存根</summary>
        </member>
        <member name="F:UnityEngine.Networking.Fakes.StubNetworkAnimator.OnStartLocalPlayer01">
            <summary>设置 NetworkAnimator.OnStartLocalPlayer() 的 stub</summary>
        </member>
        <member name="M:UnityEngine.Networking.Fakes.StubNetworkAnimator.OnStartServer">
            <summary>设置 NetworkAnimator.OnStartServer() 的 存根</summary>
        </member>
        <member name="F:UnityEngine.Networking.Fakes.StubNetworkAnimator.OnStartServer01">
            <summary>设置 NetworkAnimator.OnStartServer() 的 stub</summary>
        </member>
        <member name="M:UnityEngine.Networking.Fakes.StubNetworkAnimator.OnStopAuthority">
            <summary>设置 NetworkBehaviour.OnStopAuthority() 的 存根</summary>
        </member>
        <member name="F:UnityEngine.Networking.Fakes.StubNetworkAnimator.OnStopAuthority01">
            <summary>设置 NetworkBehaviour.OnStopAuthority() 的 stub</summary>
        </member>
        <member name="M:UnityEngine.Networking.Fakes.StubNetworkAnimator.PreStartClient">
            <summary>设置 NetworkBehaviour.PreStartClient() 的 存根</summary>
        </member>
        <member name="F:UnityEngine.Networking.Fakes.StubNetworkAnimator.PreStartClient01">
            <summary>设置 NetworkBehaviour.PreStartClient() 的 stub</summary>
        </member>
        <member name="M:UnityEngine.Networking.Fakes.StubNetworkAnimator.ToString">
            <summary>设置 Object.ToString() 的 存根</summary>
        </member>
        <member name="F:UnityEngine.Networking.Fakes.StubNetworkAnimator.ToString01">
            <summary>设置 Object.ToString() 的 stub</summary>
        </member>
        <member name="T:UnityEngine.Networking.Fakes.StubNetworkBehaviour">
            <summary>UnityEngine.Networking.NetworkBehaviour 的存根类型</summary>
        </member>
        <member name="M:UnityEngine.Networking.Fakes.StubNetworkBehaviour.#ctor">
            <summary>初始化新实例</summary>
        </member>
        <member name="P:UnityEngine.Networking.Fakes.StubNetworkBehaviour.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="M:UnityEngine.Networking.Fakes.StubNetworkBehaviour.Equals(System.Object)">
            <summary>设置 Object.Equals(Object o) 的 存根</summary>
        </member>
        <member name="F:UnityEngine.Networking.Fakes.StubNetworkBehaviour.EqualsObject">
            <summary>设置 Object.Equals(Object o) 的 stub</summary>
        </member>
        <member name="M:UnityEngine.Networking.Fakes.StubNetworkBehaviour.GetHashCode">
            <summary>设置 Object.GetHashCode() 的 存根</summary>
        </member>
        <member name="F:UnityEngine.Networking.Fakes.StubNetworkBehaviour.GetHashCode01">
            <summary>设置 Object.GetHashCode() 的 stub</summary>
        </member>
        <member name="M:UnityEngine.Networking.Fakes.StubNetworkBehaviour.GetNetworkChannel">
            <summary>设置 NetworkBehaviour.GetNetworkChannel() 的 存根</summary>
        </member>
        <member name="F:UnityEngine.Networking.Fakes.StubNetworkBehaviour.GetNetworkChannel01">
            <summary>设置 NetworkBehaviour.GetNetworkChannel() 的 stub</summary>
        </member>
        <member name="M:UnityEngine.Networking.Fakes.StubNetworkBehaviour.GetNetworkSendInterval">
            <summary>设置 NetworkBehaviour.GetNetworkSendInterval() 的 存根</summary>
        </member>
        <member name="F:UnityEngine.Networking.Fakes.StubNetworkBehaviour.GetNetworkSendInterval01">
            <summary>设置 NetworkBehaviour.GetNetworkSendInterval() 的 stub</summary>
        </member>
        <member name="M:UnityEngine.Networking.Fakes.StubNetworkBehaviour.InitializeStub">
            <summary>初始化 type StubNetworkBehaviour 的新实例</summary>
        </member>
        <member name="P:UnityEngine.Networking.Fakes.StubNetworkBehaviour.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:UnityEngine.Networking.Fakes.StubNetworkBehaviour.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="M:UnityEngine.Networking.Fakes.StubNetworkBehaviour.InvokeCommand(System.Int32,UnityEngine.Networking.NetworkReader)">
            <summary>设置 NetworkBehaviour.InvokeCommand(Int32 cmdHash, NetworkReader reader) 的 存根</summary>
        </member>
        <member name="F:UnityEngine.Networking.Fakes.StubNetworkBehaviour.InvokeCommandInt32NetworkReader">
            <summary>设置 NetworkBehaviour.InvokeCommand(Int32 cmdHash, NetworkReader reader) 的 stub</summary>
        </member>
        <member name="M:UnityEngine.Networking.Fakes.StubNetworkBehaviour.InvokeRPC(System.Int32,UnityEngine.Networking.NetworkReader)">
            <summary>设置 NetworkBehaviour.InvokeRPC(Int32 cmdHash, NetworkReader reader) 的 存根</summary>
        </member>
        <member name="F:UnityEngine.Networking.Fakes.StubNetworkBehaviour.InvokeRPCInt32NetworkReader">
            <summary>设置 NetworkBehaviour.InvokeRPC(Int32 cmdHash, NetworkReader reader) 的 stub</summary>
        </member>
        <member name="M:UnityEngine.Networking.Fakes.StubNetworkBehaviour.InvokeSyncEvent(System.Int32,UnityEngine.Networking.NetworkReader)">
            <summary>设置 NetworkBehaviour.InvokeSyncEvent(Int32 cmdHash, NetworkReader reader) 的 存根</summary>
        </member>
        <member name="F:UnityEngine.Networking.Fakes.StubNetworkBehaviour.InvokeSyncEventInt32NetworkReader">
            <summary>设置 NetworkBehaviour.InvokeSyncEvent(Int32 cmdHash, NetworkReader reader) 的 stub</summary>
        </member>
        <member name="M:UnityEngine.Networking.Fakes.StubNetworkBehaviour.InvokeSyncList(System.Int32,UnityEngine.Networking.NetworkReader)">
            <summary>设置 NetworkBehaviour.InvokeSyncList(Int32 cmdHash, NetworkReader reader) 的 存根</summary>
        </member>
        <member name="F:UnityEngine.Networking.Fakes.StubNetworkBehaviour.InvokeSyncListInt32NetworkReader">
            <summary>设置 NetworkBehaviour.InvokeSyncList(Int32 cmdHash, NetworkReader reader) 的 stub</summary>
        </member>
        <member name="M:UnityEngine.Networking.Fakes.StubNetworkBehaviour.OnCheckObserver(UnityEngine.Networking.NetworkConnection)">
            <summary>设置 NetworkBehaviour.OnCheckObserver(NetworkConnection conn) 的 存根</summary>
        </member>
        <member name="F:UnityEngine.Networking.Fakes.StubNetworkBehaviour.OnCheckObserverNetworkConnection">
            <summary>设置 NetworkBehaviour.OnCheckObserver(NetworkConnection conn) 的 stub</summary>
        </member>
        <member name="M:UnityEngine.Networking.Fakes.StubNetworkBehaviour.OnDeserialize(UnityEngine.Networking.NetworkReader,System.Boolean)">
            <summary>设置 NetworkBehaviour.OnDeserialize(NetworkReader reader, Boolean initialState) 的 存根</summary>
        </member>
        <member name="F:UnityEngine.Networking.Fakes.StubNetworkBehaviour.OnDeserializeNetworkReaderBoolean">
            <summary>设置 NetworkBehaviour.OnDeserialize(NetworkReader reader, Boolean initialState) 的 stub</summary>
        </member>
        <member name="M:UnityEngine.Networking.Fakes.StubNetworkBehaviour.OnNetworkDestroy">
            <summary>设置 NetworkBehaviour.OnNetworkDestroy() 的 存根</summary>
        </member>
        <member name="F:UnityEngine.Networking.Fakes.StubNetworkBehaviour.OnNetworkDestroy01">
            <summary>设置 NetworkBehaviour.OnNetworkDestroy() 的 stub</summary>
        </member>
        <member name="M:UnityEngine.Networking.Fakes.StubNetworkBehaviour.OnRebuildObservers(System.Collections.Generic.HashSet{UnityEngine.Networking.NetworkConnection},System.Boolean)">
            <summary>设置 NetworkBehaviour.OnRebuildObservers(HashSet`1&lt;NetworkConnection&gt; observers, Boolean initialize) 的 存根</summary>
        </member>
        <member name="F:UnityEngine.Networking.Fakes.StubNetworkBehaviour.OnRebuildObserversHashSetOfNetworkConnectionBoolean">
            <summary>设置 NetworkBehaviour.OnRebuildObservers(HashSet`1&lt;NetworkConnection&gt; observers, Boolean initialize) 的 stub</summary>
        </member>
        <member name="M:UnityEngine.Networking.Fakes.StubNetworkBehaviour.OnSerialize(UnityEngine.Networking.NetworkWriter,System.Boolean)">
            <summary>设置 NetworkBehaviour.OnSerialize(NetworkWriter writer, Boolean initialState) 的 存根</summary>
        </member>
        <member name="F:UnityEngine.Networking.Fakes.StubNetworkBehaviour.OnSerializeNetworkWriterBoolean">
            <summary>设置 NetworkBehaviour.OnSerialize(NetworkWriter writer, Boolean initialState) 的 stub</summary>
        </member>
        <member name="M:UnityEngine.Networking.Fakes.StubNetworkBehaviour.OnSetLocalVisibility(System.Boolean)">
            <summary>设置 NetworkBehaviour.OnSetLocalVisibility(Boolean vis) 的 存根</summary>
        </member>
        <member name="F:UnityEngine.Networking.Fakes.StubNetworkBehaviour.OnSetLocalVisibilityBoolean">
            <summary>设置 NetworkBehaviour.OnSetLocalVisibility(Boolean vis) 的 stub</summary>
        </member>
        <member name="M:UnityEngine.Networking.Fakes.StubNetworkBehaviour.OnStartAuthority">
            <summary>设置 NetworkBehaviour.OnStartAuthority() 的 存根</summary>
        </member>
        <member name="F:UnityEngine.Networking.Fakes.StubNetworkBehaviour.OnStartAuthority01">
            <summary>设置 NetworkBehaviour.OnStartAuthority() 的 stub</summary>
        </member>
        <member name="M:UnityEngine.Networking.Fakes.StubNetworkBehaviour.OnStartClient">
            <summary>设置 NetworkBehaviour.OnStartClient() 的 存根</summary>
        </member>
        <member name="F:UnityEngine.Networking.Fakes.StubNetworkBehaviour.OnStartClient01">
            <summary>设置 NetworkBehaviour.OnStartClient() 的 stub</summary>
        </member>
        <member name="M:UnityEngine.Networking.Fakes.StubNetworkBehaviour.OnStartLocalPlayer">
            <summary>设置 NetworkBehaviour.OnStartLocalPlayer() 的 存根</summary>
        </member>
        <member name="F:UnityEngine.Networking.Fakes.StubNetworkBehaviour.OnStartLocalPlayer01">
            <summary>设置 NetworkBehaviour.OnStartLocalPlayer() 的 stub</summary>
        </member>
        <member name="M:UnityEngine.Networking.Fakes.StubNetworkBehaviour.OnStartServer">
            <summary>设置 NetworkBehaviour.OnStartServer() 的 存根</summary>
        </member>
        <member name="F:UnityEngine.Networking.Fakes.StubNetworkBehaviour.OnStartServer01">
            <summary>设置 NetworkBehaviour.OnStartServer() 的 stub</summary>
        </member>
        <member name="M:UnityEngine.Networking.Fakes.StubNetworkBehaviour.OnStopAuthority">
            <summary>设置 NetworkBehaviour.OnStopAuthority() 的 存根</summary>
        </member>
        <member name="F:UnityEngine.Networking.Fakes.StubNetworkBehaviour.OnStopAuthority01">
            <summary>设置 NetworkBehaviour.OnStopAuthority() 的 stub</summary>
        </member>
        <member name="M:UnityEngine.Networking.Fakes.StubNetworkBehaviour.PreStartClient">
            <summary>设置 NetworkBehaviour.PreStartClient() 的 存根</summary>
        </member>
        <member name="F:UnityEngine.Networking.Fakes.StubNetworkBehaviour.PreStartClient01">
            <summary>设置 NetworkBehaviour.PreStartClient() 的 stub</summary>
        </member>
        <member name="M:UnityEngine.Networking.Fakes.StubNetworkBehaviour.ToString">
            <summary>设置 Object.ToString() 的 存根</summary>
        </member>
        <member name="F:UnityEngine.Networking.Fakes.StubNetworkBehaviour.ToString01">
            <summary>设置 Object.ToString() 的 stub</summary>
        </member>
        <member name="T:UnityEngine.Networking.Fakes.StubNetworkCRC">
            <summary>UnityEngine.Networking.NetworkCRC 的存根类型</summary>
        </member>
        <member name="M:UnityEngine.Networking.Fakes.StubNetworkCRC.#ctor">
            <summary>初始化新实例</summary>
        </member>
        <member name="P:UnityEngine.Networking.Fakes.StubNetworkCRC.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="M:UnityEngine.Networking.Fakes.StubNetworkCRC.InitializeStub">
            <summary>初始化 type StubNetworkCRC 的新实例</summary>
        </member>
        <member name="P:UnityEngine.Networking.Fakes.StubNetworkCRC.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:UnityEngine.Networking.Fakes.StubNetworkCRC.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="T:UnityEngine.Networking.Fakes.StubNetworkClient">
            <summary>UnityEngine.Networking.NetworkClient 的存根类型</summary>
        </member>
        <member name="M:UnityEngine.Networking.Fakes.StubNetworkClient.#ctor">
            <summary>初始化新实例</summary>
        </member>
        <member name="P:UnityEngine.Networking.Fakes.StubNetworkClient.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="M:UnityEngine.Networking.Fakes.StubNetworkClient.Disconnect">
            <summary>设置 NetworkClient.Disconnect() 的 存根</summary>
        </member>
        <member name="F:UnityEngine.Networking.Fakes.StubNetworkClient.Disconnect01">
            <summary>设置 NetworkClient.Disconnect() 的 stub</summary>
        </member>
        <member name="M:UnityEngine.Networking.Fakes.StubNetworkClient.InitializeStub">
            <summary>初始化 type StubNetworkClient 的新实例</summary>
        </member>
        <member name="P:UnityEngine.Networking.Fakes.StubNetworkClient.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:UnityEngine.Networking.Fakes.StubNetworkClient.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="T:UnityEngine.Networking.Fakes.StubNetworkConnection">
            <summary>UnityEngine.Networking.NetworkConnection 的存根类型</summary>
        </member>
        <member name="M:UnityEngine.Networking.Fakes.StubNetworkConnection.#ctor">
            <summary>初始化新实例</summary>
        </member>
        <member name="P:UnityEngine.Networking.Fakes.StubNetworkConnection.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="M:UnityEngine.Networking.Fakes.StubNetworkConnection.Dispose(System.Boolean)">
            <summary>设置 NetworkConnection.Dispose(Boolean disposing) 的 存根</summary>
        </member>
        <member name="F:UnityEngine.Networking.Fakes.StubNetworkConnection.DisposeBoolean">
            <summary>设置 NetworkConnection.Dispose(Boolean disposing) 的 stub</summary>
        </member>
        <member name="M:UnityEngine.Networking.Fakes.StubNetworkConnection.GetStatsIn(System.Int32@,System.Int32@)">
            <summary>设置 NetworkConnection.GetStatsIn(Int32&amp; numMsgs, Int32&amp; numBytes) 的 存根</summary>
        </member>
        <member name="F:UnityEngine.Networking.Fakes.StubNetworkConnection.GetStatsInInt32OutInt32Out">
            <summary>设置 NetworkConnection.GetStatsIn(Int32&amp; numMsgs, Int32&amp; numBytes) 的 stub</summary>
        </member>
        <member name="M:UnityEngine.Networking.Fakes.StubNetworkConnection.GetStatsOut(System.Int32@,System.Int32@,System.Int32@,System.Int32@)">
            <summary>设置 NetworkConnection.GetStatsOut(Int32&amp; numMsgs, Int32&amp; numBufferedMsgs, Int32&amp; numBytes, Int32&amp; lastBufferedPerSecond) 的 存根</summary>
        </member>
        <member name="F:UnityEngine.Networking.Fakes.StubNetworkConnection.GetStatsOutInt32OutInt32OutInt32OutInt32Out">
            <summary>设置 NetworkConnection.GetStatsOut(Int32&amp; numMsgs, Int32&amp; numBufferedMsgs, Int32&amp; numBytes, Int32&amp; lastBufferedPerSecond) 的 stub</summary>
        </member>
        <member name="M:UnityEngine.Networking.Fakes.StubNetworkConnection.Initialize(System.String,System.Int32,System.Int32,UnityEngine.Networking.HostTopology)">
            <summary>设置 NetworkConnection.Initialize(String networkAddress, Int32 networkHostId, Int32 networkConnectionId, HostTopology hostTopology) 的 存根</summary>
        </member>
        <member name="F:UnityEngine.Networking.Fakes.StubNetworkConnection.InitializeStringInt32Int32HostTopology">
            <summary>设置 NetworkConnection.Initialize(String networkAddress, Int32 networkHostId, Int32 networkConnectionId, HostTopology hostTopology) 的 stub</summary>
        </member>
        <member name="M:UnityEngine.Networking.Fakes.StubNetworkConnection.InitializeStub">
            <summary>初始化 type StubNetworkConnection 的新实例</summary>
        </member>
        <member name="P:UnityEngine.Networking.Fakes.StubNetworkConnection.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:UnityEngine.Networking.Fakes.StubNetworkConnection.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="M:UnityEngine.Networking.Fakes.StubNetworkConnection.Send(System.Int16,UnityEngine.Networking.MessageBase)">
            <summary>设置 NetworkConnection.Send(Int16 msgType, MessageBase msg) 的 存根</summary>
        </member>
        <member name="M:UnityEngine.Networking.Fakes.StubNetworkConnection.SendByChannel(System.Int16,UnityEngine.Networking.MessageBase,System.Int32)">
            <summary>设置 NetworkConnection.SendByChannel(Int16 msgType, MessageBase msg, Int32 channelId) 的 存根</summary>
        </member>
        <member name="F:UnityEngine.Networking.Fakes.StubNetworkConnection.SendByChannelInt16MessageBaseInt32">
            <summary>设置 NetworkConnection.SendByChannel(Int16 msgType, MessageBase msg, Int32 channelId) 的 stub</summary>
        </member>
        <member name="M:UnityEngine.Networking.Fakes.StubNetworkConnection.SendBytes(System.Byte[],System.Int32,System.Int32)">
            <summary>设置 NetworkConnection.SendBytes(Byte[] bytes, Int32 numBytes, Int32 channelId) 的 存根</summary>
        </member>
        <member name="F:UnityEngine.Networking.Fakes.StubNetworkConnection.SendBytesByteArrayInt32Int32">
            <summary>设置 NetworkConnection.SendBytes(Byte[] bytes, Int32 numBytes, Int32 channelId) 的 stub</summary>
        </member>
        <member name="F:UnityEngine.Networking.Fakes.StubNetworkConnection.SendInt16MessageBase">
            <summary>设置 NetworkConnection.Send(Int16 msgType, MessageBase msg) 的 stub</summary>
        </member>
        <member name="M:UnityEngine.Networking.Fakes.StubNetworkConnection.SendUnreliable(System.Int16,UnityEngine.Networking.MessageBase)">
            <summary>设置 NetworkConnection.SendUnreliable(Int16 msgType, MessageBase msg) 的 存根</summary>
        </member>
        <member name="F:UnityEngine.Networking.Fakes.StubNetworkConnection.SendUnreliableInt16MessageBase">
            <summary>设置 NetworkConnection.SendUnreliable(Int16 msgType, MessageBase msg) 的 stub</summary>
        </member>
        <member name="M:UnityEngine.Networking.Fakes.StubNetworkConnection.SendWriter(UnityEngine.Networking.NetworkWriter,System.Int32)">
            <summary>设置 NetworkConnection.SendWriter(NetworkWriter writer, Int32 channelId) 的 存根</summary>
        </member>
        <member name="F:UnityEngine.Networking.Fakes.StubNetworkConnection.SendWriterNetworkWriterInt32">
            <summary>设置 NetworkConnection.SendWriter(NetworkWriter writer, Int32 channelId) 的 stub</summary>
        </member>
        <member name="M:UnityEngine.Networking.Fakes.StubNetworkConnection.ToString">
            <summary>设置 NetworkConnection.ToString() 的 存根</summary>
        </member>
        <member name="F:UnityEngine.Networking.Fakes.StubNetworkConnection.ToString01">
            <summary>设置 NetworkConnection.ToString() 的 stub</summary>
        </member>
        <member name="M:UnityEngine.Networking.Fakes.StubNetworkConnection.TransportRecieve(System.Byte[],System.Int32,System.Int32)">
            <summary>设置 NetworkConnection.TransportRecieve(Byte[] bytes, Int32 numBytes, Int32 channelId) 的 存根</summary>
        </member>
        <member name="F:UnityEngine.Networking.Fakes.StubNetworkConnection.TransportRecieveByteArrayInt32Int32">
            <summary>设置 NetworkConnection.TransportRecieve(Byte[] bytes, Int32 numBytes, Int32 channelId) 的 stub</summary>
        </member>
        <member name="M:UnityEngine.Networking.Fakes.StubNetworkConnection.TransportSend(System.Byte[],System.Int32,System.Int32,System.Byte@)">
            <summary>设置 NetworkConnection.TransportSend(Byte[] bytes, Int32 numBytes, Int32 channelId, Byte&amp; error) 的 存根</summary>
        </member>
        <member name="F:UnityEngine.Networking.Fakes.StubNetworkConnection.TransportSendByteArrayInt32Int32ByteOut">
            <summary>设置 NetworkConnection.TransportSend(Byte[] bytes, Int32 numBytes, Int32 channelId, Byte&amp; error) 的 stub</summary>
        </member>
        <member name="T:UnityEngine.Networking.Fakes.StubNetworkDiscovery">
            <summary>UnityEngine.Networking.NetworkDiscovery 的存根类型</summary>
        </member>
        <member name="M:UnityEngine.Networking.Fakes.StubNetworkDiscovery.#ctor">
            <summary>初始化新实例</summary>
        </member>
        <member name="P:UnityEngine.Networking.Fakes.StubNetworkDiscovery.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="M:UnityEngine.Networking.Fakes.StubNetworkDiscovery.Equals(System.Object)">
            <summary>设置 Object.Equals(Object o) 的 存根</summary>
        </member>
        <member name="F:UnityEngine.Networking.Fakes.StubNetworkDiscovery.EqualsObject">
            <summary>设置 Object.Equals(Object o) 的 stub</summary>
        </member>
        <member name="M:UnityEngine.Networking.Fakes.StubNetworkDiscovery.GetHashCode">
            <summary>设置 Object.GetHashCode() 的 存根</summary>
        </member>
        <member name="F:UnityEngine.Networking.Fakes.StubNetworkDiscovery.GetHashCode01">
            <summary>设置 Object.GetHashCode() 的 stub</summary>
        </member>
        <member name="M:UnityEngine.Networking.Fakes.StubNetworkDiscovery.InitializeStub">
            <summary>初始化 type StubNetworkDiscovery 的新实例</summary>
        </member>
        <member name="P:UnityEngine.Networking.Fakes.StubNetworkDiscovery.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:UnityEngine.Networking.Fakes.StubNetworkDiscovery.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="M:UnityEngine.Networking.Fakes.StubNetworkDiscovery.OnReceivedBroadcast(System.String,System.String)">
            <summary>设置 NetworkDiscovery.OnReceivedBroadcast(String fromAddress, String data) 的 存根</summary>
        </member>
        <member name="F:UnityEngine.Networking.Fakes.StubNetworkDiscovery.OnReceivedBroadcastStringString">
            <summary>设置 NetworkDiscovery.OnReceivedBroadcast(String fromAddress, String data) 的 stub</summary>
        </member>
        <member name="M:UnityEngine.Networking.Fakes.StubNetworkDiscovery.ToString">
            <summary>设置 Object.ToString() 的 存根</summary>
        </member>
        <member name="F:UnityEngine.Networking.Fakes.StubNetworkDiscovery.ToString01">
            <summary>设置 Object.ToString() 的 stub</summary>
        </member>
        <member name="T:UnityEngine.Networking.Fakes.StubNetworkLobbyManager">
            <summary>UnityEngine.Networking.NetworkLobbyManager 的存根类型</summary>
        </member>
        <member name="M:UnityEngine.Networking.Fakes.StubNetworkLobbyManager.#ctor">
            <summary>初始化新实例</summary>
        </member>
        <member name="P:UnityEngine.Networking.Fakes.StubNetworkLobbyManager.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="M:UnityEngine.Networking.Fakes.StubNetworkLobbyManager.Equals(System.Object)">
            <summary>设置 Object.Equals(Object o) 的 存根</summary>
        </member>
        <member name="F:UnityEngine.Networking.Fakes.StubNetworkLobbyManager.EqualsObject">
            <summary>设置 Object.Equals(Object o) 的 stub</summary>
        </member>
        <member name="M:UnityEngine.Networking.Fakes.StubNetworkLobbyManager.GetHashCode">
            <summary>设置 Object.GetHashCode() 的 存根</summary>
        </member>
        <member name="F:UnityEngine.Networking.Fakes.StubNetworkLobbyManager.GetHashCode01">
            <summary>设置 Object.GetHashCode() 的 stub</summary>
        </member>
        <member name="M:UnityEngine.Networking.Fakes.StubNetworkLobbyManager.InitializeStub">
            <summary>初始化 type StubNetworkLobbyManager 的新实例</summary>
        </member>
        <member name="P:UnityEngine.Networking.Fakes.StubNetworkLobbyManager.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:UnityEngine.Networking.Fakes.StubNetworkLobbyManager.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="M:UnityEngine.Networking.Fakes.StubNetworkLobbyManager.OnClientConnect(UnityEngine.Networking.NetworkConnection)">
            <summary>设置 NetworkLobbyManager.OnClientConnect(NetworkConnection conn) 的 存根</summary>
        </member>
        <member name="F:UnityEngine.Networking.Fakes.StubNetworkLobbyManager.OnClientConnectNetworkConnection">
            <summary>设置 NetworkLobbyManager.OnClientConnect(NetworkConnection conn) 的 stub</summary>
        </member>
        <member name="M:UnityEngine.Networking.Fakes.StubNetworkLobbyManager.OnClientDisconnect(UnityEngine.Networking.NetworkConnection)">
            <summary>设置 NetworkLobbyManager.OnClientDisconnect(NetworkConnection conn) 的 存根</summary>
        </member>
        <member name="F:UnityEngine.Networking.Fakes.StubNetworkLobbyManager.OnClientDisconnectNetworkConnection">
            <summary>设置 NetworkLobbyManager.OnClientDisconnect(NetworkConnection conn) 的 stub</summary>
        </member>
        <member name="M:UnityEngine.Networking.Fakes.StubNetworkLobbyManager.OnClientError(UnityEngine.Networking.NetworkConnection,System.Int32)">
            <summary>设置 NetworkManager.OnClientError(NetworkConnection conn, Int32 errorCode) 的 存根</summary>
        </member>
        <member name="F:UnityEngine.Networking.Fakes.StubNetworkLobbyManager.OnClientErrorNetworkConnectionInt32">
            <summary>设置 NetworkManager.OnClientError(NetworkConnection conn, Int32 errorCode) 的 stub</summary>
        </member>
        <member name="M:UnityEngine.Networking.Fakes.StubNetworkLobbyManager.OnClientNotReady(UnityEngine.Networking.NetworkConnection)">
            <summary>设置 NetworkManager.OnClientNotReady(NetworkConnection conn) 的 存根</summary>
        </member>
        <member name="F:UnityEngine.Networking.Fakes.StubNetworkLobbyManager.OnClientNotReadyNetworkConnection">
            <summary>设置 NetworkManager.OnClientNotReady(NetworkConnection conn) 的 stub</summary>
        </member>
        <member name="M:UnityEngine.Networking.Fakes.StubNetworkLobbyManager.OnClientSceneChanged(UnityEngine.Networking.NetworkConnection)">
            <summary>设置 NetworkLobbyManager.OnClientSceneChanged(NetworkConnection conn) 的 存根</summary>
        </member>
        <member name="F:UnityEngine.Networking.Fakes.StubNetworkLobbyManager.OnClientSceneChangedNetworkConnection">
            <summary>设置 NetworkLobbyManager.OnClientSceneChanged(NetworkConnection conn) 的 stub</summary>
        </member>
        <member name="M:UnityEngine.Networking.Fakes.StubNetworkLobbyManager.OnLobbyClientAddPlayerFailed">
            <summary>设置 NetworkLobbyManager.OnLobbyClientAddPlayerFailed() 的 存根</summary>
        </member>
        <member name="F:UnityEngine.Networking.Fakes.StubNetworkLobbyManager.OnLobbyClientAddPlayerFailed01">
            <summary>设置 NetworkLobbyManager.OnLobbyClientAddPlayerFailed() 的 stub</summary>
        </member>
        <member name="M:UnityEngine.Networking.Fakes.StubNetworkLobbyManager.OnLobbyClientConnect(UnityEngine.Networking.NetworkConnection)">
            <summary>设置 NetworkLobbyManager.OnLobbyClientConnect(NetworkConnection conn) 的 存根</summary>
        </member>
        <member name="F:UnityEngine.Networking.Fakes.StubNetworkLobbyManager.OnLobbyClientConnectNetworkConnection">
            <summary>设置 NetworkLobbyManager.OnLobbyClientConnect(NetworkConnection conn) 的 stub</summary>
        </member>
        <member name="M:UnityEngine.Networking.Fakes.StubNetworkLobbyManager.OnLobbyClientDisconnect(UnityEngine.Networking.NetworkConnection)">
            <summary>设置 NetworkLobbyManager.OnLobbyClientDisconnect(NetworkConnection conn) 的 存根</summary>
        </member>
        <member name="F:UnityEngine.Networking.Fakes.StubNetworkLobbyManager.OnLobbyClientDisconnectNetworkConnection">
            <summary>设置 NetworkLobbyManager.OnLobbyClientDisconnect(NetworkConnection conn) 的 stub</summary>
        </member>
        <member name="M:UnityEngine.Networking.Fakes.StubNetworkLobbyManager.OnLobbyClientEnter">
            <summary>设置 NetworkLobbyManager.OnLobbyClientEnter() 的 存根</summary>
        </member>
        <member name="F:UnityEngine.Networking.Fakes.StubNetworkLobbyManager.OnLobbyClientEnter01">
            <summary>设置 NetworkLobbyManager.OnLobbyClientEnter() 的 stub</summary>
        </member>
        <member name="M:UnityEngine.Networking.Fakes.StubNetworkLobbyManager.OnLobbyClientExit">
            <summary>设置 NetworkLobbyManager.OnLobbyClientExit() 的 存根</summary>
        </member>
        <member name="F:UnityEngine.Networking.Fakes.StubNetworkLobbyManager.OnLobbyClientExit01">
            <summary>设置 NetworkLobbyManager.OnLobbyClientExit() 的 stub</summary>
        </member>
        <member name="M:UnityEngine.Networking.Fakes.StubNetworkLobbyManager.OnLobbyClientSceneChanged(UnityEngine.Networking.NetworkConnection)">
            <summary>设置 NetworkLobbyManager.OnLobbyClientSceneChanged(NetworkConnection conn) 的 存根</summary>
        </member>
        <member name="F:UnityEngine.Networking.Fakes.StubNetworkLobbyManager.OnLobbyClientSceneChangedNetworkConnection">
            <summary>设置 NetworkLobbyManager.OnLobbyClientSceneChanged(NetworkConnection conn) 的 stub</summary>
        </member>
        <member name="M:UnityEngine.Networking.Fakes.StubNetworkLobbyManager.OnLobbyServerConnect(UnityEngine.Networking.NetworkConnection)">
            <summary>设置 NetworkLobbyManager.OnLobbyServerConnect(NetworkConnection conn) 的 存根</summary>
        </member>
        <member name="F:UnityEngine.Networking.Fakes.StubNetworkLobbyManager.OnLobbyServerConnectNetworkConnection">
            <summary>设置 NetworkLobbyManager.OnLobbyServerConnect(NetworkConnection conn) 的 stub</summary>
        </member>
        <member name="M:UnityEngine.Networking.Fakes.StubNetworkLobbyManager.OnLobbyServerCreateGamePlayer(UnityEngine.Networking.NetworkConnection,System.Int16)">
            <summary>设置 NetworkLobbyManager.OnLobbyServerCreateGamePlayer(NetworkConnection conn, Int16 playerControllerId) 的 存根</summary>
        </member>
        <member name="F:UnityEngine.Networking.Fakes.StubNetworkLobbyManager.OnLobbyServerCreateGamePlayerNetworkConnectionInt16">
            <summary>设置 NetworkLobbyManager.OnLobbyServerCreateGamePlayer(NetworkConnection conn, Int16 playerControllerId) 的 stub</summary>
        </member>
        <member name="M:UnityEngine.Networking.Fakes.StubNetworkLobbyManager.OnLobbyServerCreateLobbyPlayer(UnityEngine.Networking.NetworkConnection,System.Int16)">
            <summary>设置 NetworkLobbyManager.OnLobbyServerCreateLobbyPlayer(NetworkConnection conn, Int16 playerControllerId) 的 存根</summary>
        </member>
        <member name="F:UnityEngine.Networking.Fakes.StubNetworkLobbyManager.OnLobbyServerCreateLobbyPlayerNetworkConnectionInt16">
            <summary>设置 NetworkLobbyManager.OnLobbyServerCreateLobbyPlayer(NetworkConnection conn, Int16 playerControllerId) 的 stub</summary>
        </member>
        <member name="M:UnityEngine.Networking.Fakes.StubNetworkLobbyManager.OnLobbyServerDisconnect(UnityEngine.Networking.NetworkConnection)">
            <summary>设置 NetworkLobbyManager.OnLobbyServerDisconnect(NetworkConnection conn) 的 存根</summary>
        </member>
        <member name="F:UnityEngine.Networking.Fakes.StubNetworkLobbyManager.OnLobbyServerDisconnectNetworkConnection">
            <summary>设置 NetworkLobbyManager.OnLobbyServerDisconnect(NetworkConnection conn) 的 stub</summary>
        </member>
        <member name="M:UnityEngine.Networking.Fakes.StubNetworkLobbyManager.OnLobbyServerPlayerRemoved(UnityEngine.Networking.NetworkConnection,System.Int16)">
            <summary>设置 NetworkLobbyManager.OnLobbyServerPlayerRemoved(NetworkConnection conn, Int16 playerControllerId) 的 存根</summary>
        </member>
        <member name="F:UnityEngine.Networking.Fakes.StubNetworkLobbyManager.OnLobbyServerPlayerRemovedNetworkConnectionInt16">
            <summary>设置 NetworkLobbyManager.OnLobbyServerPlayerRemoved(NetworkConnection conn, Int16 playerControllerId) 的 stub</summary>
        </member>
        <member name="M:UnityEngine.Networking.Fakes.StubNetworkLobbyManager.OnLobbyServerPlayersReady">
            <summary>设置 NetworkLobbyManager.OnLobbyServerPlayersReady() 的 存根</summary>
        </member>
        <member name="F:UnityEngine.Networking.Fakes.StubNetworkLobbyManager.OnLobbyServerPlayersReady01">
            <summary>设置 NetworkLobbyManager.OnLobbyServerPlayersReady() 的 stub</summary>
        </member>
        <member name="M:UnityEngine.Networking.Fakes.StubNetworkLobbyManager.OnLobbyServerSceneChanged(System.String)">
            <summary>设置 NetworkLobbyManager.OnLobbyServerSceneChanged(String sceneName) 的 存根</summary>
        </member>
        <member name="F:UnityEngine.Networking.Fakes.StubNetworkLobbyManager.OnLobbyServerSceneChangedString">
            <summary>设置 NetworkLobbyManager.OnLobbyServerSceneChanged(String sceneName) 的 stub</summary>
        </member>
        <member name="M:UnityEngine.Networking.Fakes.StubNetworkLobbyManager.OnLobbyServerSceneLoadedForPlayer(UnityEngine.GameObject,UnityEngine.GameObject)">
            <summary>设置 NetworkLobbyManager.OnLobbyServerSceneLoadedForPlayer(GameObject lobbyPlayer, GameObject gamePlayer) 的 存根</summary>
        </member>
        <member name="F:UnityEngine.Networking.Fakes.StubNetworkLobbyManager.OnLobbyServerSceneLoadedForPlayerGameObjectGameObject">
            <summary>设置 NetworkLobbyManager.OnLobbyServerSceneLoadedForPlayer(GameObject lobbyPlayer, GameObject gamePlayer) 的 stub</summary>
        </member>
        <member name="M:UnityEngine.Networking.Fakes.StubNetworkLobbyManager.OnLobbyStartClient(UnityEngine.Networking.NetworkClient)">
            <summary>设置 NetworkLobbyManager.OnLobbyStartClient(NetworkClient lobbyClient) 的 存根</summary>
        </member>
        <member name="F:UnityEngine.Networking.Fakes.StubNetworkLobbyManager.OnLobbyStartClientNetworkClient">
            <summary>设置 NetworkLobbyManager.OnLobbyStartClient(NetworkClient lobbyClient) 的 stub</summary>
        </member>
        <member name="M:UnityEngine.Networking.Fakes.StubNetworkLobbyManager.OnLobbyStartHost">
            <summary>设置 NetworkLobbyManager.OnLobbyStartHost() 的 存根</summary>
        </member>
        <member name="F:UnityEngine.Networking.Fakes.StubNetworkLobbyManager.OnLobbyStartHost01">
            <summary>设置 NetworkLobbyManager.OnLobbyStartHost() 的 stub</summary>
        </member>
        <member name="M:UnityEngine.Networking.Fakes.StubNetworkLobbyManager.OnLobbyStartServer">
            <summary>设置 NetworkLobbyManager.OnLobbyStartServer() 的 存根</summary>
        </member>
        <member name="F:UnityEngine.Networking.Fakes.StubNetworkLobbyManager.OnLobbyStartServer01">
            <summary>设置 NetworkLobbyManager.OnLobbyStartServer() 的 stub</summary>
        </member>
        <member name="M:UnityEngine.Networking.Fakes.StubNetworkLobbyManager.OnLobbyStopClient">
            <summary>设置 NetworkLobbyManager.OnLobbyStopClient() 的 存根</summary>
        </member>
        <member name="F:UnityEngine.Networking.Fakes.StubNetworkLobbyManager.OnLobbyStopClient01">
            <summary>设置 NetworkLobbyManager.OnLobbyStopClient() 的 stub</summary>
        </member>
        <member name="M:UnityEngine.Networking.Fakes.StubNetworkLobbyManager.OnLobbyStopHost">
            <summary>设置 NetworkLobbyManager.OnLobbyStopHost() 的 存根</summary>
        </member>
        <member name="F:UnityEngine.Networking.Fakes.StubNetworkLobbyManager.OnLobbyStopHost01">
            <summary>设置 NetworkLobbyManager.OnLobbyStopHost() 的 stub</summary>
        </member>
        <member name="M:UnityEngine.Networking.Fakes.StubNetworkLobbyManager.OnMatchCreate(UnityEngine.Networking.Match.CreateMatchResponse)">
            <summary>设置 NetworkManager.OnMatchCreate(CreateMatchResponse matchInfo) 的 存根</summary>
        </member>
        <member name="F:UnityEngine.Networking.Fakes.StubNetworkLobbyManager.OnMatchCreateCreateMatchResponse">
            <summary>设置 NetworkManager.OnMatchCreate(CreateMatchResponse matchInfo) 的 stub</summary>
        </member>
        <member name="M:UnityEngine.Networking.Fakes.StubNetworkLobbyManager.OnMatchList(UnityEngine.Networking.Match.ListMatchResponse)">
            <summary>设置 NetworkManager.OnMatchList(ListMatchResponse matchList) 的 存根</summary>
        </member>
        <member name="F:UnityEngine.Networking.Fakes.StubNetworkLobbyManager.OnMatchListListMatchResponse">
            <summary>设置 NetworkManager.OnMatchList(ListMatchResponse matchList) 的 stub</summary>
        </member>
        <member name="M:UnityEngine.Networking.Fakes.StubNetworkLobbyManager.OnServerAddPlayer(UnityEngine.Networking.NetworkConnection,System.Int16)">
            <summary>设置 NetworkLobbyManager.OnServerAddPlayer(NetworkConnection conn, Int16 playerControllerId) 的 存根</summary>
        </member>
        <member name="M:UnityEngine.Networking.Fakes.StubNetworkLobbyManager.OnServerAddPlayer(UnityEngine.Networking.NetworkConnection,System.Int16,UnityEngine.Networking.NetworkReader)">
            <summary>设置 NetworkManager.OnServerAddPlayer(NetworkConnection conn, Int16 playerControllerId, NetworkReader extraMessageReader) 的 存根</summary>
        </member>
        <member name="F:UnityEngine.Networking.Fakes.StubNetworkLobbyManager.OnServerAddPlayerNetworkConnectionInt16">
            <summary>设置 NetworkLobbyManager.OnServerAddPlayer(NetworkConnection conn, Int16 playerControllerId) 的 stub</summary>
        </member>
        <member name="F:UnityEngine.Networking.Fakes.StubNetworkLobbyManager.OnServerAddPlayerNetworkConnectionInt16NetworkReader">
            <summary>设置 NetworkManager.OnServerAddPlayer(NetworkConnection conn, Int16 playerControllerId, NetworkReader extraMessageReader) 的 stub</summary>
        </member>
        <member name="M:UnityEngine.Networking.Fakes.StubNetworkLobbyManager.OnServerConnect(UnityEngine.Networking.NetworkConnection)">
            <summary>设置 NetworkLobbyManager.OnServerConnect(NetworkConnection conn) 的 存根</summary>
        </member>
        <member name="F:UnityEngine.Networking.Fakes.StubNetworkLobbyManager.OnServerConnectNetworkConnection">
            <summary>设置 NetworkLobbyManager.OnServerConnect(NetworkConnection conn) 的 stub</summary>
        </member>
        <member name="M:UnityEngine.Networking.Fakes.StubNetworkLobbyManager.OnServerDisconnect(UnityEngine.Networking.NetworkConnection)">
            <summary>设置 NetworkLobbyManager.OnServerDisconnect(NetworkConnection conn) 的 存根</summary>
        </member>
        <member name="F:UnityEngine.Networking.Fakes.StubNetworkLobbyManager.OnServerDisconnectNetworkConnection">
            <summary>设置 NetworkLobbyManager.OnServerDisconnect(NetworkConnection conn) 的 stub</summary>
        </member>
        <member name="M:UnityEngine.Networking.Fakes.StubNetworkLobbyManager.OnServerError(UnityEngine.Networking.NetworkConnection,System.Int32)">
            <summary>设置 NetworkManager.OnServerError(NetworkConnection conn, Int32 errorCode) 的 存根</summary>
        </member>
        <member name="F:UnityEngine.Networking.Fakes.StubNetworkLobbyManager.OnServerErrorNetworkConnectionInt32">
            <summary>设置 NetworkManager.OnServerError(NetworkConnection conn, Int32 errorCode) 的 stub</summary>
        </member>
        <member name="M:UnityEngine.Networking.Fakes.StubNetworkLobbyManager.OnServerReady(UnityEngine.Networking.NetworkConnection)">
            <summary>设置 NetworkManager.OnServerReady(NetworkConnection conn) 的 存根</summary>
        </member>
        <member name="F:UnityEngine.Networking.Fakes.StubNetworkLobbyManager.OnServerReadyNetworkConnection">
            <summary>设置 NetworkManager.OnServerReady(NetworkConnection conn) 的 stub</summary>
        </member>
        <member name="M:UnityEngine.Networking.Fakes.StubNetworkLobbyManager.OnServerRemovePlayer(UnityEngine.Networking.NetworkConnection,UnityEngine.Networking.PlayerController)">
            <summary>设置 NetworkLobbyManager.OnServerRemovePlayer(NetworkConnection conn, PlayerController player) 的 存根</summary>
        </member>
        <member name="F:UnityEngine.Networking.Fakes.StubNetworkLobbyManager.OnServerRemovePlayerNetworkConnectionPlayerController">
            <summary>设置 NetworkLobbyManager.OnServerRemovePlayer(NetworkConnection conn, PlayerController player) 的 stub</summary>
        </member>
        <member name="M:UnityEngine.Networking.Fakes.StubNetworkLobbyManager.OnServerSceneChanged(System.String)">
            <summary>设置 NetworkLobbyManager.OnServerSceneChanged(String sceneName) 的 存根</summary>
        </member>
        <member name="F:UnityEngine.Networking.Fakes.StubNetworkLobbyManager.OnServerSceneChangedString">
            <summary>设置 NetworkLobbyManager.OnServerSceneChanged(String sceneName) 的 stub</summary>
        </member>
        <member name="M:UnityEngine.Networking.Fakes.StubNetworkLobbyManager.OnStartClient(UnityEngine.Networking.NetworkClient)">
            <summary>设置 NetworkLobbyManager.OnStartClient(NetworkClient lobbyClient) 的 存根</summary>
        </member>
        <member name="F:UnityEngine.Networking.Fakes.StubNetworkLobbyManager.OnStartClientNetworkClient">
            <summary>设置 NetworkLobbyManager.OnStartClient(NetworkClient lobbyClient) 的 stub</summary>
        </member>
        <member name="M:UnityEngine.Networking.Fakes.StubNetworkLobbyManager.OnStartHost">
            <summary>设置 NetworkLobbyManager.OnStartHost() 的 存根</summary>
        </member>
        <member name="F:UnityEngine.Networking.Fakes.StubNetworkLobbyManager.OnStartHost01">
            <summary>设置 NetworkLobbyManager.OnStartHost() 的 stub</summary>
        </member>
        <member name="M:UnityEngine.Networking.Fakes.StubNetworkLobbyManager.OnStartServer">
            <summary>设置 NetworkLobbyManager.OnStartServer() 的 存根</summary>
        </member>
        <member name="F:UnityEngine.Networking.Fakes.StubNetworkLobbyManager.OnStartServer01">
            <summary>设置 NetworkLobbyManager.OnStartServer() 的 stub</summary>
        </member>
        <member name="M:UnityEngine.Networking.Fakes.StubNetworkLobbyManager.OnStopClient">
            <summary>设置 NetworkLobbyManager.OnStopClient() 的 存根</summary>
        </member>
        <member name="F:UnityEngine.Networking.Fakes.StubNetworkLobbyManager.OnStopClient01">
            <summary>设置 NetworkLobbyManager.OnStopClient() 的 stub</summary>
        </member>
        <member name="M:UnityEngine.Networking.Fakes.StubNetworkLobbyManager.OnStopHost">
            <summary>设置 NetworkLobbyManager.OnStopHost() 的 存根</summary>
        </member>
        <member name="F:UnityEngine.Networking.Fakes.StubNetworkLobbyManager.OnStopHost01">
            <summary>设置 NetworkLobbyManager.OnStopHost() 的 stub</summary>
        </member>
        <member name="M:UnityEngine.Networking.Fakes.StubNetworkLobbyManager.OnStopServer">
            <summary>设置 NetworkManager.OnStopServer() 的 存根</summary>
        </member>
        <member name="F:UnityEngine.Networking.Fakes.StubNetworkLobbyManager.OnStopServer01">
            <summary>设置 NetworkManager.OnStopServer() 的 stub</summary>
        </member>
        <member name="M:UnityEngine.Networking.Fakes.StubNetworkLobbyManager.ServerChangeScene(System.String)">
            <summary>设置 NetworkLobbyManager.ServerChangeScene(String sceneName) 的 存根</summary>
        </member>
        <member name="F:UnityEngine.Networking.Fakes.StubNetworkLobbyManager.ServerChangeSceneString">
            <summary>设置 NetworkLobbyManager.ServerChangeScene(String sceneName) 的 stub</summary>
        </member>
        <member name="M:UnityEngine.Networking.Fakes.StubNetworkLobbyManager.StartHost">
            <summary>设置 NetworkManager.StartHost() 的 存根</summary>
        </member>
        <member name="M:UnityEngine.Networking.Fakes.StubNetworkLobbyManager.StartHost(UnityEngine.Networking.Match.MatchInfo)">
            <summary>设置 NetworkManager.StartHost(MatchInfo info) 的 存根</summary>
        </member>
        <member name="M:UnityEngine.Networking.Fakes.StubNetworkLobbyManager.StartHost(UnityEngine.Networking.ConnectionConfig,System.Int32)">
            <summary>设置 NetworkManager.StartHost(ConnectionConfig config, Int32 maxConnections) 的 存根</summary>
        </member>
        <member name="F:UnityEngine.Networking.Fakes.StubNetworkLobbyManager.StartHost01">
            <summary>设置 NetworkManager.StartHost() 的 stub</summary>
        </member>
        <member name="F:UnityEngine.Networking.Fakes.StubNetworkLobbyManager.StartHostConnectionConfigInt32">
            <summary>设置 NetworkManager.StartHost(ConnectionConfig config, Int32 maxConnections) 的 stub</summary>
        </member>
        <member name="F:UnityEngine.Networking.Fakes.StubNetworkLobbyManager.StartHostMatchInfo">
            <summary>设置 NetworkManager.StartHost(MatchInfo info) 的 stub</summary>
        </member>
        <member name="M:UnityEngine.Networking.Fakes.StubNetworkLobbyManager.ToString">
            <summary>设置 Object.ToString() 的 存根</summary>
        </member>
        <member name="F:UnityEngine.Networking.Fakes.StubNetworkLobbyManager.ToString01">
            <summary>设置 Object.ToString() 的 stub</summary>
        </member>
        <member name="T:UnityEngine.Networking.Fakes.StubNetworkLobbyPlayer">
            <summary>UnityEngine.Networking.NetworkLobbyPlayer 的存根类型</summary>
        </member>
        <member name="M:UnityEngine.Networking.Fakes.StubNetworkLobbyPlayer.#ctor">
            <summary>初始化新实例</summary>
        </member>
        <member name="P:UnityEngine.Networking.Fakes.StubNetworkLobbyPlayer.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="M:UnityEngine.Networking.Fakes.StubNetworkLobbyPlayer.Equals(System.Object)">
            <summary>设置 Object.Equals(Object o) 的 存根</summary>
        </member>
        <member name="F:UnityEngine.Networking.Fakes.StubNetworkLobbyPlayer.EqualsObject">
            <summary>设置 Object.Equals(Object o) 的 stub</summary>
        </member>
        <member name="M:UnityEngine.Networking.Fakes.StubNetworkLobbyPlayer.GetHashCode">
            <summary>设置 Object.GetHashCode() 的 存根</summary>
        </member>
        <member name="F:UnityEngine.Networking.Fakes.StubNetworkLobbyPlayer.GetHashCode01">
            <summary>设置 Object.GetHashCode() 的 stub</summary>
        </member>
        <member name="M:UnityEngine.Networking.Fakes.StubNetworkLobbyPlayer.GetNetworkChannel">
            <summary>设置 NetworkBehaviour.GetNetworkChannel() 的 存根</summary>
        </member>
        <member name="F:UnityEngine.Networking.Fakes.StubNetworkLobbyPlayer.GetNetworkChannel01">
            <summary>设置 NetworkBehaviour.GetNetworkChannel() 的 stub</summary>
        </member>
        <member name="M:UnityEngine.Networking.Fakes.StubNetworkLobbyPlayer.GetNetworkSendInterval">
            <summary>设置 NetworkBehaviour.GetNetworkSendInterval() 的 存根</summary>
        </member>
        <member name="F:UnityEngine.Networking.Fakes.StubNetworkLobbyPlayer.GetNetworkSendInterval01">
            <summary>设置 NetworkBehaviour.GetNetworkSendInterval() 的 stub</summary>
        </member>
        <member name="M:UnityEngine.Networking.Fakes.StubNetworkLobbyPlayer.InitializeStub">
            <summary>初始化 type StubNetworkLobbyPlayer 的新实例</summary>
        </member>
        <member name="P:UnityEngine.Networking.Fakes.StubNetworkLobbyPlayer.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:UnityEngine.Networking.Fakes.StubNetworkLobbyPlayer.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="M:UnityEngine.Networking.Fakes.StubNetworkLobbyPlayer.InvokeCommand(System.Int32,UnityEngine.Networking.NetworkReader)">
            <summary>设置 NetworkBehaviour.InvokeCommand(Int32 cmdHash, NetworkReader reader) 的 存根</summary>
        </member>
        <member name="F:UnityEngine.Networking.Fakes.StubNetworkLobbyPlayer.InvokeCommandInt32NetworkReader">
            <summary>设置 NetworkBehaviour.InvokeCommand(Int32 cmdHash, NetworkReader reader) 的 stub</summary>
        </member>
        <member name="M:UnityEngine.Networking.Fakes.StubNetworkLobbyPlayer.InvokeRPC(System.Int32,UnityEngine.Networking.NetworkReader)">
            <summary>设置 NetworkBehaviour.InvokeRPC(Int32 cmdHash, NetworkReader reader) 的 存根</summary>
        </member>
        <member name="F:UnityEngine.Networking.Fakes.StubNetworkLobbyPlayer.InvokeRPCInt32NetworkReader">
            <summary>设置 NetworkBehaviour.InvokeRPC(Int32 cmdHash, NetworkReader reader) 的 stub</summary>
        </member>
        <member name="M:UnityEngine.Networking.Fakes.StubNetworkLobbyPlayer.InvokeSyncEvent(System.Int32,UnityEngine.Networking.NetworkReader)">
            <summary>设置 NetworkBehaviour.InvokeSyncEvent(Int32 cmdHash, NetworkReader reader) 的 存根</summary>
        </member>
        <member name="F:UnityEngine.Networking.Fakes.StubNetworkLobbyPlayer.InvokeSyncEventInt32NetworkReader">
            <summary>设置 NetworkBehaviour.InvokeSyncEvent(Int32 cmdHash, NetworkReader reader) 的 stub</summary>
        </member>
        <member name="M:UnityEngine.Networking.Fakes.StubNetworkLobbyPlayer.InvokeSyncList(System.Int32,UnityEngine.Networking.NetworkReader)">
            <summary>设置 NetworkBehaviour.InvokeSyncList(Int32 cmdHash, NetworkReader reader) 的 存根</summary>
        </member>
        <member name="F:UnityEngine.Networking.Fakes.StubNetworkLobbyPlayer.InvokeSyncListInt32NetworkReader">
            <summary>设置 NetworkBehaviour.InvokeSyncList(Int32 cmdHash, NetworkReader reader) 的 stub</summary>
        </member>
        <member name="M:UnityEngine.Networking.Fakes.StubNetworkLobbyPlayer.OnCheckObserver(UnityEngine.Networking.NetworkConnection)">
            <summary>设置 NetworkBehaviour.OnCheckObserver(NetworkConnection conn) 的 存根</summary>
        </member>
        <member name="F:UnityEngine.Networking.Fakes.StubNetworkLobbyPlayer.OnCheckObserverNetworkConnection">
            <summary>设置 NetworkBehaviour.OnCheckObserver(NetworkConnection conn) 的 stub</summary>
        </member>
        <member name="M:UnityEngine.Networking.Fakes.StubNetworkLobbyPlayer.OnClientEnterLobby">
            <summary>设置 NetworkLobbyPlayer.OnClientEnterLobby() 的 存根</summary>
        </member>
        <member name="F:UnityEngine.Networking.Fakes.StubNetworkLobbyPlayer.OnClientEnterLobby01">
            <summary>设置 NetworkLobbyPlayer.OnClientEnterLobby() 的 stub</summary>
        </member>
        <member name="M:UnityEngine.Networking.Fakes.StubNetworkLobbyPlayer.OnClientExitLobby">
            <summary>设置 NetworkLobbyPlayer.OnClientExitLobby() 的 存根</summary>
        </member>
        <member name="F:UnityEngine.Networking.Fakes.StubNetworkLobbyPlayer.OnClientExitLobby01">
            <summary>设置 NetworkLobbyPlayer.OnClientExitLobby() 的 stub</summary>
        </member>
        <member name="M:UnityEngine.Networking.Fakes.StubNetworkLobbyPlayer.OnClientReady(System.Boolean)">
            <summary>设置 NetworkLobbyPlayer.OnClientReady(Boolean readyState) 的 存根</summary>
        </member>
        <member name="F:UnityEngine.Networking.Fakes.StubNetworkLobbyPlayer.OnClientReadyBoolean">
            <summary>设置 NetworkLobbyPlayer.OnClientReady(Boolean readyState) 的 stub</summary>
        </member>
        <member name="M:UnityEngine.Networking.Fakes.StubNetworkLobbyPlayer.OnDeserialize(UnityEngine.Networking.NetworkReader,System.Boolean)">
            <summary>设置 NetworkLobbyPlayer.OnDeserialize(NetworkReader reader, Boolean initialState) 的 存根</summary>
        </member>
        <member name="F:UnityEngine.Networking.Fakes.StubNetworkLobbyPlayer.OnDeserializeNetworkReaderBoolean">
            <summary>设置 NetworkLobbyPlayer.OnDeserialize(NetworkReader reader, Boolean initialState) 的 stub</summary>
        </member>
        <member name="M:UnityEngine.Networking.Fakes.StubNetworkLobbyPlayer.OnNetworkDestroy">
            <summary>设置 NetworkBehaviour.OnNetworkDestroy() 的 存根</summary>
        </member>
        <member name="F:UnityEngine.Networking.Fakes.StubNetworkLobbyPlayer.OnNetworkDestroy01">
            <summary>设置 NetworkBehaviour.OnNetworkDestroy() 的 stub</summary>
        </member>
        <member name="M:UnityEngine.Networking.Fakes.StubNetworkLobbyPlayer.OnRebuildObservers(System.Collections.Generic.HashSet{UnityEngine.Networking.NetworkConnection},System.Boolean)">
            <summary>设置 NetworkBehaviour.OnRebuildObservers(HashSet`1&lt;NetworkConnection&gt; observers, Boolean initialize) 的 存根</summary>
        </member>
        <member name="F:UnityEngine.Networking.Fakes.StubNetworkLobbyPlayer.OnRebuildObserversHashSetOfNetworkConnectionBoolean">
            <summary>设置 NetworkBehaviour.OnRebuildObservers(HashSet`1&lt;NetworkConnection&gt; observers, Boolean initialize) 的 stub</summary>
        </member>
        <member name="M:UnityEngine.Networking.Fakes.StubNetworkLobbyPlayer.OnSerialize(UnityEngine.Networking.NetworkWriter,System.Boolean)">
            <summary>设置 NetworkLobbyPlayer.OnSerialize(NetworkWriter writer, Boolean initialState) 的 存根</summary>
        </member>
        <member name="F:UnityEngine.Networking.Fakes.StubNetworkLobbyPlayer.OnSerializeNetworkWriterBoolean">
            <summary>设置 NetworkLobbyPlayer.OnSerialize(NetworkWriter writer, Boolean initialState) 的 stub</summary>
        </member>
        <member name="M:UnityEngine.Networking.Fakes.StubNetworkLobbyPlayer.OnSetLocalVisibility(System.Boolean)">
            <summary>设置 NetworkBehaviour.OnSetLocalVisibility(Boolean vis) 的 存根</summary>
        </member>
        <member name="F:UnityEngine.Networking.Fakes.StubNetworkLobbyPlayer.OnSetLocalVisibilityBoolean">
            <summary>设置 NetworkBehaviour.OnSetLocalVisibility(Boolean vis) 的 stub</summary>
        </member>
        <member name="M:UnityEngine.Networking.Fakes.StubNetworkLobbyPlayer.OnStartAuthority">
            <summary>设置 NetworkBehaviour.OnStartAuthority() 的 存根</summary>
        </member>
        <member name="F:UnityEngine.Networking.Fakes.StubNetworkLobbyPlayer.OnStartAuthority01">
            <summary>设置 NetworkBehaviour.OnStartAuthority() 的 stub</summary>
        </member>
        <member name="M:UnityEngine.Networking.Fakes.StubNetworkLobbyPlayer.OnStartClient">
            <summary>设置 NetworkLobbyPlayer.OnStartClient() 的 存根</summary>
        </member>
        <member name="F:UnityEngine.Networking.Fakes.StubNetworkLobbyPlayer.OnStartClient01">
            <summary>设置 NetworkLobbyPlayer.OnStartClient() 的 stub</summary>
        </member>
        <member name="M:UnityEngine.Networking.Fakes.StubNetworkLobbyPlayer.OnStartLocalPlayer">
            <summary>设置 NetworkBehaviour.OnStartLocalPlayer() 的 存根</summary>
        </member>
        <member name="F:UnityEngine.Networking.Fakes.StubNetworkLobbyPlayer.OnStartLocalPlayer01">
            <summary>设置 NetworkBehaviour.OnStartLocalPlayer() 的 stub</summary>
        </member>
        <member name="M:UnityEngine.Networking.Fakes.StubNetworkLobbyPlayer.OnStartServer">
            <summary>设置 NetworkBehaviour.OnStartServer() 的 存根</summary>
        </member>
        <member name="F:UnityEngine.Networking.Fakes.StubNetworkLobbyPlayer.OnStartServer01">
            <summary>设置 NetworkBehaviour.OnStartServer() 的 stub</summary>
        </member>
        <member name="M:UnityEngine.Networking.Fakes.StubNetworkLobbyPlayer.OnStopAuthority">
            <summary>设置 NetworkBehaviour.OnStopAuthority() 的 存根</summary>
        </member>
        <member name="F:UnityEngine.Networking.Fakes.StubNetworkLobbyPlayer.OnStopAuthority01">
            <summary>设置 NetworkBehaviour.OnStopAuthority() 的 stub</summary>
        </member>
        <member name="M:UnityEngine.Networking.Fakes.StubNetworkLobbyPlayer.PreStartClient">
            <summary>设置 NetworkBehaviour.PreStartClient() 的 存根</summary>
        </member>
        <member name="F:UnityEngine.Networking.Fakes.StubNetworkLobbyPlayer.PreStartClient01">
            <summary>设置 NetworkBehaviour.PreStartClient() 的 stub</summary>
        </member>
        <member name="M:UnityEngine.Networking.Fakes.StubNetworkLobbyPlayer.ToString">
            <summary>设置 Object.ToString() 的 存根</summary>
        </member>
        <member name="F:UnityEngine.Networking.Fakes.StubNetworkLobbyPlayer.ToString01">
            <summary>设置 Object.ToString() 的 stub</summary>
        </member>
        <member name="T:UnityEngine.Networking.Fakes.StubNetworkManager">
            <summary>UnityEngine.Networking.NetworkManager 的存根类型</summary>
        </member>
        <member name="M:UnityEngine.Networking.Fakes.StubNetworkManager.#ctor">
            <summary>初始化新实例</summary>
        </member>
        <member name="P:UnityEngine.Networking.Fakes.StubNetworkManager.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="M:UnityEngine.Networking.Fakes.StubNetworkManager.Equals(System.Object)">
            <summary>设置 Object.Equals(Object o) 的 存根</summary>
        </member>
        <member name="F:UnityEngine.Networking.Fakes.StubNetworkManager.EqualsObject">
            <summary>设置 Object.Equals(Object o) 的 stub</summary>
        </member>
        <member name="M:UnityEngine.Networking.Fakes.StubNetworkManager.GetHashCode">
            <summary>设置 Object.GetHashCode() 的 存根</summary>
        </member>
        <member name="F:UnityEngine.Networking.Fakes.StubNetworkManager.GetHashCode01">
            <summary>设置 Object.GetHashCode() 的 stub</summary>
        </member>
        <member name="M:UnityEngine.Networking.Fakes.StubNetworkManager.InitializeStub">
            <summary>初始化 type StubNetworkManager 的新实例</summary>
        </member>
        <member name="P:UnityEngine.Networking.Fakes.StubNetworkManager.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:UnityEngine.Networking.Fakes.StubNetworkManager.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="M:UnityEngine.Networking.Fakes.StubNetworkManager.OnClientConnect(UnityEngine.Networking.NetworkConnection)">
            <summary>设置 NetworkManager.OnClientConnect(NetworkConnection conn) 的 存根</summary>
        </member>
        <member name="F:UnityEngine.Networking.Fakes.StubNetworkManager.OnClientConnectNetworkConnection">
            <summary>设置 NetworkManager.OnClientConnect(NetworkConnection conn) 的 stub</summary>
        </member>
        <member name="M:UnityEngine.Networking.Fakes.StubNetworkManager.OnClientDisconnect(UnityEngine.Networking.NetworkConnection)">
            <summary>设置 NetworkManager.OnClientDisconnect(NetworkConnection conn) 的 存根</summary>
        </member>
        <member name="F:UnityEngine.Networking.Fakes.StubNetworkManager.OnClientDisconnectNetworkConnection">
            <summary>设置 NetworkManager.OnClientDisconnect(NetworkConnection conn) 的 stub</summary>
        </member>
        <member name="M:UnityEngine.Networking.Fakes.StubNetworkManager.OnClientError(UnityEngine.Networking.NetworkConnection,System.Int32)">
            <summary>设置 NetworkManager.OnClientError(NetworkConnection conn, Int32 errorCode) 的 存根</summary>
        </member>
        <member name="F:UnityEngine.Networking.Fakes.StubNetworkManager.OnClientErrorNetworkConnectionInt32">
            <summary>设置 NetworkManager.OnClientError(NetworkConnection conn, Int32 errorCode) 的 stub</summary>
        </member>
        <member name="M:UnityEngine.Networking.Fakes.StubNetworkManager.OnClientNotReady(UnityEngine.Networking.NetworkConnection)">
            <summary>设置 NetworkManager.OnClientNotReady(NetworkConnection conn) 的 存根</summary>
        </member>
        <member name="F:UnityEngine.Networking.Fakes.StubNetworkManager.OnClientNotReadyNetworkConnection">
            <summary>设置 NetworkManager.OnClientNotReady(NetworkConnection conn) 的 stub</summary>
        </member>
        <member name="M:UnityEngine.Networking.Fakes.StubNetworkManager.OnClientSceneChanged(UnityEngine.Networking.NetworkConnection)">
            <summary>设置 NetworkManager.OnClientSceneChanged(NetworkConnection conn) 的 存根</summary>
        </member>
        <member name="F:UnityEngine.Networking.Fakes.StubNetworkManager.OnClientSceneChangedNetworkConnection">
            <summary>设置 NetworkManager.OnClientSceneChanged(NetworkConnection conn) 的 stub</summary>
        </member>
        <member name="M:UnityEngine.Networking.Fakes.StubNetworkManager.OnMatchCreate(UnityEngine.Networking.Match.CreateMatchResponse)">
            <summary>设置 NetworkManager.OnMatchCreate(CreateMatchResponse matchInfo) 的 存根</summary>
        </member>
        <member name="F:UnityEngine.Networking.Fakes.StubNetworkManager.OnMatchCreateCreateMatchResponse">
            <summary>设置 NetworkManager.OnMatchCreate(CreateMatchResponse matchInfo) 的 stub</summary>
        </member>
        <member name="M:UnityEngine.Networking.Fakes.StubNetworkManager.OnMatchList(UnityEngine.Networking.Match.ListMatchResponse)">
            <summary>设置 NetworkManager.OnMatchList(ListMatchResponse matchList) 的 存根</summary>
        </member>
        <member name="F:UnityEngine.Networking.Fakes.StubNetworkManager.OnMatchListListMatchResponse">
            <summary>设置 NetworkManager.OnMatchList(ListMatchResponse matchList) 的 stub</summary>
        </member>
        <member name="M:UnityEngine.Networking.Fakes.StubNetworkManager.OnServerAddPlayer(UnityEngine.Networking.NetworkConnection,System.Int16)">
            <summary>设置 NetworkManager.OnServerAddPlayer(NetworkConnection conn, Int16 playerControllerId) 的 存根</summary>
        </member>
        <member name="M:UnityEngine.Networking.Fakes.StubNetworkManager.OnServerAddPlayer(UnityEngine.Networking.NetworkConnection,System.Int16,UnityEngine.Networking.NetworkReader)">
            <summary>设置 NetworkManager.OnServerAddPlayer(NetworkConnection conn, Int16 playerControllerId, NetworkReader extraMessageReader) 的 存根</summary>
        </member>
        <member name="F:UnityEngine.Networking.Fakes.StubNetworkManager.OnServerAddPlayerNetworkConnectionInt16">
            <summary>设置 NetworkManager.OnServerAddPlayer(NetworkConnection conn, Int16 playerControllerId) 的 stub</summary>
        </member>
        <member name="F:UnityEngine.Networking.Fakes.StubNetworkManager.OnServerAddPlayerNetworkConnectionInt16NetworkReader">
            <summary>设置 NetworkManager.OnServerAddPlayer(NetworkConnection conn, Int16 playerControllerId, NetworkReader extraMessageReader) 的 stub</summary>
        </member>
        <member name="M:UnityEngine.Networking.Fakes.StubNetworkManager.OnServerConnect(UnityEngine.Networking.NetworkConnection)">
            <summary>设置 NetworkManager.OnServerConnect(NetworkConnection conn) 的 存根</summary>
        </member>
        <member name="F:UnityEngine.Networking.Fakes.StubNetworkManager.OnServerConnectNetworkConnection">
            <summary>设置 NetworkManager.OnServerConnect(NetworkConnection conn) 的 stub</summary>
        </member>
        <member name="M:UnityEngine.Networking.Fakes.StubNetworkManager.OnServerDisconnect(UnityEngine.Networking.NetworkConnection)">
            <summary>设置 NetworkManager.OnServerDisconnect(NetworkConnection conn) 的 存根</summary>
        </member>
        <member name="F:UnityEngine.Networking.Fakes.StubNetworkManager.OnServerDisconnectNetworkConnection">
            <summary>设置 NetworkManager.OnServerDisconnect(NetworkConnection conn) 的 stub</summary>
        </member>
        <member name="M:UnityEngine.Networking.Fakes.StubNetworkManager.OnServerError(UnityEngine.Networking.NetworkConnection,System.Int32)">
            <summary>设置 NetworkManager.OnServerError(NetworkConnection conn, Int32 errorCode) 的 存根</summary>
        </member>
        <member name="F:UnityEngine.Networking.Fakes.StubNetworkManager.OnServerErrorNetworkConnectionInt32">
            <summary>设置 NetworkManager.OnServerError(NetworkConnection conn, Int32 errorCode) 的 stub</summary>
        </member>
        <member name="M:UnityEngine.Networking.Fakes.StubNetworkManager.OnServerReady(UnityEngine.Networking.NetworkConnection)">
            <summary>设置 NetworkManager.OnServerReady(NetworkConnection conn) 的 存根</summary>
        </member>
        <member name="F:UnityEngine.Networking.Fakes.StubNetworkManager.OnServerReadyNetworkConnection">
            <summary>设置 NetworkManager.OnServerReady(NetworkConnection conn) 的 stub</summary>
        </member>
        <member name="M:UnityEngine.Networking.Fakes.StubNetworkManager.OnServerRemovePlayer(UnityEngine.Networking.NetworkConnection,UnityEngine.Networking.PlayerController)">
            <summary>设置 NetworkManager.OnServerRemovePlayer(NetworkConnection conn, PlayerController player) 的 存根</summary>
        </member>
        <member name="F:UnityEngine.Networking.Fakes.StubNetworkManager.OnServerRemovePlayerNetworkConnectionPlayerController">
            <summary>设置 NetworkManager.OnServerRemovePlayer(NetworkConnection conn, PlayerController player) 的 stub</summary>
        </member>
        <member name="M:UnityEngine.Networking.Fakes.StubNetworkManager.OnServerSceneChanged(System.String)">
            <summary>设置 NetworkManager.OnServerSceneChanged(String sceneName) 的 存根</summary>
        </member>
        <member name="F:UnityEngine.Networking.Fakes.StubNetworkManager.OnServerSceneChangedString">
            <summary>设置 NetworkManager.OnServerSceneChanged(String sceneName) 的 stub</summary>
        </member>
        <member name="M:UnityEngine.Networking.Fakes.StubNetworkManager.OnStartClient(UnityEngine.Networking.NetworkClient)">
            <summary>设置 NetworkManager.OnStartClient(NetworkClient client) 的 存根</summary>
        </member>
        <member name="F:UnityEngine.Networking.Fakes.StubNetworkManager.OnStartClientNetworkClient">
            <summary>设置 NetworkManager.OnStartClient(NetworkClient client) 的 stub</summary>
        </member>
        <member name="M:UnityEngine.Networking.Fakes.StubNetworkManager.OnStartHost">
            <summary>设置 NetworkManager.OnStartHost() 的 存根</summary>
        </member>
        <member name="F:UnityEngine.Networking.Fakes.StubNetworkManager.OnStartHost01">
            <summary>设置 NetworkManager.OnStartHost() 的 stub</summary>
        </member>
        <member name="M:UnityEngine.Networking.Fakes.StubNetworkManager.OnStartServer">
            <summary>设置 NetworkManager.OnStartServer() 的 存根</summary>
        </member>
        <member name="F:UnityEngine.Networking.Fakes.StubNetworkManager.OnStartServer01">
            <summary>设置 NetworkManager.OnStartServer() 的 stub</summary>
        </member>
        <member name="M:UnityEngine.Networking.Fakes.StubNetworkManager.OnStopClient">
            <summary>设置 NetworkManager.OnStopClient() 的 存根</summary>
        </member>
        <member name="F:UnityEngine.Networking.Fakes.StubNetworkManager.OnStopClient01">
            <summary>设置 NetworkManager.OnStopClient() 的 stub</summary>
        </member>
        <member name="M:UnityEngine.Networking.Fakes.StubNetworkManager.OnStopHost">
            <summary>设置 NetworkManager.OnStopHost() 的 存根</summary>
        </member>
        <member name="F:UnityEngine.Networking.Fakes.StubNetworkManager.OnStopHost01">
            <summary>设置 NetworkManager.OnStopHost() 的 stub</summary>
        </member>
        <member name="M:UnityEngine.Networking.Fakes.StubNetworkManager.OnStopServer">
            <summary>设置 NetworkManager.OnStopServer() 的 存根</summary>
        </member>
        <member name="F:UnityEngine.Networking.Fakes.StubNetworkManager.OnStopServer01">
            <summary>设置 NetworkManager.OnStopServer() 的 stub</summary>
        </member>
        <member name="M:UnityEngine.Networking.Fakes.StubNetworkManager.ServerChangeScene(System.String)">
            <summary>设置 NetworkManager.ServerChangeScene(String newSceneName) 的 存根</summary>
        </member>
        <member name="F:UnityEngine.Networking.Fakes.StubNetworkManager.ServerChangeSceneString">
            <summary>设置 NetworkManager.ServerChangeScene(String newSceneName) 的 stub</summary>
        </member>
        <member name="M:UnityEngine.Networking.Fakes.StubNetworkManager.StartHost">
            <summary>设置 NetworkManager.StartHost() 的 存根</summary>
        </member>
        <member name="M:UnityEngine.Networking.Fakes.StubNetworkManager.StartHost(UnityEngine.Networking.Match.MatchInfo)">
            <summary>设置 NetworkManager.StartHost(MatchInfo info) 的 存根</summary>
        </member>
        <member name="M:UnityEngine.Networking.Fakes.StubNetworkManager.StartHost(UnityEngine.Networking.ConnectionConfig,System.Int32)">
            <summary>设置 NetworkManager.StartHost(ConnectionConfig config, Int32 maxConnections) 的 存根</summary>
        </member>
        <member name="F:UnityEngine.Networking.Fakes.StubNetworkManager.StartHost01">
            <summary>设置 NetworkManager.StartHost() 的 stub</summary>
        </member>
        <member name="F:UnityEngine.Networking.Fakes.StubNetworkManager.StartHostConnectionConfigInt32">
            <summary>设置 NetworkManager.StartHost(ConnectionConfig config, Int32 maxConnections) 的 stub</summary>
        </member>
        <member name="F:UnityEngine.Networking.Fakes.StubNetworkManager.StartHostMatchInfo">
            <summary>设置 NetworkManager.StartHost(MatchInfo info) 的 stub</summary>
        </member>
        <member name="M:UnityEngine.Networking.Fakes.StubNetworkManager.ToString">
            <summary>设置 Object.ToString() 的 存根</summary>
        </member>
        <member name="F:UnityEngine.Networking.Fakes.StubNetworkManager.ToString01">
            <summary>设置 Object.ToString() 的 stub</summary>
        </member>
        <member name="T:UnityEngine.Networking.Fakes.StubNetworkManagerHUD">
            <summary>UnityEngine.Networking.NetworkManagerHUD 的存根类型</summary>
        </member>
        <member name="M:UnityEngine.Networking.Fakes.StubNetworkManagerHUD.#ctor">
            <summary>初始化新实例</summary>
        </member>
        <member name="P:UnityEngine.Networking.Fakes.StubNetworkManagerHUD.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="M:UnityEngine.Networking.Fakes.StubNetworkManagerHUD.Equals(System.Object)">
            <summary>设置 Object.Equals(Object o) 的 存根</summary>
        </member>
        <member name="F:UnityEngine.Networking.Fakes.StubNetworkManagerHUD.EqualsObject">
            <summary>设置 Object.Equals(Object o) 的 stub</summary>
        </member>
        <member name="M:UnityEngine.Networking.Fakes.StubNetworkManagerHUD.GetHashCode">
            <summary>设置 Object.GetHashCode() 的 存根</summary>
        </member>
        <member name="F:UnityEngine.Networking.Fakes.StubNetworkManagerHUD.GetHashCode01">
            <summary>设置 Object.GetHashCode() 的 stub</summary>
        </member>
        <member name="M:UnityEngine.Networking.Fakes.StubNetworkManagerHUD.InitializeStub">
            <summary>初始化 type StubNetworkManagerHUD 的新实例</summary>
        </member>
        <member name="P:UnityEngine.Networking.Fakes.StubNetworkManagerHUD.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:UnityEngine.Networking.Fakes.StubNetworkManagerHUD.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="M:UnityEngine.Networking.Fakes.StubNetworkManagerHUD.ToString">
            <summary>设置 Object.ToString() 的 存根</summary>
        </member>
        <member name="F:UnityEngine.Networking.Fakes.StubNetworkManagerHUD.ToString01">
            <summary>设置 Object.ToString() 的 stub</summary>
        </member>
        <member name="T:UnityEngine.Networking.Fakes.StubNetworkMessage">
            <summary>UnityEngine.Networking.NetworkMessage 的存根类型</summary>
        </member>
        <member name="M:UnityEngine.Networking.Fakes.StubNetworkMessage.#ctor">
            <summary>初始化新实例</summary>
        </member>
        <member name="P:UnityEngine.Networking.Fakes.StubNetworkMessage.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="M:UnityEngine.Networking.Fakes.StubNetworkMessage.InitializeStub">
            <summary>初始化 type StubNetworkMessage 的新实例</summary>
        </member>
        <member name="P:UnityEngine.Networking.Fakes.StubNetworkMessage.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:UnityEngine.Networking.Fakes.StubNetworkMessage.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="T:UnityEngine.Networking.Fakes.StubNetworkProximityChecker">
            <summary>UnityEngine.Networking.NetworkProximityChecker 的存根类型</summary>
        </member>
        <member name="M:UnityEngine.Networking.Fakes.StubNetworkProximityChecker.#ctor">
            <summary>初始化新实例</summary>
        </member>
        <member name="P:UnityEngine.Networking.Fakes.StubNetworkProximityChecker.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="M:UnityEngine.Networking.Fakes.StubNetworkProximityChecker.Equals(System.Object)">
            <summary>设置 Object.Equals(Object o) 的 存根</summary>
        </member>
        <member name="F:UnityEngine.Networking.Fakes.StubNetworkProximityChecker.EqualsObject">
            <summary>设置 Object.Equals(Object o) 的 stub</summary>
        </member>
        <member name="M:UnityEngine.Networking.Fakes.StubNetworkProximityChecker.GetHashCode">
            <summary>设置 Object.GetHashCode() 的 存根</summary>
        </member>
        <member name="F:UnityEngine.Networking.Fakes.StubNetworkProximityChecker.GetHashCode01">
            <summary>设置 Object.GetHashCode() 的 stub</summary>
        </member>
        <member name="M:UnityEngine.Networking.Fakes.StubNetworkProximityChecker.GetNetworkChannel">
            <summary>设置 NetworkBehaviour.GetNetworkChannel() 的 存根</summary>
        </member>
        <member name="F:UnityEngine.Networking.Fakes.StubNetworkProximityChecker.GetNetworkChannel01">
            <summary>设置 NetworkBehaviour.GetNetworkChannel() 的 stub</summary>
        </member>
        <member name="M:UnityEngine.Networking.Fakes.StubNetworkProximityChecker.GetNetworkSendInterval">
            <summary>设置 NetworkBehaviour.GetNetworkSendInterval() 的 存根</summary>
        </member>
        <member name="F:UnityEngine.Networking.Fakes.StubNetworkProximityChecker.GetNetworkSendInterval01">
            <summary>设置 NetworkBehaviour.GetNetworkSendInterval() 的 stub</summary>
        </member>
        <member name="M:UnityEngine.Networking.Fakes.StubNetworkProximityChecker.InitializeStub">
            <summary>初始化 type StubNetworkProximityChecker 的新实例</summary>
        </member>
        <member name="P:UnityEngine.Networking.Fakes.StubNetworkProximityChecker.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:UnityEngine.Networking.Fakes.StubNetworkProximityChecker.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="M:UnityEngine.Networking.Fakes.StubNetworkProximityChecker.InvokeCommand(System.Int32,UnityEngine.Networking.NetworkReader)">
            <summary>设置 NetworkBehaviour.InvokeCommand(Int32 cmdHash, NetworkReader reader) 的 存根</summary>
        </member>
        <member name="F:UnityEngine.Networking.Fakes.StubNetworkProximityChecker.InvokeCommandInt32NetworkReader">
            <summary>设置 NetworkBehaviour.InvokeCommand(Int32 cmdHash, NetworkReader reader) 的 stub</summary>
        </member>
        <member name="M:UnityEngine.Networking.Fakes.StubNetworkProximityChecker.InvokeRPC(System.Int32,UnityEngine.Networking.NetworkReader)">
            <summary>设置 NetworkBehaviour.InvokeRPC(Int32 cmdHash, NetworkReader reader) 的 存根</summary>
        </member>
        <member name="F:UnityEngine.Networking.Fakes.StubNetworkProximityChecker.InvokeRPCInt32NetworkReader">
            <summary>设置 NetworkBehaviour.InvokeRPC(Int32 cmdHash, NetworkReader reader) 的 stub</summary>
        </member>
        <member name="M:UnityEngine.Networking.Fakes.StubNetworkProximityChecker.InvokeSyncEvent(System.Int32,UnityEngine.Networking.NetworkReader)">
            <summary>设置 NetworkBehaviour.InvokeSyncEvent(Int32 cmdHash, NetworkReader reader) 的 存根</summary>
        </member>
        <member name="F:UnityEngine.Networking.Fakes.StubNetworkProximityChecker.InvokeSyncEventInt32NetworkReader">
            <summary>设置 NetworkBehaviour.InvokeSyncEvent(Int32 cmdHash, NetworkReader reader) 的 stub</summary>
        </member>
        <member name="M:UnityEngine.Networking.Fakes.StubNetworkProximityChecker.InvokeSyncList(System.Int32,UnityEngine.Networking.NetworkReader)">
            <summary>设置 NetworkBehaviour.InvokeSyncList(Int32 cmdHash, NetworkReader reader) 的 存根</summary>
        </member>
        <member name="F:UnityEngine.Networking.Fakes.StubNetworkProximityChecker.InvokeSyncListInt32NetworkReader">
            <summary>设置 NetworkBehaviour.InvokeSyncList(Int32 cmdHash, NetworkReader reader) 的 stub</summary>
        </member>
        <member name="M:UnityEngine.Networking.Fakes.StubNetworkProximityChecker.OnCheckObserver(UnityEngine.Networking.NetworkConnection)">
            <summary>设置 NetworkProximityChecker.OnCheckObserver(NetworkConnection newObserver) 的 存根</summary>
        </member>
        <member name="F:UnityEngine.Networking.Fakes.StubNetworkProximityChecker.OnCheckObserverNetworkConnection">
            <summary>设置 NetworkProximityChecker.OnCheckObserver(NetworkConnection newObserver) 的 stub</summary>
        </member>
        <member name="M:UnityEngine.Networking.Fakes.StubNetworkProximityChecker.OnDeserialize(UnityEngine.Networking.NetworkReader,System.Boolean)">
            <summary>设置 NetworkBehaviour.OnDeserialize(NetworkReader reader, Boolean initialState) 的 存根</summary>
        </member>
        <member name="F:UnityEngine.Networking.Fakes.StubNetworkProximityChecker.OnDeserializeNetworkReaderBoolean">
            <summary>设置 NetworkBehaviour.OnDeserialize(NetworkReader reader, Boolean initialState) 的 stub</summary>
        </member>
        <member name="M:UnityEngine.Networking.Fakes.StubNetworkProximityChecker.OnNetworkDestroy">
            <summary>设置 NetworkBehaviour.OnNetworkDestroy() 的 存根</summary>
        </member>
        <member name="F:UnityEngine.Networking.Fakes.StubNetworkProximityChecker.OnNetworkDestroy01">
            <summary>设置 NetworkBehaviour.OnNetworkDestroy() 的 stub</summary>
        </member>
        <member name="M:UnityEngine.Networking.Fakes.StubNetworkProximityChecker.OnRebuildObservers(System.Collections.Generic.HashSet{UnityEngine.Networking.NetworkConnection},System.Boolean)">
            <summary>设置 NetworkProximityChecker.OnRebuildObservers(HashSet`1&lt;NetworkConnection&gt; observers, Boolean initial) 的 存根</summary>
        </member>
        <member name="F:UnityEngine.Networking.Fakes.StubNetworkProximityChecker.OnRebuildObserversHashSetOfNetworkConnectionBoolean">
            <summary>设置 NetworkProximityChecker.OnRebuildObservers(HashSet`1&lt;NetworkConnection&gt; observers, Boolean initial) 的 stub</summary>
        </member>
        <member name="M:UnityEngine.Networking.Fakes.StubNetworkProximityChecker.OnSerialize(UnityEngine.Networking.NetworkWriter,System.Boolean)">
            <summary>设置 NetworkBehaviour.OnSerialize(NetworkWriter writer, Boolean initialState) 的 存根</summary>
        </member>
        <member name="F:UnityEngine.Networking.Fakes.StubNetworkProximityChecker.OnSerializeNetworkWriterBoolean">
            <summary>设置 NetworkBehaviour.OnSerialize(NetworkWriter writer, Boolean initialState) 的 stub</summary>
        </member>
        <member name="M:UnityEngine.Networking.Fakes.StubNetworkProximityChecker.OnSetLocalVisibility(System.Boolean)">
            <summary>设置 NetworkProximityChecker.OnSetLocalVisibility(Boolean vis) 的 存根</summary>
        </member>
        <member name="F:UnityEngine.Networking.Fakes.StubNetworkProximityChecker.OnSetLocalVisibilityBoolean">
            <summary>设置 NetworkProximityChecker.OnSetLocalVisibility(Boolean vis) 的 stub</summary>
        </member>
        <member name="M:UnityEngine.Networking.Fakes.StubNetworkProximityChecker.OnStartAuthority">
            <summary>设置 NetworkBehaviour.OnStartAuthority() 的 存根</summary>
        </member>
        <member name="F:UnityEngine.Networking.Fakes.StubNetworkProximityChecker.OnStartAuthority01">
            <summary>设置 NetworkBehaviour.OnStartAuthority() 的 stub</summary>
        </member>
        <member name="M:UnityEngine.Networking.Fakes.StubNetworkProximityChecker.OnStartClient">
            <summary>设置 NetworkBehaviour.OnStartClient() 的 存根</summary>
        </member>
        <member name="F:UnityEngine.Networking.Fakes.StubNetworkProximityChecker.OnStartClient01">
            <summary>设置 NetworkBehaviour.OnStartClient() 的 stub</summary>
        </member>
        <member name="M:UnityEngine.Networking.Fakes.StubNetworkProximityChecker.OnStartLocalPlayer">
            <summary>设置 NetworkBehaviour.OnStartLocalPlayer() 的 存根</summary>
        </member>
        <member name="F:UnityEngine.Networking.Fakes.StubNetworkProximityChecker.OnStartLocalPlayer01">
            <summary>设置 NetworkBehaviour.OnStartLocalPlayer() 的 stub</summary>
        </member>
        <member name="M:UnityEngine.Networking.Fakes.StubNetworkProximityChecker.OnStartServer">
            <summary>设置 NetworkBehaviour.OnStartServer() 的 存根</summary>
        </member>
        <member name="F:UnityEngine.Networking.Fakes.StubNetworkProximityChecker.OnStartServer01">
            <summary>设置 NetworkBehaviour.OnStartServer() 的 stub</summary>
        </member>
        <member name="M:UnityEngine.Networking.Fakes.StubNetworkProximityChecker.OnStopAuthority">
            <summary>设置 NetworkBehaviour.OnStopAuthority() 的 存根</summary>
        </member>
        <member name="F:UnityEngine.Networking.Fakes.StubNetworkProximityChecker.OnStopAuthority01">
            <summary>设置 NetworkBehaviour.OnStopAuthority() 的 stub</summary>
        </member>
        <member name="M:UnityEngine.Networking.Fakes.StubNetworkProximityChecker.PreStartClient">
            <summary>设置 NetworkBehaviour.PreStartClient() 的 存根</summary>
        </member>
        <member name="F:UnityEngine.Networking.Fakes.StubNetworkProximityChecker.PreStartClient01">
            <summary>设置 NetworkBehaviour.PreStartClient() 的 stub</summary>
        </member>
        <member name="M:UnityEngine.Networking.Fakes.StubNetworkProximityChecker.ToString">
            <summary>设置 Object.ToString() 的 存根</summary>
        </member>
        <member name="F:UnityEngine.Networking.Fakes.StubNetworkProximityChecker.ToString01">
            <summary>设置 Object.ToString() 的 stub</summary>
        </member>
        <member name="T:UnityEngine.Networking.Fakes.StubNetworkReader">
            <summary>UnityEngine.Networking.NetworkReader 的存根类型</summary>
        </member>
        <member name="M:UnityEngine.Networking.Fakes.StubNetworkReader.#ctor">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:UnityEngine.Networking.Fakes.StubNetworkReader.#ctor(UnityEngine.Networking.NetworkWriter)">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:UnityEngine.Networking.Fakes.StubNetworkReader.#ctor(System.Byte[])">
            <summary>初始化新实例</summary>
        </member>
        <member name="P:UnityEngine.Networking.Fakes.StubNetworkReader.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="M:UnityEngine.Networking.Fakes.StubNetworkReader.InitializeStub">
            <summary>初始化 type StubNetworkReader 的新实例</summary>
        </member>
        <member name="P:UnityEngine.Networking.Fakes.StubNetworkReader.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:UnityEngine.Networking.Fakes.StubNetworkReader.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="M:UnityEngine.Networking.Fakes.StubNetworkReader.ToString">
            <summary>设置 NetworkReader.ToString() 的 存根</summary>
        </member>
        <member name="F:UnityEngine.Networking.Fakes.StubNetworkReader.ToString01">
            <summary>设置 NetworkReader.ToString() 的 stub</summary>
        </member>
        <member name="T:UnityEngine.Networking.Fakes.StubNetworkSettingsAttribute">
            <summary>UnityEngine.Networking.NetworkSettingsAttribute 的存根类型</summary>
        </member>
        <member name="M:UnityEngine.Networking.Fakes.StubNetworkSettingsAttribute.#ctor">
            <summary>初始化新实例</summary>
        </member>
        <member name="P:UnityEngine.Networking.Fakes.StubNetworkSettingsAttribute.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="M:UnityEngine.Networking.Fakes.StubNetworkSettingsAttribute.Equals(System.Object)">
            <summary>设置 Attribute.Equals(Object obj) 的 存根</summary>
        </member>
        <member name="F:UnityEngine.Networking.Fakes.StubNetworkSettingsAttribute.EqualsObject">
            <summary>设置 Attribute.Equals(Object obj) 的 stub</summary>
        </member>
        <member name="M:UnityEngine.Networking.Fakes.StubNetworkSettingsAttribute.GetHashCode">
            <summary>设置 Attribute.GetHashCode() 的 存根</summary>
        </member>
        <member name="F:UnityEngine.Networking.Fakes.StubNetworkSettingsAttribute.GetHashCode01">
            <summary>设置 Attribute.GetHashCode() 的 stub</summary>
        </member>
        <member name="M:UnityEngine.Networking.Fakes.StubNetworkSettingsAttribute.InitializeStub">
            <summary>初始化 type StubNetworkSettingsAttribute 的新实例</summary>
        </member>
        <member name="P:UnityEngine.Networking.Fakes.StubNetworkSettingsAttribute.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:UnityEngine.Networking.Fakes.StubNetworkSettingsAttribute.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="M:UnityEngine.Networking.Fakes.StubNetworkSettingsAttribute.IsDefaultAttribute">
            <summary>设置 Attribute.IsDefaultAttribute() 的 存根</summary>
        </member>
        <member name="F:UnityEngine.Networking.Fakes.StubNetworkSettingsAttribute.IsDefaultAttribute01">
            <summary>设置 Attribute.IsDefaultAttribute() 的 stub</summary>
        </member>
        <member name="M:UnityEngine.Networking.Fakes.StubNetworkSettingsAttribute.Match(System.Object)">
            <summary>设置 Attribute.Match(Object obj) 的 存根</summary>
        </member>
        <member name="F:UnityEngine.Networking.Fakes.StubNetworkSettingsAttribute.MatchObject">
            <summary>设置 Attribute.Match(Object obj) 的 stub</summary>
        </member>
        <member name="P:UnityEngine.Networking.Fakes.StubNetworkSettingsAttribute.TypeId">
            <summary>设置 Attribute.get_TypeId() 的 stub</summary>
        </member>
        <member name="F:UnityEngine.Networking.Fakes.StubNetworkSettingsAttribute.TypeIdGet">
            <summary>设置 Attribute.get_TypeId() 的 stub</summary>
        </member>
        <member name="T:UnityEngine.Networking.Fakes.StubNetworkStartPosition">
            <summary>UnityEngine.Networking.NetworkStartPosition 的存根类型</summary>
        </member>
        <member name="M:UnityEngine.Networking.Fakes.StubNetworkStartPosition.#ctor">
            <summary>初始化新实例</summary>
        </member>
        <member name="P:UnityEngine.Networking.Fakes.StubNetworkStartPosition.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="M:UnityEngine.Networking.Fakes.StubNetworkStartPosition.Equals(System.Object)">
            <summary>设置 Object.Equals(Object o) 的 存根</summary>
        </member>
        <member name="F:UnityEngine.Networking.Fakes.StubNetworkStartPosition.EqualsObject">
            <summary>设置 Object.Equals(Object o) 的 stub</summary>
        </member>
        <member name="M:UnityEngine.Networking.Fakes.StubNetworkStartPosition.GetHashCode">
            <summary>设置 Object.GetHashCode() 的 存根</summary>
        </member>
        <member name="F:UnityEngine.Networking.Fakes.StubNetworkStartPosition.GetHashCode01">
            <summary>设置 Object.GetHashCode() 的 stub</summary>
        </member>
        <member name="M:UnityEngine.Networking.Fakes.StubNetworkStartPosition.InitializeStub">
            <summary>初始化 type StubNetworkStartPosition 的新实例</summary>
        </member>
        <member name="P:UnityEngine.Networking.Fakes.StubNetworkStartPosition.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:UnityEngine.Networking.Fakes.StubNetworkStartPosition.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="M:UnityEngine.Networking.Fakes.StubNetworkStartPosition.ToString">
            <summary>设置 Object.ToString() 的 存根</summary>
        </member>
        <member name="F:UnityEngine.Networking.Fakes.StubNetworkStartPosition.ToString01">
            <summary>设置 Object.ToString() 的 stub</summary>
        </member>
        <member name="T:UnityEngine.Networking.Fakes.StubNetworkTransform">
            <summary>UnityEngine.Networking.NetworkTransform 的存根类型</summary>
        </member>
        <member name="M:UnityEngine.Networking.Fakes.StubNetworkTransform.#ctor">
            <summary>初始化新实例</summary>
        </member>
        <member name="P:UnityEngine.Networking.Fakes.StubNetworkTransform.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="M:UnityEngine.Networking.Fakes.StubNetworkTransform.Equals(System.Object)">
            <summary>设置 Object.Equals(Object o) 的 存根</summary>
        </member>
        <member name="F:UnityEngine.Networking.Fakes.StubNetworkTransform.EqualsObject">
            <summary>设置 Object.Equals(Object o) 的 stub</summary>
        </member>
        <member name="M:UnityEngine.Networking.Fakes.StubNetworkTransform.GetHashCode">
            <summary>设置 Object.GetHashCode() 的 存根</summary>
        </member>
        <member name="F:UnityEngine.Networking.Fakes.StubNetworkTransform.GetHashCode01">
            <summary>设置 Object.GetHashCode() 的 stub</summary>
        </member>
        <member name="M:UnityEngine.Networking.Fakes.StubNetworkTransform.GetNetworkChannel">
            <summary>设置 NetworkTransform.GetNetworkChannel() 的 存根</summary>
        </member>
        <member name="F:UnityEngine.Networking.Fakes.StubNetworkTransform.GetNetworkChannel01">
            <summary>设置 NetworkTransform.GetNetworkChannel() 的 stub</summary>
        </member>
        <member name="M:UnityEngine.Networking.Fakes.StubNetworkTransform.GetNetworkSendInterval">
            <summary>设置 NetworkTransform.GetNetworkSendInterval() 的 存根</summary>
        </member>
        <member name="F:UnityEngine.Networking.Fakes.StubNetworkTransform.GetNetworkSendInterval01">
            <summary>设置 NetworkTransform.GetNetworkSendInterval() 的 stub</summary>
        </member>
        <member name="M:UnityEngine.Networking.Fakes.StubNetworkTransform.InitializeStub">
            <summary>初始化 type StubNetworkTransform 的新实例</summary>
        </member>
        <member name="P:UnityEngine.Networking.Fakes.StubNetworkTransform.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:UnityEngine.Networking.Fakes.StubNetworkTransform.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="M:UnityEngine.Networking.Fakes.StubNetworkTransform.InvokeCommand(System.Int32,UnityEngine.Networking.NetworkReader)">
            <summary>设置 NetworkBehaviour.InvokeCommand(Int32 cmdHash, NetworkReader reader) 的 存根</summary>
        </member>
        <member name="F:UnityEngine.Networking.Fakes.StubNetworkTransform.InvokeCommandInt32NetworkReader">
            <summary>设置 NetworkBehaviour.InvokeCommand(Int32 cmdHash, NetworkReader reader) 的 stub</summary>
        </member>
        <member name="M:UnityEngine.Networking.Fakes.StubNetworkTransform.InvokeRPC(System.Int32,UnityEngine.Networking.NetworkReader)">
            <summary>设置 NetworkBehaviour.InvokeRPC(Int32 cmdHash, NetworkReader reader) 的 存根</summary>
        </member>
        <member name="F:UnityEngine.Networking.Fakes.StubNetworkTransform.InvokeRPCInt32NetworkReader">
            <summary>设置 NetworkBehaviour.InvokeRPC(Int32 cmdHash, NetworkReader reader) 的 stub</summary>
        </member>
        <member name="M:UnityEngine.Networking.Fakes.StubNetworkTransform.InvokeSyncEvent(System.Int32,UnityEngine.Networking.NetworkReader)">
            <summary>设置 NetworkBehaviour.InvokeSyncEvent(Int32 cmdHash, NetworkReader reader) 的 存根</summary>
        </member>
        <member name="F:UnityEngine.Networking.Fakes.StubNetworkTransform.InvokeSyncEventInt32NetworkReader">
            <summary>设置 NetworkBehaviour.InvokeSyncEvent(Int32 cmdHash, NetworkReader reader) 的 stub</summary>
        </member>
        <member name="M:UnityEngine.Networking.Fakes.StubNetworkTransform.InvokeSyncList(System.Int32,UnityEngine.Networking.NetworkReader)">
            <summary>设置 NetworkBehaviour.InvokeSyncList(Int32 cmdHash, NetworkReader reader) 的 存根</summary>
        </member>
        <member name="F:UnityEngine.Networking.Fakes.StubNetworkTransform.InvokeSyncListInt32NetworkReader">
            <summary>设置 NetworkBehaviour.InvokeSyncList(Int32 cmdHash, NetworkReader reader) 的 stub</summary>
        </member>
        <member name="M:UnityEngine.Networking.Fakes.StubNetworkTransform.OnCheckObserver(UnityEngine.Networking.NetworkConnection)">
            <summary>设置 NetworkBehaviour.OnCheckObserver(NetworkConnection conn) 的 存根</summary>
        </member>
        <member name="F:UnityEngine.Networking.Fakes.StubNetworkTransform.OnCheckObserverNetworkConnection">
            <summary>设置 NetworkBehaviour.OnCheckObserver(NetworkConnection conn) 的 stub</summary>
        </member>
        <member name="M:UnityEngine.Networking.Fakes.StubNetworkTransform.OnDeserialize(UnityEngine.Networking.NetworkReader,System.Boolean)">
            <summary>设置 NetworkTransform.OnDeserialize(NetworkReader reader, Boolean initialState) 的 存根</summary>
        </member>
        <member name="F:UnityEngine.Networking.Fakes.StubNetworkTransform.OnDeserializeNetworkReaderBoolean">
            <summary>设置 NetworkTransform.OnDeserialize(NetworkReader reader, Boolean initialState) 的 stub</summary>
        </member>
        <member name="M:UnityEngine.Networking.Fakes.StubNetworkTransform.OnNetworkDestroy">
            <summary>设置 NetworkBehaviour.OnNetworkDestroy() 的 存根</summary>
        </member>
        <member name="F:UnityEngine.Networking.Fakes.StubNetworkTransform.OnNetworkDestroy01">
            <summary>设置 NetworkBehaviour.OnNetworkDestroy() 的 stub</summary>
        </member>
        <member name="M:UnityEngine.Networking.Fakes.StubNetworkTransform.OnRebuildObservers(System.Collections.Generic.HashSet{UnityEngine.Networking.NetworkConnection},System.Boolean)">
            <summary>设置 NetworkBehaviour.OnRebuildObservers(HashSet`1&lt;NetworkConnection&gt; observers, Boolean initialize) 的 存根</summary>
        </member>
        <member name="F:UnityEngine.Networking.Fakes.StubNetworkTransform.OnRebuildObserversHashSetOfNetworkConnectionBoolean">
            <summary>设置 NetworkBehaviour.OnRebuildObservers(HashSet`1&lt;NetworkConnection&gt; observers, Boolean initialize) 的 stub</summary>
        </member>
        <member name="M:UnityEngine.Networking.Fakes.StubNetworkTransform.OnSerialize(UnityEngine.Networking.NetworkWriter,System.Boolean)">
            <summary>设置 NetworkTransform.OnSerialize(NetworkWriter writer, Boolean initialState) 的 存根</summary>
        </member>
        <member name="F:UnityEngine.Networking.Fakes.StubNetworkTransform.OnSerializeNetworkWriterBoolean">
            <summary>设置 NetworkTransform.OnSerialize(NetworkWriter writer, Boolean initialState) 的 stub</summary>
        </member>
        <member name="M:UnityEngine.Networking.Fakes.StubNetworkTransform.OnSetLocalVisibility(System.Boolean)">
            <summary>设置 NetworkBehaviour.OnSetLocalVisibility(Boolean vis) 的 存根</summary>
        </member>
        <member name="F:UnityEngine.Networking.Fakes.StubNetworkTransform.OnSetLocalVisibilityBoolean">
            <summary>设置 NetworkBehaviour.OnSetLocalVisibility(Boolean vis) 的 stub</summary>
        </member>
        <member name="M:UnityEngine.Networking.Fakes.StubNetworkTransform.OnStartAuthority">
            <summary>设置 NetworkBehaviour.OnStartAuthority() 的 存根</summary>
        </member>
        <member name="F:UnityEngine.Networking.Fakes.StubNetworkTransform.OnStartAuthority01">
            <summary>设置 NetworkBehaviour.OnStartAuthority() 的 stub</summary>
        </member>
        <member name="M:UnityEngine.Networking.Fakes.StubNetworkTransform.OnStartClient">
            <summary>设置 NetworkBehaviour.OnStartClient() 的 存根</summary>
        </member>
        <member name="F:UnityEngine.Networking.Fakes.StubNetworkTransform.OnStartClient01">
            <summary>设置 NetworkBehaviour.OnStartClient() 的 stub</summary>
        </member>
        <member name="M:UnityEngine.Networking.Fakes.StubNetworkTransform.OnStartLocalPlayer">
            <summary>设置 NetworkBehaviour.OnStartLocalPlayer() 的 存根</summary>
        </member>
        <member name="F:UnityEngine.Networking.Fakes.StubNetworkTransform.OnStartLocalPlayer01">
            <summary>设置 NetworkBehaviour.OnStartLocalPlayer() 的 stub</summary>
        </member>
        <member name="M:UnityEngine.Networking.Fakes.StubNetworkTransform.OnStartServer">
            <summary>设置 NetworkBehaviour.OnStartServer() 的 存根</summary>
        </member>
        <member name="F:UnityEngine.Networking.Fakes.StubNetworkTransform.OnStartServer01">
            <summary>设置 NetworkBehaviour.OnStartServer() 的 stub</summary>
        </member>
        <member name="M:UnityEngine.Networking.Fakes.StubNetworkTransform.OnStopAuthority">
            <summary>设置 NetworkBehaviour.OnStopAuthority() 的 存根</summary>
        </member>
        <member name="F:UnityEngine.Networking.Fakes.StubNetworkTransform.OnStopAuthority01">
            <summary>设置 NetworkBehaviour.OnStopAuthority() 的 stub</summary>
        </member>
        <member name="M:UnityEngine.Networking.Fakes.StubNetworkTransform.PreStartClient">
            <summary>设置 NetworkBehaviour.PreStartClient() 的 存根</summary>
        </member>
        <member name="F:UnityEngine.Networking.Fakes.StubNetworkTransform.PreStartClient01">
            <summary>设置 NetworkBehaviour.PreStartClient() 的 stub</summary>
        </member>
        <member name="M:UnityEngine.Networking.Fakes.StubNetworkTransform.ToString">
            <summary>设置 Object.ToString() 的 存根</summary>
        </member>
        <member name="F:UnityEngine.Networking.Fakes.StubNetworkTransform.ToString01">
            <summary>设置 Object.ToString() 的 stub</summary>
        </member>
        <member name="T:UnityEngine.Networking.Fakes.StubNetworkTransformChild">
            <summary>UnityEngine.Networking.NetworkTransformChild 的存根类型</summary>
        </member>
        <member name="M:UnityEngine.Networking.Fakes.StubNetworkTransformChild.#ctor">
            <summary>初始化新实例</summary>
        </member>
        <member name="P:UnityEngine.Networking.Fakes.StubNetworkTransformChild.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="M:UnityEngine.Networking.Fakes.StubNetworkTransformChild.Equals(System.Object)">
            <summary>设置 Object.Equals(Object o) 的 存根</summary>
        </member>
        <member name="F:UnityEngine.Networking.Fakes.StubNetworkTransformChild.EqualsObject">
            <summary>设置 Object.Equals(Object o) 的 stub</summary>
        </member>
        <member name="M:UnityEngine.Networking.Fakes.StubNetworkTransformChild.GetHashCode">
            <summary>设置 Object.GetHashCode() 的 存根</summary>
        </member>
        <member name="F:UnityEngine.Networking.Fakes.StubNetworkTransformChild.GetHashCode01">
            <summary>设置 Object.GetHashCode() 的 stub</summary>
        </member>
        <member name="M:UnityEngine.Networking.Fakes.StubNetworkTransformChild.GetNetworkChannel">
            <summary>设置 NetworkTransformChild.GetNetworkChannel() 的 存根</summary>
        </member>
        <member name="F:UnityEngine.Networking.Fakes.StubNetworkTransformChild.GetNetworkChannel01">
            <summary>设置 NetworkTransformChild.GetNetworkChannel() 的 stub</summary>
        </member>
        <member name="M:UnityEngine.Networking.Fakes.StubNetworkTransformChild.GetNetworkSendInterval">
            <summary>设置 NetworkTransformChild.GetNetworkSendInterval() 的 存根</summary>
        </member>
        <member name="F:UnityEngine.Networking.Fakes.StubNetworkTransformChild.GetNetworkSendInterval01">
            <summary>设置 NetworkTransformChild.GetNetworkSendInterval() 的 stub</summary>
        </member>
        <member name="M:UnityEngine.Networking.Fakes.StubNetworkTransformChild.InitializeStub">
            <summary>初始化 type StubNetworkTransformChild 的新实例</summary>
        </member>
        <member name="P:UnityEngine.Networking.Fakes.StubNetworkTransformChild.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:UnityEngine.Networking.Fakes.StubNetworkTransformChild.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="M:UnityEngine.Networking.Fakes.StubNetworkTransformChild.InvokeCommand(System.Int32,UnityEngine.Networking.NetworkReader)">
            <summary>设置 NetworkBehaviour.InvokeCommand(Int32 cmdHash, NetworkReader reader) 的 存根</summary>
        </member>
        <member name="F:UnityEngine.Networking.Fakes.StubNetworkTransformChild.InvokeCommandInt32NetworkReader">
            <summary>设置 NetworkBehaviour.InvokeCommand(Int32 cmdHash, NetworkReader reader) 的 stub</summary>
        </member>
        <member name="M:UnityEngine.Networking.Fakes.StubNetworkTransformChild.InvokeRPC(System.Int32,UnityEngine.Networking.NetworkReader)">
            <summary>设置 NetworkBehaviour.InvokeRPC(Int32 cmdHash, NetworkReader reader) 的 存根</summary>
        </member>
        <member name="F:UnityEngine.Networking.Fakes.StubNetworkTransformChild.InvokeRPCInt32NetworkReader">
            <summary>设置 NetworkBehaviour.InvokeRPC(Int32 cmdHash, NetworkReader reader) 的 stub</summary>
        </member>
        <member name="M:UnityEngine.Networking.Fakes.StubNetworkTransformChild.InvokeSyncEvent(System.Int32,UnityEngine.Networking.NetworkReader)">
            <summary>设置 NetworkBehaviour.InvokeSyncEvent(Int32 cmdHash, NetworkReader reader) 的 存根</summary>
        </member>
        <member name="F:UnityEngine.Networking.Fakes.StubNetworkTransformChild.InvokeSyncEventInt32NetworkReader">
            <summary>设置 NetworkBehaviour.InvokeSyncEvent(Int32 cmdHash, NetworkReader reader) 的 stub</summary>
        </member>
        <member name="M:UnityEngine.Networking.Fakes.StubNetworkTransformChild.InvokeSyncList(System.Int32,UnityEngine.Networking.NetworkReader)">
            <summary>设置 NetworkBehaviour.InvokeSyncList(Int32 cmdHash, NetworkReader reader) 的 存根</summary>
        </member>
        <member name="F:UnityEngine.Networking.Fakes.StubNetworkTransformChild.InvokeSyncListInt32NetworkReader">
            <summary>设置 NetworkBehaviour.InvokeSyncList(Int32 cmdHash, NetworkReader reader) 的 stub</summary>
        </member>
        <member name="M:UnityEngine.Networking.Fakes.StubNetworkTransformChild.OnCheckObserver(UnityEngine.Networking.NetworkConnection)">
            <summary>设置 NetworkBehaviour.OnCheckObserver(NetworkConnection conn) 的 存根</summary>
        </member>
        <member name="F:UnityEngine.Networking.Fakes.StubNetworkTransformChild.OnCheckObserverNetworkConnection">
            <summary>设置 NetworkBehaviour.OnCheckObserver(NetworkConnection conn) 的 stub</summary>
        </member>
        <member name="M:UnityEngine.Networking.Fakes.StubNetworkTransformChild.OnDeserialize(UnityEngine.Networking.NetworkReader,System.Boolean)">
            <summary>设置 NetworkTransformChild.OnDeserialize(NetworkReader reader, Boolean initialState) 的 存根</summary>
        </member>
        <member name="F:UnityEngine.Networking.Fakes.StubNetworkTransformChild.OnDeserializeNetworkReaderBoolean">
            <summary>设置 NetworkTransformChild.OnDeserialize(NetworkReader reader, Boolean initialState) 的 stub</summary>
        </member>
        <member name="M:UnityEngine.Networking.Fakes.StubNetworkTransformChild.OnNetworkDestroy">
            <summary>设置 NetworkBehaviour.OnNetworkDestroy() 的 存根</summary>
        </member>
        <member name="F:UnityEngine.Networking.Fakes.StubNetworkTransformChild.OnNetworkDestroy01">
            <summary>设置 NetworkBehaviour.OnNetworkDestroy() 的 stub</summary>
        </member>
        <member name="M:UnityEngine.Networking.Fakes.StubNetworkTransformChild.OnRebuildObservers(System.Collections.Generic.HashSet{UnityEngine.Networking.NetworkConnection},System.Boolean)">
            <summary>设置 NetworkBehaviour.OnRebuildObservers(HashSet`1&lt;NetworkConnection&gt; observers, Boolean initialize) 的 存根</summary>
        </member>
        <member name="F:UnityEngine.Networking.Fakes.StubNetworkTransformChild.OnRebuildObserversHashSetOfNetworkConnectionBoolean">
            <summary>设置 NetworkBehaviour.OnRebuildObservers(HashSet`1&lt;NetworkConnection&gt; observers, Boolean initialize) 的 stub</summary>
        </member>
        <member name="M:UnityEngine.Networking.Fakes.StubNetworkTransformChild.OnSerialize(UnityEngine.Networking.NetworkWriter,System.Boolean)">
            <summary>设置 NetworkTransformChild.OnSerialize(NetworkWriter writer, Boolean initialState) 的 存根</summary>
        </member>
        <member name="F:UnityEngine.Networking.Fakes.StubNetworkTransformChild.OnSerializeNetworkWriterBoolean">
            <summary>设置 NetworkTransformChild.OnSerialize(NetworkWriter writer, Boolean initialState) 的 stub</summary>
        </member>
        <member name="M:UnityEngine.Networking.Fakes.StubNetworkTransformChild.OnSetLocalVisibility(System.Boolean)">
            <summary>设置 NetworkBehaviour.OnSetLocalVisibility(Boolean vis) 的 存根</summary>
        </member>
        <member name="F:UnityEngine.Networking.Fakes.StubNetworkTransformChild.OnSetLocalVisibilityBoolean">
            <summary>设置 NetworkBehaviour.OnSetLocalVisibility(Boolean vis) 的 stub</summary>
        </member>
        <member name="M:UnityEngine.Networking.Fakes.StubNetworkTransformChild.OnStartAuthority">
            <summary>设置 NetworkBehaviour.OnStartAuthority() 的 存根</summary>
        </member>
        <member name="F:UnityEngine.Networking.Fakes.StubNetworkTransformChild.OnStartAuthority01">
            <summary>设置 NetworkBehaviour.OnStartAuthority() 的 stub</summary>
        </member>
        <member name="M:UnityEngine.Networking.Fakes.StubNetworkTransformChild.OnStartClient">
            <summary>设置 NetworkBehaviour.OnStartClient() 的 存根</summary>
        </member>
        <member name="F:UnityEngine.Networking.Fakes.StubNetworkTransformChild.OnStartClient01">
            <summary>设置 NetworkBehaviour.OnStartClient() 的 stub</summary>
        </member>
        <member name="M:UnityEngine.Networking.Fakes.StubNetworkTransformChild.OnStartLocalPlayer">
            <summary>设置 NetworkBehaviour.OnStartLocalPlayer() 的 存根</summary>
        </member>
        <member name="F:UnityEngine.Networking.Fakes.StubNetworkTransformChild.OnStartLocalPlayer01">
            <summary>设置 NetworkBehaviour.OnStartLocalPlayer() 的 stub</summary>
        </member>
        <member name="M:UnityEngine.Networking.Fakes.StubNetworkTransformChild.OnStartServer">
            <summary>设置 NetworkBehaviour.OnStartServer() 的 存根</summary>
        </member>
        <member name="F:UnityEngine.Networking.Fakes.StubNetworkTransformChild.OnStartServer01">
            <summary>设置 NetworkBehaviour.OnStartServer() 的 stub</summary>
        </member>
        <member name="M:UnityEngine.Networking.Fakes.StubNetworkTransformChild.OnStopAuthority">
            <summary>设置 NetworkBehaviour.OnStopAuthority() 的 存根</summary>
        </member>
        <member name="F:UnityEngine.Networking.Fakes.StubNetworkTransformChild.OnStopAuthority01">
            <summary>设置 NetworkBehaviour.OnStopAuthority() 的 stub</summary>
        </member>
        <member name="M:UnityEngine.Networking.Fakes.StubNetworkTransformChild.PreStartClient">
            <summary>设置 NetworkBehaviour.PreStartClient() 的 存根</summary>
        </member>
        <member name="F:UnityEngine.Networking.Fakes.StubNetworkTransformChild.PreStartClient01">
            <summary>设置 NetworkBehaviour.PreStartClient() 的 stub</summary>
        </member>
        <member name="M:UnityEngine.Networking.Fakes.StubNetworkTransformChild.ToString">
            <summary>设置 Object.ToString() 的 存根</summary>
        </member>
        <member name="F:UnityEngine.Networking.Fakes.StubNetworkTransformChild.ToString01">
            <summary>设置 Object.ToString() 的 stub</summary>
        </member>
        <member name="T:UnityEngine.Networking.Fakes.StubNetworkTransformVisualizer">
            <summary>UnityEngine.Networking.NetworkTransformVisualizer 的存根类型</summary>
        </member>
        <member name="M:UnityEngine.Networking.Fakes.StubNetworkTransformVisualizer.#ctor">
            <summary>初始化新实例</summary>
        </member>
        <member name="P:UnityEngine.Networking.Fakes.StubNetworkTransformVisualizer.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="M:UnityEngine.Networking.Fakes.StubNetworkTransformVisualizer.Equals(System.Object)">
            <summary>设置 Object.Equals(Object o) 的 存根</summary>
        </member>
        <member name="F:UnityEngine.Networking.Fakes.StubNetworkTransformVisualizer.EqualsObject">
            <summary>设置 Object.Equals(Object o) 的 stub</summary>
        </member>
        <member name="M:UnityEngine.Networking.Fakes.StubNetworkTransformVisualizer.GetHashCode">
            <summary>设置 Object.GetHashCode() 的 存根</summary>
        </member>
        <member name="F:UnityEngine.Networking.Fakes.StubNetworkTransformVisualizer.GetHashCode01">
            <summary>设置 Object.GetHashCode() 的 stub</summary>
        </member>
        <member name="M:UnityEngine.Networking.Fakes.StubNetworkTransformVisualizer.GetNetworkChannel">
            <summary>设置 NetworkBehaviour.GetNetworkChannel() 的 存根</summary>
        </member>
        <member name="F:UnityEngine.Networking.Fakes.StubNetworkTransformVisualizer.GetNetworkChannel01">
            <summary>设置 NetworkBehaviour.GetNetworkChannel() 的 stub</summary>
        </member>
        <member name="M:UnityEngine.Networking.Fakes.StubNetworkTransformVisualizer.GetNetworkSendInterval">
            <summary>设置 NetworkBehaviour.GetNetworkSendInterval() 的 存根</summary>
        </member>
        <member name="F:UnityEngine.Networking.Fakes.StubNetworkTransformVisualizer.GetNetworkSendInterval01">
            <summary>设置 NetworkBehaviour.GetNetworkSendInterval() 的 stub</summary>
        </member>
        <member name="M:UnityEngine.Networking.Fakes.StubNetworkTransformVisualizer.InitializeStub">
            <summary>初始化 type StubNetworkTransformVisualizer 的新实例</summary>
        </member>
        <member name="P:UnityEngine.Networking.Fakes.StubNetworkTransformVisualizer.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:UnityEngine.Networking.Fakes.StubNetworkTransformVisualizer.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="M:UnityEngine.Networking.Fakes.StubNetworkTransformVisualizer.InvokeCommand(System.Int32,UnityEngine.Networking.NetworkReader)">
            <summary>设置 NetworkBehaviour.InvokeCommand(Int32 cmdHash, NetworkReader reader) 的 存根</summary>
        </member>
        <member name="F:UnityEngine.Networking.Fakes.StubNetworkTransformVisualizer.InvokeCommandInt32NetworkReader">
            <summary>设置 NetworkBehaviour.InvokeCommand(Int32 cmdHash, NetworkReader reader) 的 stub</summary>
        </member>
        <member name="M:UnityEngine.Networking.Fakes.StubNetworkTransformVisualizer.InvokeRPC(System.Int32,UnityEngine.Networking.NetworkReader)">
            <summary>设置 NetworkBehaviour.InvokeRPC(Int32 cmdHash, NetworkReader reader) 的 存根</summary>
        </member>
        <member name="F:UnityEngine.Networking.Fakes.StubNetworkTransformVisualizer.InvokeRPCInt32NetworkReader">
            <summary>设置 NetworkBehaviour.InvokeRPC(Int32 cmdHash, NetworkReader reader) 的 stub</summary>
        </member>
        <member name="M:UnityEngine.Networking.Fakes.StubNetworkTransformVisualizer.InvokeSyncEvent(System.Int32,UnityEngine.Networking.NetworkReader)">
            <summary>设置 NetworkBehaviour.InvokeSyncEvent(Int32 cmdHash, NetworkReader reader) 的 存根</summary>
        </member>
        <member name="F:UnityEngine.Networking.Fakes.StubNetworkTransformVisualizer.InvokeSyncEventInt32NetworkReader">
            <summary>设置 NetworkBehaviour.InvokeSyncEvent(Int32 cmdHash, NetworkReader reader) 的 stub</summary>
        </member>
        <member name="M:UnityEngine.Networking.Fakes.StubNetworkTransformVisualizer.InvokeSyncList(System.Int32,UnityEngine.Networking.NetworkReader)">
            <summary>设置 NetworkBehaviour.InvokeSyncList(Int32 cmdHash, NetworkReader reader) 的 存根</summary>
        </member>
        <member name="F:UnityEngine.Networking.Fakes.StubNetworkTransformVisualizer.InvokeSyncListInt32NetworkReader">
            <summary>设置 NetworkBehaviour.InvokeSyncList(Int32 cmdHash, NetworkReader reader) 的 stub</summary>
        </member>
        <member name="M:UnityEngine.Networking.Fakes.StubNetworkTransformVisualizer.OnCheckObserver(UnityEngine.Networking.NetworkConnection)">
            <summary>设置 NetworkBehaviour.OnCheckObserver(NetworkConnection conn) 的 存根</summary>
        </member>
        <member name="F:UnityEngine.Networking.Fakes.StubNetworkTransformVisualizer.OnCheckObserverNetworkConnection">
            <summary>设置 NetworkBehaviour.OnCheckObserver(NetworkConnection conn) 的 stub</summary>
        </member>
        <member name="M:UnityEngine.Networking.Fakes.StubNetworkTransformVisualizer.OnDeserialize(UnityEngine.Networking.NetworkReader,System.Boolean)">
            <summary>设置 NetworkBehaviour.OnDeserialize(NetworkReader reader, Boolean initialState) 的 存根</summary>
        </member>
        <member name="F:UnityEngine.Networking.Fakes.StubNetworkTransformVisualizer.OnDeserializeNetworkReaderBoolean">
            <summary>设置 NetworkBehaviour.OnDeserialize(NetworkReader reader, Boolean initialState) 的 stub</summary>
        </member>
        <member name="M:UnityEngine.Networking.Fakes.StubNetworkTransformVisualizer.OnNetworkDestroy">
            <summary>设置 NetworkBehaviour.OnNetworkDestroy() 的 存根</summary>
        </member>
        <member name="F:UnityEngine.Networking.Fakes.StubNetworkTransformVisualizer.OnNetworkDestroy01">
            <summary>设置 NetworkBehaviour.OnNetworkDestroy() 的 stub</summary>
        </member>
        <member name="M:UnityEngine.Networking.Fakes.StubNetworkTransformVisualizer.OnRebuildObservers(System.Collections.Generic.HashSet{UnityEngine.Networking.NetworkConnection},System.Boolean)">
            <summary>设置 NetworkBehaviour.OnRebuildObservers(HashSet`1&lt;NetworkConnection&gt; observers, Boolean initialize) 的 存根</summary>
        </member>
        <member name="F:UnityEngine.Networking.Fakes.StubNetworkTransformVisualizer.OnRebuildObserversHashSetOfNetworkConnectionBoolean">
            <summary>设置 NetworkBehaviour.OnRebuildObservers(HashSet`1&lt;NetworkConnection&gt; observers, Boolean initialize) 的 stub</summary>
        </member>
        <member name="M:UnityEngine.Networking.Fakes.StubNetworkTransformVisualizer.OnSerialize(UnityEngine.Networking.NetworkWriter,System.Boolean)">
            <summary>设置 NetworkBehaviour.OnSerialize(NetworkWriter writer, Boolean initialState) 的 存根</summary>
        </member>
        <member name="F:UnityEngine.Networking.Fakes.StubNetworkTransformVisualizer.OnSerializeNetworkWriterBoolean">
            <summary>设置 NetworkBehaviour.OnSerialize(NetworkWriter writer, Boolean initialState) 的 stub</summary>
        </member>
        <member name="M:UnityEngine.Networking.Fakes.StubNetworkTransformVisualizer.OnSetLocalVisibility(System.Boolean)">
            <summary>设置 NetworkBehaviour.OnSetLocalVisibility(Boolean vis) 的 存根</summary>
        </member>
        <member name="F:UnityEngine.Networking.Fakes.StubNetworkTransformVisualizer.OnSetLocalVisibilityBoolean">
            <summary>设置 NetworkBehaviour.OnSetLocalVisibility(Boolean vis) 的 stub</summary>
        </member>
        <member name="M:UnityEngine.Networking.Fakes.StubNetworkTransformVisualizer.OnStartAuthority">
            <summary>设置 NetworkBehaviour.OnStartAuthority() 的 存根</summary>
        </member>
        <member name="F:UnityEngine.Networking.Fakes.StubNetworkTransformVisualizer.OnStartAuthority01">
            <summary>设置 NetworkBehaviour.OnStartAuthority() 的 stub</summary>
        </member>
        <member name="M:UnityEngine.Networking.Fakes.StubNetworkTransformVisualizer.OnStartClient">
            <summary>设置 NetworkTransformVisualizer.OnStartClient() 的 存根</summary>
        </member>
        <member name="F:UnityEngine.Networking.Fakes.StubNetworkTransformVisualizer.OnStartClient01">
            <summary>设置 NetworkTransformVisualizer.OnStartClient() 的 stub</summary>
        </member>
        <member name="M:UnityEngine.Networking.Fakes.StubNetworkTransformVisualizer.OnStartLocalPlayer">
            <summary>设置 NetworkTransformVisualizer.OnStartLocalPlayer() 的 存根</summary>
        </member>
        <member name="F:UnityEngine.Networking.Fakes.StubNetworkTransformVisualizer.OnStartLocalPlayer01">
            <summary>设置 NetworkTransformVisualizer.OnStartLocalPlayer() 的 stub</summary>
        </member>
        <member name="M:UnityEngine.Networking.Fakes.StubNetworkTransformVisualizer.OnStartServer">
            <summary>设置 NetworkBehaviour.OnStartServer() 的 存根</summary>
        </member>
        <member name="F:UnityEngine.Networking.Fakes.StubNetworkTransformVisualizer.OnStartServer01">
            <summary>设置 NetworkBehaviour.OnStartServer() 的 stub</summary>
        </member>
        <member name="M:UnityEngine.Networking.Fakes.StubNetworkTransformVisualizer.OnStopAuthority">
            <summary>设置 NetworkBehaviour.OnStopAuthority() 的 存根</summary>
        </member>
        <member name="F:UnityEngine.Networking.Fakes.StubNetworkTransformVisualizer.OnStopAuthority01">
            <summary>设置 NetworkBehaviour.OnStopAuthority() 的 stub</summary>
        </member>
        <member name="M:UnityEngine.Networking.Fakes.StubNetworkTransformVisualizer.PreStartClient">
            <summary>设置 NetworkBehaviour.PreStartClient() 的 存根</summary>
        </member>
        <member name="F:UnityEngine.Networking.Fakes.StubNetworkTransformVisualizer.PreStartClient01">
            <summary>设置 NetworkBehaviour.PreStartClient() 的 stub</summary>
        </member>
        <member name="M:UnityEngine.Networking.Fakes.StubNetworkTransformVisualizer.ToString">
            <summary>设置 Object.ToString() 的 存根</summary>
        </member>
        <member name="F:UnityEngine.Networking.Fakes.StubNetworkTransformVisualizer.ToString01">
            <summary>设置 Object.ToString() 的 stub</summary>
        </member>
        <member name="T:UnityEngine.Networking.Fakes.StubNetworkWriter">
            <summary>UnityEngine.Networking.NetworkWriter 的存根类型</summary>
        </member>
        <member name="M:UnityEngine.Networking.Fakes.StubNetworkWriter.#ctor">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:UnityEngine.Networking.Fakes.StubNetworkWriter.#ctor(System.Byte[])">
            <summary>初始化新实例</summary>
        </member>
        <member name="P:UnityEngine.Networking.Fakes.StubNetworkWriter.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="M:UnityEngine.Networking.Fakes.StubNetworkWriter.InitializeStub">
            <summary>初始化 type StubNetworkWriter 的新实例</summary>
        </member>
        <member name="P:UnityEngine.Networking.Fakes.StubNetworkWriter.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:UnityEngine.Networking.Fakes.StubNetworkWriter.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="T:UnityEngine.Networking.Fakes.StubPlayerController">
            <summary>UnityEngine.Networking.PlayerController 的存根类型</summary>
        </member>
        <member name="M:UnityEngine.Networking.Fakes.StubPlayerController.#ctor">
            <summary>初始化新实例</summary>
        </member>
        <member name="P:UnityEngine.Networking.Fakes.StubPlayerController.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="M:UnityEngine.Networking.Fakes.StubPlayerController.InitializeStub">
            <summary>初始化 type StubPlayerController 的新实例</summary>
        </member>
        <member name="P:UnityEngine.Networking.Fakes.StubPlayerController.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:UnityEngine.Networking.Fakes.StubPlayerController.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="M:UnityEngine.Networking.Fakes.StubPlayerController.ToString">
            <summary>设置 PlayerController.ToString() 的 存根</summary>
        </member>
        <member name="F:UnityEngine.Networking.Fakes.StubPlayerController.ToString01">
            <summary>设置 PlayerController.ToString() 的 stub</summary>
        </member>
        <member name="T:UnityEngine.Networking.Fakes.StubServerAttribute">
            <summary>UnityEngine.Networking.ServerAttribute 的存根类型</summary>
        </member>
        <member name="M:UnityEngine.Networking.Fakes.StubServerAttribute.#ctor">
            <summary>初始化新实例</summary>
        </member>
        <member name="P:UnityEngine.Networking.Fakes.StubServerAttribute.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="M:UnityEngine.Networking.Fakes.StubServerAttribute.Equals(System.Object)">
            <summary>设置 Attribute.Equals(Object obj) 的 存根</summary>
        </member>
        <member name="F:UnityEngine.Networking.Fakes.StubServerAttribute.EqualsObject">
            <summary>设置 Attribute.Equals(Object obj) 的 stub</summary>
        </member>
        <member name="M:UnityEngine.Networking.Fakes.StubServerAttribute.GetHashCode">
            <summary>设置 Attribute.GetHashCode() 的 存根</summary>
        </member>
        <member name="F:UnityEngine.Networking.Fakes.StubServerAttribute.GetHashCode01">
            <summary>设置 Attribute.GetHashCode() 的 stub</summary>
        </member>
        <member name="M:UnityEngine.Networking.Fakes.StubServerAttribute.InitializeStub">
            <summary>初始化 type StubServerAttribute 的新实例</summary>
        </member>
        <member name="P:UnityEngine.Networking.Fakes.StubServerAttribute.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:UnityEngine.Networking.Fakes.StubServerAttribute.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="M:UnityEngine.Networking.Fakes.StubServerAttribute.IsDefaultAttribute">
            <summary>设置 Attribute.IsDefaultAttribute() 的 存根</summary>
        </member>
        <member name="F:UnityEngine.Networking.Fakes.StubServerAttribute.IsDefaultAttribute01">
            <summary>设置 Attribute.IsDefaultAttribute() 的 stub</summary>
        </member>
        <member name="M:UnityEngine.Networking.Fakes.StubServerAttribute.Match(System.Object)">
            <summary>设置 Attribute.Match(Object obj) 的 存根</summary>
        </member>
        <member name="F:UnityEngine.Networking.Fakes.StubServerAttribute.MatchObject">
            <summary>设置 Attribute.Match(Object obj) 的 stub</summary>
        </member>
        <member name="P:UnityEngine.Networking.Fakes.StubServerAttribute.TypeId">
            <summary>设置 Attribute.get_TypeId() 的 stub</summary>
        </member>
        <member name="F:UnityEngine.Networking.Fakes.StubServerAttribute.TypeIdGet">
            <summary>设置 Attribute.get_TypeId() 的 stub</summary>
        </member>
        <member name="T:UnityEngine.Networking.Fakes.StubServerCallbackAttribute">
            <summary>UnityEngine.Networking.ServerCallbackAttribute 的存根类型</summary>
        </member>
        <member name="M:UnityEngine.Networking.Fakes.StubServerCallbackAttribute.#ctor">
            <summary>初始化新实例</summary>
        </member>
        <member name="P:UnityEngine.Networking.Fakes.StubServerCallbackAttribute.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="M:UnityEngine.Networking.Fakes.StubServerCallbackAttribute.Equals(System.Object)">
            <summary>设置 Attribute.Equals(Object obj) 的 存根</summary>
        </member>
        <member name="F:UnityEngine.Networking.Fakes.StubServerCallbackAttribute.EqualsObject">
            <summary>设置 Attribute.Equals(Object obj) 的 stub</summary>
        </member>
        <member name="M:UnityEngine.Networking.Fakes.StubServerCallbackAttribute.GetHashCode">
            <summary>设置 Attribute.GetHashCode() 的 存根</summary>
        </member>
        <member name="F:UnityEngine.Networking.Fakes.StubServerCallbackAttribute.GetHashCode01">
            <summary>设置 Attribute.GetHashCode() 的 stub</summary>
        </member>
        <member name="M:UnityEngine.Networking.Fakes.StubServerCallbackAttribute.InitializeStub">
            <summary>初始化 type StubServerCallbackAttribute 的新实例</summary>
        </member>
        <member name="P:UnityEngine.Networking.Fakes.StubServerCallbackAttribute.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:UnityEngine.Networking.Fakes.StubServerCallbackAttribute.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="M:UnityEngine.Networking.Fakes.StubServerCallbackAttribute.IsDefaultAttribute">
            <summary>设置 Attribute.IsDefaultAttribute() 的 存根</summary>
        </member>
        <member name="F:UnityEngine.Networking.Fakes.StubServerCallbackAttribute.IsDefaultAttribute01">
            <summary>设置 Attribute.IsDefaultAttribute() 的 stub</summary>
        </member>
        <member name="M:UnityEngine.Networking.Fakes.StubServerCallbackAttribute.Match(System.Object)">
            <summary>设置 Attribute.Match(Object obj) 的 存根</summary>
        </member>
        <member name="F:UnityEngine.Networking.Fakes.StubServerCallbackAttribute.MatchObject">
            <summary>设置 Attribute.Match(Object obj) 的 stub</summary>
        </member>
        <member name="P:UnityEngine.Networking.Fakes.StubServerCallbackAttribute.TypeId">
            <summary>设置 Attribute.get_TypeId() 的 stub</summary>
        </member>
        <member name="F:UnityEngine.Networking.Fakes.StubServerCallbackAttribute.TypeIdGet">
            <summary>设置 Attribute.get_TypeId() 的 stub</summary>
        </member>
        <member name="T:UnityEngine.Networking.Fakes.StubSyncEventAttribute">
            <summary>UnityEngine.Networking.SyncEventAttribute 的存根类型</summary>
        </member>
        <member name="M:UnityEngine.Networking.Fakes.StubSyncEventAttribute.#ctor">
            <summary>初始化新实例</summary>
        </member>
        <member name="P:UnityEngine.Networking.Fakes.StubSyncEventAttribute.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="M:UnityEngine.Networking.Fakes.StubSyncEventAttribute.Equals(System.Object)">
            <summary>设置 Attribute.Equals(Object obj) 的 存根</summary>
        </member>
        <member name="F:UnityEngine.Networking.Fakes.StubSyncEventAttribute.EqualsObject">
            <summary>设置 Attribute.Equals(Object obj) 的 stub</summary>
        </member>
        <member name="M:UnityEngine.Networking.Fakes.StubSyncEventAttribute.GetHashCode">
            <summary>设置 Attribute.GetHashCode() 的 存根</summary>
        </member>
        <member name="F:UnityEngine.Networking.Fakes.StubSyncEventAttribute.GetHashCode01">
            <summary>设置 Attribute.GetHashCode() 的 stub</summary>
        </member>
        <member name="M:UnityEngine.Networking.Fakes.StubSyncEventAttribute.InitializeStub">
            <summary>初始化 type StubSyncEventAttribute 的新实例</summary>
        </member>
        <member name="P:UnityEngine.Networking.Fakes.StubSyncEventAttribute.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:UnityEngine.Networking.Fakes.StubSyncEventAttribute.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="M:UnityEngine.Networking.Fakes.StubSyncEventAttribute.IsDefaultAttribute">
            <summary>设置 Attribute.IsDefaultAttribute() 的 存根</summary>
        </member>
        <member name="F:UnityEngine.Networking.Fakes.StubSyncEventAttribute.IsDefaultAttribute01">
            <summary>设置 Attribute.IsDefaultAttribute() 的 stub</summary>
        </member>
        <member name="M:UnityEngine.Networking.Fakes.StubSyncEventAttribute.Match(System.Object)">
            <summary>设置 Attribute.Match(Object obj) 的 存根</summary>
        </member>
        <member name="F:UnityEngine.Networking.Fakes.StubSyncEventAttribute.MatchObject">
            <summary>设置 Attribute.Match(Object obj) 的 stub</summary>
        </member>
        <member name="P:UnityEngine.Networking.Fakes.StubSyncEventAttribute.TypeId">
            <summary>设置 Attribute.get_TypeId() 的 stub</summary>
        </member>
        <member name="F:UnityEngine.Networking.Fakes.StubSyncEventAttribute.TypeIdGet">
            <summary>设置 Attribute.get_TypeId() 的 stub</summary>
        </member>
        <member name="T:UnityEngine.Networking.Fakes.StubSyncList`1">
            <summary>UnityEngine.Networking.SyncList`1 的存根类型</summary>
        </member>
        <member name="M:UnityEngine.Networking.Fakes.StubSyncList`1.#ctor">
            <summary>初始化新实例</summary>
        </member>
        <member name="P:UnityEngine.Networking.Fakes.StubSyncList`1.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="M:UnityEngine.Networking.Fakes.StubSyncList`1.DeserializeItem(UnityEngine.Networking.NetworkReader)">
            <summary>设置 SyncList`1.DeserializeItem(NetworkReader reader) 的 存根</summary>
        </member>
        <member name="F:UnityEngine.Networking.Fakes.StubSyncList`1.DeserializeItemNetworkReader">
            <summary>设置 SyncList`1.DeserializeItem(NetworkReader reader) 的 stub</summary>
        </member>
        <member name="M:UnityEngine.Networking.Fakes.StubSyncList`1.InitializeStub">
            <summary>初始化 type StubSyncList 的新实例</summary>
        </member>
        <member name="P:UnityEngine.Networking.Fakes.StubSyncList`1.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:UnityEngine.Networking.Fakes.StubSyncList`1.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="M:UnityEngine.Networking.Fakes.StubSyncList`1.SerializeItem(UnityEngine.Networking.NetworkWriter,`0)">
            <summary>设置 SyncList`1.SerializeItem(NetworkWriter writer, !0 item) 的 存根</summary>
        </member>
        <member name="F:UnityEngine.Networking.Fakes.StubSyncList`1.SerializeItemNetworkWriterT0">
            <summary>设置 SyncList`1.SerializeItem(NetworkWriter writer, !0 item) 的 stub</summary>
        </member>
        <member name="T:UnityEngine.Networking.Fakes.StubSyncListBool">
            <summary>UnityEngine.Networking.SyncListBool 的存根类型</summary>
        </member>
        <member name="M:UnityEngine.Networking.Fakes.StubSyncListBool.#ctor">
            <summary>初始化新实例</summary>
        </member>
        <member name="P:UnityEngine.Networking.Fakes.StubSyncListBool.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="M:UnityEngine.Networking.Fakes.StubSyncListBool.DeserializeItem(UnityEngine.Networking.NetworkReader)">
            <summary>设置 SyncListBool.DeserializeItem(NetworkReader reader) 的 存根</summary>
        </member>
        <member name="F:UnityEngine.Networking.Fakes.StubSyncListBool.DeserializeItemNetworkReader">
            <summary>设置 SyncListBool.DeserializeItem(NetworkReader reader) 的 stub</summary>
        </member>
        <member name="M:UnityEngine.Networking.Fakes.StubSyncListBool.InitializeStub">
            <summary>初始化 type StubSyncListBool 的新实例</summary>
        </member>
        <member name="P:UnityEngine.Networking.Fakes.StubSyncListBool.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:UnityEngine.Networking.Fakes.StubSyncListBool.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="M:UnityEngine.Networking.Fakes.StubSyncListBool.SerializeItem(UnityEngine.Networking.NetworkWriter,System.Boolean)">
            <summary>设置 SyncListBool.SerializeItem(NetworkWriter writer, Boolean item) 的 存根</summary>
        </member>
        <member name="F:UnityEngine.Networking.Fakes.StubSyncListBool.SerializeItemNetworkWriterBoolean">
            <summary>设置 SyncListBool.SerializeItem(NetworkWriter writer, Boolean item) 的 stub</summary>
        </member>
        <member name="T:UnityEngine.Networking.Fakes.StubSyncListInt">
            <summary>UnityEngine.Networking.SyncListInt 的存根类型</summary>
        </member>
        <member name="M:UnityEngine.Networking.Fakes.StubSyncListInt.#ctor">
            <summary>初始化新实例</summary>
        </member>
        <member name="P:UnityEngine.Networking.Fakes.StubSyncListInt.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="M:UnityEngine.Networking.Fakes.StubSyncListInt.DeserializeItem(UnityEngine.Networking.NetworkReader)">
            <summary>设置 SyncListInt.DeserializeItem(NetworkReader reader) 的 存根</summary>
        </member>
        <member name="F:UnityEngine.Networking.Fakes.StubSyncListInt.DeserializeItemNetworkReader">
            <summary>设置 SyncListInt.DeserializeItem(NetworkReader reader) 的 stub</summary>
        </member>
        <member name="M:UnityEngine.Networking.Fakes.StubSyncListInt.InitializeStub">
            <summary>初始化 type StubSyncListInt 的新实例</summary>
        </member>
        <member name="P:UnityEngine.Networking.Fakes.StubSyncListInt.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:UnityEngine.Networking.Fakes.StubSyncListInt.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="M:UnityEngine.Networking.Fakes.StubSyncListInt.SerializeItem(UnityEngine.Networking.NetworkWriter,System.Int32)">
            <summary>设置 SyncListInt.SerializeItem(NetworkWriter writer, Int32 item) 的 存根</summary>
        </member>
        <member name="F:UnityEngine.Networking.Fakes.StubSyncListInt.SerializeItemNetworkWriterInt32">
            <summary>设置 SyncListInt.SerializeItem(NetworkWriter writer, Int32 item) 的 stub</summary>
        </member>
        <member name="T:UnityEngine.Networking.Fakes.StubSyncListUInt">
            <summary>UnityEngine.Networking.SyncListUInt 的存根类型</summary>
        </member>
        <member name="M:UnityEngine.Networking.Fakes.StubSyncListUInt.#ctor">
            <summary>初始化新实例</summary>
        </member>
        <member name="P:UnityEngine.Networking.Fakes.StubSyncListUInt.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="M:UnityEngine.Networking.Fakes.StubSyncListUInt.DeserializeItem(UnityEngine.Networking.NetworkReader)">
            <summary>设置 SyncListUInt.DeserializeItem(NetworkReader reader) 的 存根</summary>
        </member>
        <member name="F:UnityEngine.Networking.Fakes.StubSyncListUInt.DeserializeItemNetworkReader">
            <summary>设置 SyncListUInt.DeserializeItem(NetworkReader reader) 的 stub</summary>
        </member>
        <member name="M:UnityEngine.Networking.Fakes.StubSyncListUInt.InitializeStub">
            <summary>初始化 type StubSyncListUInt 的新实例</summary>
        </member>
        <member name="P:UnityEngine.Networking.Fakes.StubSyncListUInt.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:UnityEngine.Networking.Fakes.StubSyncListUInt.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="M:UnityEngine.Networking.Fakes.StubSyncListUInt.SerializeItem(UnityEngine.Networking.NetworkWriter,System.UInt32)">
            <summary>设置 SyncListUInt.SerializeItem(NetworkWriter writer, UInt32 item) 的 存根</summary>
        </member>
        <member name="F:UnityEngine.Networking.Fakes.StubSyncListUInt.SerializeItemNetworkWriterUInt32">
            <summary>设置 SyncListUInt.SerializeItem(NetworkWriter writer, UInt32 item) 的 stub</summary>
        </member>
        <member name="T:UnityEngine.Networking.Fakes.StubSyncVarAttribute">
            <summary>UnityEngine.Networking.SyncVarAttribute 的存根类型</summary>
        </member>
        <member name="M:UnityEngine.Networking.Fakes.StubSyncVarAttribute.#ctor">
            <summary>初始化新实例</summary>
        </member>
        <member name="P:UnityEngine.Networking.Fakes.StubSyncVarAttribute.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="M:UnityEngine.Networking.Fakes.StubSyncVarAttribute.Equals(System.Object)">
            <summary>设置 Attribute.Equals(Object obj) 的 存根</summary>
        </member>
        <member name="F:UnityEngine.Networking.Fakes.StubSyncVarAttribute.EqualsObject">
            <summary>设置 Attribute.Equals(Object obj) 的 stub</summary>
        </member>
        <member name="M:UnityEngine.Networking.Fakes.StubSyncVarAttribute.GetHashCode">
            <summary>设置 Attribute.GetHashCode() 的 存根</summary>
        </member>
        <member name="F:UnityEngine.Networking.Fakes.StubSyncVarAttribute.GetHashCode01">
            <summary>设置 Attribute.GetHashCode() 的 stub</summary>
        </member>
        <member name="M:UnityEngine.Networking.Fakes.StubSyncVarAttribute.InitializeStub">
            <summary>初始化 type StubSyncVarAttribute 的新实例</summary>
        </member>
        <member name="P:UnityEngine.Networking.Fakes.StubSyncVarAttribute.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:UnityEngine.Networking.Fakes.StubSyncVarAttribute.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="M:UnityEngine.Networking.Fakes.StubSyncVarAttribute.IsDefaultAttribute">
            <summary>设置 Attribute.IsDefaultAttribute() 的 存根</summary>
        </member>
        <member name="F:UnityEngine.Networking.Fakes.StubSyncVarAttribute.IsDefaultAttribute01">
            <summary>设置 Attribute.IsDefaultAttribute() 的 stub</summary>
        </member>
        <member name="M:UnityEngine.Networking.Fakes.StubSyncVarAttribute.Match(System.Object)">
            <summary>设置 Attribute.Match(Object obj) 的 存根</summary>
        </member>
        <member name="F:UnityEngine.Networking.Fakes.StubSyncVarAttribute.MatchObject">
            <summary>设置 Attribute.Match(Object obj) 的 stub</summary>
        </member>
        <member name="P:UnityEngine.Networking.Fakes.StubSyncVarAttribute.TypeId">
            <summary>设置 Attribute.get_TypeId() 的 stub</summary>
        </member>
        <member name="F:UnityEngine.Networking.Fakes.StubSyncVarAttribute.TypeIdGet">
            <summary>设置 Attribute.get_TypeId() 的 stub</summary>
        </member>
        <member name="T:UnityEngine.Networking.NetworkSystem.Fakes.ShimAddPlayerMessage">
            <summary>UnityEngine.Networking.NetworkSystem.AddPlayerMessage 的填充码类型</summary>
        </member>
        <member name="M:UnityEngine.Networking.NetworkSystem.Fakes.ShimAddPlayerMessage.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:UnityEngine.Networking.NetworkSystem.Fakes.ShimAddPlayerMessage.#ctor(UnityEngine.Networking.NetworkSystem.AddPlayerMessage)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="T:UnityEngine.Networking.NetworkSystem.Fakes.ShimAddPlayerMessage.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:UnityEngine.Networking.NetworkSystem.Fakes.ShimAddPlayerMessage.AllInstances.DeserializeNetworkReader">
            <summary>设置 AddPlayerMessage.Deserialize(NetworkReader reader) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Networking.NetworkSystem.Fakes.ShimAddPlayerMessage.AllInstances.SerializeNetworkWriter">
            <summary>设置 AddPlayerMessage.Serialize(NetworkWriter writer) 的 填充码</summary>
        </member>
        <member name="M:UnityEngine.Networking.NetworkSystem.Fakes.ShimAddPlayerMessage.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:UnityEngine.Networking.NetworkSystem.Fakes.ShimAddPlayerMessage.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:UnityEngine.Networking.NetworkSystem.Fakes.ShimAddPlayerMessage.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:UnityEngine.Networking.NetworkSystem.Fakes.ShimAddPlayerMessage.Constructor">
            <summary>设置 AddPlayerMessage.AddPlayerMessage() 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Networking.NetworkSystem.Fakes.ShimAddPlayerMessage.DeserializeNetworkReader">
            <summary>设置 AddPlayerMessage.Deserialize(NetworkReader reader) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Networking.NetworkSystem.Fakes.ShimAddPlayerMessage.SerializeNetworkWriter">
            <summary>设置 AddPlayerMessage.Serialize(NetworkWriter writer) 的 填充码</summary>
        </member>
        <member name="T:UnityEngine.Networking.NetworkSystem.Fakes.ShimEmptyMessage">
            <summary>UnityEngine.Networking.NetworkSystem.EmptyMessage 的填充码类型</summary>
        </member>
        <member name="M:UnityEngine.Networking.NetworkSystem.Fakes.ShimEmptyMessage.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:UnityEngine.Networking.NetworkSystem.Fakes.ShimEmptyMessage.#ctor(UnityEngine.Networking.NetworkSystem.EmptyMessage)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="T:UnityEngine.Networking.NetworkSystem.Fakes.ShimEmptyMessage.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:UnityEngine.Networking.NetworkSystem.Fakes.ShimEmptyMessage.AllInstances.DeserializeNetworkReader">
            <summary>设置 EmptyMessage.Deserialize(NetworkReader reader) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Networking.NetworkSystem.Fakes.ShimEmptyMessage.AllInstances.SerializeNetworkWriter">
            <summary>设置 EmptyMessage.Serialize(NetworkWriter writer) 的 填充码</summary>
        </member>
        <member name="M:UnityEngine.Networking.NetworkSystem.Fakes.ShimEmptyMessage.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:UnityEngine.Networking.NetworkSystem.Fakes.ShimEmptyMessage.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:UnityEngine.Networking.NetworkSystem.Fakes.ShimEmptyMessage.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:UnityEngine.Networking.NetworkSystem.Fakes.ShimEmptyMessage.Constructor">
            <summary>设置 EmptyMessage.EmptyMessage() 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Networking.NetworkSystem.Fakes.ShimEmptyMessage.DeserializeNetworkReader">
            <summary>设置 EmptyMessage.Deserialize(NetworkReader reader) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Networking.NetworkSystem.Fakes.ShimEmptyMessage.SerializeNetworkWriter">
            <summary>设置 EmptyMessage.Serialize(NetworkWriter writer) 的 填充码</summary>
        </member>
        <member name="T:UnityEngine.Networking.NetworkSystem.Fakes.ShimErrorMessage">
            <summary>UnityEngine.Networking.NetworkSystem.ErrorMessage 的填充码类型</summary>
        </member>
        <member name="M:UnityEngine.Networking.NetworkSystem.Fakes.ShimErrorMessage.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:UnityEngine.Networking.NetworkSystem.Fakes.ShimErrorMessage.#ctor(UnityEngine.Networking.NetworkSystem.ErrorMessage)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="T:UnityEngine.Networking.NetworkSystem.Fakes.ShimErrorMessage.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:UnityEngine.Networking.NetworkSystem.Fakes.ShimErrorMessage.AllInstances.DeserializeNetworkReader">
            <summary>设置 ErrorMessage.Deserialize(NetworkReader reader) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Networking.NetworkSystem.Fakes.ShimErrorMessage.AllInstances.SerializeNetworkWriter">
            <summary>设置 ErrorMessage.Serialize(NetworkWriter writer) 的 填充码</summary>
        </member>
        <member name="M:UnityEngine.Networking.NetworkSystem.Fakes.ShimErrorMessage.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:UnityEngine.Networking.NetworkSystem.Fakes.ShimErrorMessage.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:UnityEngine.Networking.NetworkSystem.Fakes.ShimErrorMessage.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:UnityEngine.Networking.NetworkSystem.Fakes.ShimErrorMessage.Constructor">
            <summary>设置 ErrorMessage.ErrorMessage() 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Networking.NetworkSystem.Fakes.ShimErrorMessage.DeserializeNetworkReader">
            <summary>设置 ErrorMessage.Deserialize(NetworkReader reader) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Networking.NetworkSystem.Fakes.ShimErrorMessage.SerializeNetworkWriter">
            <summary>设置 ErrorMessage.Serialize(NetworkWriter writer) 的 填充码</summary>
        </member>
        <member name="T:UnityEngine.Networking.NetworkSystem.Fakes.ShimIntegerMessage">
            <summary>UnityEngine.Networking.NetworkSystem.IntegerMessage 的填充码类型</summary>
        </member>
        <member name="M:UnityEngine.Networking.NetworkSystem.Fakes.ShimIntegerMessage.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:UnityEngine.Networking.NetworkSystem.Fakes.ShimIntegerMessage.#ctor(UnityEngine.Networking.NetworkSystem.IntegerMessage)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="T:UnityEngine.Networking.NetworkSystem.Fakes.ShimIntegerMessage.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:UnityEngine.Networking.NetworkSystem.Fakes.ShimIntegerMessage.AllInstances.DeserializeNetworkReader">
            <summary>设置 IntegerMessage.Deserialize(NetworkReader reader) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Networking.NetworkSystem.Fakes.ShimIntegerMessage.AllInstances.SerializeNetworkWriter">
            <summary>设置 IntegerMessage.Serialize(NetworkWriter writer) 的 填充码</summary>
        </member>
        <member name="M:UnityEngine.Networking.NetworkSystem.Fakes.ShimIntegerMessage.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:UnityEngine.Networking.NetworkSystem.Fakes.ShimIntegerMessage.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:UnityEngine.Networking.NetworkSystem.Fakes.ShimIntegerMessage.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:UnityEngine.Networking.NetworkSystem.Fakes.ShimIntegerMessage.Constructor">
            <summary>设置 IntegerMessage.IntegerMessage() 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Networking.NetworkSystem.Fakes.ShimIntegerMessage.ConstructorInt32">
            <summary>设置 IntegerMessage.IntegerMessage(Int32 v) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Networking.NetworkSystem.Fakes.ShimIntegerMessage.DeserializeNetworkReader">
            <summary>设置 IntegerMessage.Deserialize(NetworkReader reader) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Networking.NetworkSystem.Fakes.ShimIntegerMessage.SerializeNetworkWriter">
            <summary>设置 IntegerMessage.Serialize(NetworkWriter writer) 的 填充码</summary>
        </member>
        <member name="T:UnityEngine.Networking.NetworkSystem.Fakes.ShimNotReadyMessage">
            <summary>UnityEngine.Networking.NetworkSystem.NotReadyMessage 的填充码类型</summary>
        </member>
        <member name="M:UnityEngine.Networking.NetworkSystem.Fakes.ShimNotReadyMessage.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:UnityEngine.Networking.NetworkSystem.Fakes.ShimNotReadyMessage.#ctor(UnityEngine.Networking.NetworkSystem.NotReadyMessage)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="T:UnityEngine.Networking.NetworkSystem.Fakes.ShimNotReadyMessage.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="M:UnityEngine.Networking.NetworkSystem.Fakes.ShimNotReadyMessage.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:UnityEngine.Networking.NetworkSystem.Fakes.ShimNotReadyMessage.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:UnityEngine.Networking.NetworkSystem.Fakes.ShimNotReadyMessage.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:UnityEngine.Networking.NetworkSystem.Fakes.ShimNotReadyMessage.Constructor">
            <summary>设置 NotReadyMessage.NotReadyMessage() 的 填充码</summary>
        </member>
        <member name="T:UnityEngine.Networking.NetworkSystem.Fakes.ShimPeerInfoMessage">
            <summary>UnityEngine.Networking.NetworkSystem.PeerInfoMessage 的填充码类型</summary>
        </member>
        <member name="M:UnityEngine.Networking.NetworkSystem.Fakes.ShimPeerInfoMessage.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:UnityEngine.Networking.NetworkSystem.Fakes.ShimPeerInfoMessage.#ctor(UnityEngine.Networking.NetworkSystem.PeerInfoMessage)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="T:UnityEngine.Networking.NetworkSystem.Fakes.ShimPeerInfoMessage.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:UnityEngine.Networking.NetworkSystem.Fakes.ShimPeerInfoMessage.AllInstances.DeserializeNetworkReader">
            <summary>设置 PeerInfoMessage.Deserialize(NetworkReader reader) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Networking.NetworkSystem.Fakes.ShimPeerInfoMessage.AllInstances.SerializeNetworkWriter">
            <summary>设置 PeerInfoMessage.Serialize(NetworkWriter writer) 的 填充码</summary>
        </member>
        <member name="M:UnityEngine.Networking.NetworkSystem.Fakes.ShimPeerInfoMessage.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:UnityEngine.Networking.NetworkSystem.Fakes.ShimPeerInfoMessage.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:UnityEngine.Networking.NetworkSystem.Fakes.ShimPeerInfoMessage.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:UnityEngine.Networking.NetworkSystem.Fakes.ShimPeerInfoMessage.Constructor">
            <summary>设置 PeerInfoMessage.PeerInfoMessage() 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Networking.NetworkSystem.Fakes.ShimPeerInfoMessage.DeserializeNetworkReader">
            <summary>设置 PeerInfoMessage.Deserialize(NetworkReader reader) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Networking.NetworkSystem.Fakes.ShimPeerInfoMessage.SerializeNetworkWriter">
            <summary>设置 PeerInfoMessage.Serialize(NetworkWriter writer) 的 填充码</summary>
        </member>
        <member name="T:UnityEngine.Networking.NetworkSystem.Fakes.ShimPeerListMessage">
            <summary>UnityEngine.Networking.NetworkSystem.PeerListMessage 的填充码类型</summary>
        </member>
        <member name="M:UnityEngine.Networking.NetworkSystem.Fakes.ShimPeerListMessage.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:UnityEngine.Networking.NetworkSystem.Fakes.ShimPeerListMessage.#ctor(UnityEngine.Networking.NetworkSystem.PeerListMessage)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="T:UnityEngine.Networking.NetworkSystem.Fakes.ShimPeerListMessage.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:UnityEngine.Networking.NetworkSystem.Fakes.ShimPeerListMessage.AllInstances.DeserializeNetworkReader">
            <summary>设置 PeerListMessage.Deserialize(NetworkReader reader) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Networking.NetworkSystem.Fakes.ShimPeerListMessage.AllInstances.SerializeNetworkWriter">
            <summary>设置 PeerListMessage.Serialize(NetworkWriter writer) 的 填充码</summary>
        </member>
        <member name="M:UnityEngine.Networking.NetworkSystem.Fakes.ShimPeerListMessage.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:UnityEngine.Networking.NetworkSystem.Fakes.ShimPeerListMessage.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:UnityEngine.Networking.NetworkSystem.Fakes.ShimPeerListMessage.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:UnityEngine.Networking.NetworkSystem.Fakes.ShimPeerListMessage.Constructor">
            <summary>设置 PeerListMessage.PeerListMessage() 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Networking.NetworkSystem.Fakes.ShimPeerListMessage.DeserializeNetworkReader">
            <summary>设置 PeerListMessage.Deserialize(NetworkReader reader) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Networking.NetworkSystem.Fakes.ShimPeerListMessage.SerializeNetworkWriter">
            <summary>设置 PeerListMessage.Serialize(NetworkWriter writer) 的 填充码</summary>
        </member>
        <member name="T:UnityEngine.Networking.NetworkSystem.Fakes.ShimReadyMessage">
            <summary>UnityEngine.Networking.NetworkSystem.ReadyMessage 的填充码类型</summary>
        </member>
        <member name="M:UnityEngine.Networking.NetworkSystem.Fakes.ShimReadyMessage.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:UnityEngine.Networking.NetworkSystem.Fakes.ShimReadyMessage.#ctor(UnityEngine.Networking.NetworkSystem.ReadyMessage)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="T:UnityEngine.Networking.NetworkSystem.Fakes.ShimReadyMessage.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="M:UnityEngine.Networking.NetworkSystem.Fakes.ShimReadyMessage.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:UnityEngine.Networking.NetworkSystem.Fakes.ShimReadyMessage.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:UnityEngine.Networking.NetworkSystem.Fakes.ShimReadyMessage.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:UnityEngine.Networking.NetworkSystem.Fakes.ShimReadyMessage.Constructor">
            <summary>设置 ReadyMessage.ReadyMessage() 的 填充码</summary>
        </member>
        <member name="T:UnityEngine.Networking.NetworkSystem.Fakes.ShimRemovePlayerMessage">
            <summary>UnityEngine.Networking.NetworkSystem.RemovePlayerMessage 的填充码类型</summary>
        </member>
        <member name="M:UnityEngine.Networking.NetworkSystem.Fakes.ShimRemovePlayerMessage.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:UnityEngine.Networking.NetworkSystem.Fakes.ShimRemovePlayerMessage.#ctor(UnityEngine.Networking.NetworkSystem.RemovePlayerMessage)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="T:UnityEngine.Networking.NetworkSystem.Fakes.ShimRemovePlayerMessage.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:UnityEngine.Networking.NetworkSystem.Fakes.ShimRemovePlayerMessage.AllInstances.DeserializeNetworkReader">
            <summary>设置 RemovePlayerMessage.Deserialize(NetworkReader reader) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Networking.NetworkSystem.Fakes.ShimRemovePlayerMessage.AllInstances.SerializeNetworkWriter">
            <summary>设置 RemovePlayerMessage.Serialize(NetworkWriter writer) 的 填充码</summary>
        </member>
        <member name="M:UnityEngine.Networking.NetworkSystem.Fakes.ShimRemovePlayerMessage.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:UnityEngine.Networking.NetworkSystem.Fakes.ShimRemovePlayerMessage.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:UnityEngine.Networking.NetworkSystem.Fakes.ShimRemovePlayerMessage.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:UnityEngine.Networking.NetworkSystem.Fakes.ShimRemovePlayerMessage.Constructor">
            <summary>设置 RemovePlayerMessage.RemovePlayerMessage() 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Networking.NetworkSystem.Fakes.ShimRemovePlayerMessage.DeserializeNetworkReader">
            <summary>设置 RemovePlayerMessage.Deserialize(NetworkReader reader) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Networking.NetworkSystem.Fakes.ShimRemovePlayerMessage.SerializeNetworkWriter">
            <summary>设置 RemovePlayerMessage.Serialize(NetworkWriter writer) 的 填充码</summary>
        </member>
        <member name="T:UnityEngine.Networking.NetworkSystem.Fakes.ShimStringMessage">
            <summary>UnityEngine.Networking.NetworkSystem.StringMessage 的填充码类型</summary>
        </member>
        <member name="M:UnityEngine.Networking.NetworkSystem.Fakes.ShimStringMessage.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:UnityEngine.Networking.NetworkSystem.Fakes.ShimStringMessage.#ctor(UnityEngine.Networking.NetworkSystem.StringMessage)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="T:UnityEngine.Networking.NetworkSystem.Fakes.ShimStringMessage.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:UnityEngine.Networking.NetworkSystem.Fakes.ShimStringMessage.AllInstances.DeserializeNetworkReader">
            <summary>设置 StringMessage.Deserialize(NetworkReader reader) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Networking.NetworkSystem.Fakes.ShimStringMessage.AllInstances.SerializeNetworkWriter">
            <summary>设置 StringMessage.Serialize(NetworkWriter writer) 的 填充码</summary>
        </member>
        <member name="M:UnityEngine.Networking.NetworkSystem.Fakes.ShimStringMessage.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:UnityEngine.Networking.NetworkSystem.Fakes.ShimStringMessage.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:UnityEngine.Networking.NetworkSystem.Fakes.ShimStringMessage.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:UnityEngine.Networking.NetworkSystem.Fakes.ShimStringMessage.Constructor">
            <summary>设置 StringMessage.StringMessage() 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Networking.NetworkSystem.Fakes.ShimStringMessage.ConstructorString">
            <summary>设置 StringMessage.StringMessage(String v) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Networking.NetworkSystem.Fakes.ShimStringMessage.DeserializeNetworkReader">
            <summary>设置 StringMessage.Deserialize(NetworkReader reader) 的 填充码</summary>
        </member>
        <member name="P:UnityEngine.Networking.NetworkSystem.Fakes.ShimStringMessage.SerializeNetworkWriter">
            <summary>设置 StringMessage.Serialize(NetworkWriter writer) 的 填充码</summary>
        </member>
        <member name="T:UnityEngine.Networking.NetworkSystem.Fakes.StubAddPlayerMessage">
            <summary>UnityEngine.Networking.NetworkSystem.AddPlayerMessage 的存根类型</summary>
        </member>
        <member name="M:UnityEngine.Networking.NetworkSystem.Fakes.StubAddPlayerMessage.#ctor">
            <summary>初始化新实例</summary>
        </member>
        <member name="P:UnityEngine.Networking.NetworkSystem.Fakes.StubAddPlayerMessage.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="M:UnityEngine.Networking.NetworkSystem.Fakes.StubAddPlayerMessage.Deserialize(UnityEngine.Networking.NetworkReader)">
            <summary>设置 AddPlayerMessage.Deserialize(NetworkReader reader) 的 存根</summary>
        </member>
        <member name="F:UnityEngine.Networking.NetworkSystem.Fakes.StubAddPlayerMessage.DeserializeNetworkReader">
            <summary>设置 AddPlayerMessage.Deserialize(NetworkReader reader) 的 stub</summary>
        </member>
        <member name="M:UnityEngine.Networking.NetworkSystem.Fakes.StubAddPlayerMessage.InitializeStub">
            <summary>初始化 type StubAddPlayerMessage 的新实例</summary>
        </member>
        <member name="P:UnityEngine.Networking.NetworkSystem.Fakes.StubAddPlayerMessage.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:UnityEngine.Networking.NetworkSystem.Fakes.StubAddPlayerMessage.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="M:UnityEngine.Networking.NetworkSystem.Fakes.StubAddPlayerMessage.Serialize(UnityEngine.Networking.NetworkWriter)">
            <summary>设置 AddPlayerMessage.Serialize(NetworkWriter writer) 的 存根</summary>
        </member>
        <member name="F:UnityEngine.Networking.NetworkSystem.Fakes.StubAddPlayerMessage.SerializeNetworkWriter">
            <summary>设置 AddPlayerMessage.Serialize(NetworkWriter writer) 的 stub</summary>
        </member>
        <member name="T:UnityEngine.Networking.NetworkSystem.Fakes.StubEmptyMessage">
            <summary>UnityEngine.Networking.NetworkSystem.EmptyMessage 的存根类型</summary>
        </member>
        <member name="M:UnityEngine.Networking.NetworkSystem.Fakes.StubEmptyMessage.#ctor">
            <summary>初始化新实例</summary>
        </member>
        <member name="P:UnityEngine.Networking.NetworkSystem.Fakes.StubEmptyMessage.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="M:UnityEngine.Networking.NetworkSystem.Fakes.StubEmptyMessage.Deserialize(UnityEngine.Networking.NetworkReader)">
            <summary>设置 EmptyMessage.Deserialize(NetworkReader reader) 的 存根</summary>
        </member>
        <member name="F:UnityEngine.Networking.NetworkSystem.Fakes.StubEmptyMessage.DeserializeNetworkReader">
            <summary>设置 EmptyMessage.Deserialize(NetworkReader reader) 的 stub</summary>
        </member>
        <member name="M:UnityEngine.Networking.NetworkSystem.Fakes.StubEmptyMessage.InitializeStub">
            <summary>初始化 type StubEmptyMessage 的新实例</summary>
        </member>
        <member name="P:UnityEngine.Networking.NetworkSystem.Fakes.StubEmptyMessage.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:UnityEngine.Networking.NetworkSystem.Fakes.StubEmptyMessage.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="M:UnityEngine.Networking.NetworkSystem.Fakes.StubEmptyMessage.Serialize(UnityEngine.Networking.NetworkWriter)">
            <summary>设置 EmptyMessage.Serialize(NetworkWriter writer) 的 存根</summary>
        </member>
        <member name="F:UnityEngine.Networking.NetworkSystem.Fakes.StubEmptyMessage.SerializeNetworkWriter">
            <summary>设置 EmptyMessage.Serialize(NetworkWriter writer) 的 stub</summary>
        </member>
        <member name="T:UnityEngine.Networking.NetworkSystem.Fakes.StubErrorMessage">
            <summary>UnityEngine.Networking.NetworkSystem.ErrorMessage 的存根类型</summary>
        </member>
        <member name="M:UnityEngine.Networking.NetworkSystem.Fakes.StubErrorMessage.#ctor">
            <summary>初始化新实例</summary>
        </member>
        <member name="P:UnityEngine.Networking.NetworkSystem.Fakes.StubErrorMessage.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="M:UnityEngine.Networking.NetworkSystem.Fakes.StubErrorMessage.Deserialize(UnityEngine.Networking.NetworkReader)">
            <summary>设置 ErrorMessage.Deserialize(NetworkReader reader) 的 存根</summary>
        </member>
        <member name="F:UnityEngine.Networking.NetworkSystem.Fakes.StubErrorMessage.DeserializeNetworkReader">
            <summary>设置 ErrorMessage.Deserialize(NetworkReader reader) 的 stub</summary>
        </member>
        <member name="M:UnityEngine.Networking.NetworkSystem.Fakes.StubErrorMessage.InitializeStub">
            <summary>初始化 type StubErrorMessage 的新实例</summary>
        </member>
        <member name="P:UnityEngine.Networking.NetworkSystem.Fakes.StubErrorMessage.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:UnityEngine.Networking.NetworkSystem.Fakes.StubErrorMessage.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="M:UnityEngine.Networking.NetworkSystem.Fakes.StubErrorMessage.Serialize(UnityEngine.Networking.NetworkWriter)">
            <summary>设置 ErrorMessage.Serialize(NetworkWriter writer) 的 存根</summary>
        </member>
        <member name="F:UnityEngine.Networking.NetworkSystem.Fakes.StubErrorMessage.SerializeNetworkWriter">
            <summary>设置 ErrorMessage.Serialize(NetworkWriter writer) 的 stub</summary>
        </member>
        <member name="T:UnityEngine.Networking.NetworkSystem.Fakes.StubIntegerMessage">
            <summary>UnityEngine.Networking.NetworkSystem.IntegerMessage 的存根类型</summary>
        </member>
        <member name="M:UnityEngine.Networking.NetworkSystem.Fakes.StubIntegerMessage.#ctor">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:UnityEngine.Networking.NetworkSystem.Fakes.StubIntegerMessage.#ctor(System.Int32)">
            <summary>初始化新实例</summary>
        </member>
        <member name="P:UnityEngine.Networking.NetworkSystem.Fakes.StubIntegerMessage.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="M:UnityEngine.Networking.NetworkSystem.Fakes.StubIntegerMessage.Deserialize(UnityEngine.Networking.NetworkReader)">
            <summary>设置 IntegerMessage.Deserialize(NetworkReader reader) 的 存根</summary>
        </member>
        <member name="F:UnityEngine.Networking.NetworkSystem.Fakes.StubIntegerMessage.DeserializeNetworkReader">
            <summary>设置 IntegerMessage.Deserialize(NetworkReader reader) 的 stub</summary>
        </member>
        <member name="M:UnityEngine.Networking.NetworkSystem.Fakes.StubIntegerMessage.InitializeStub">
            <summary>初始化 type StubIntegerMessage 的新实例</summary>
        </member>
        <member name="P:UnityEngine.Networking.NetworkSystem.Fakes.StubIntegerMessage.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:UnityEngine.Networking.NetworkSystem.Fakes.StubIntegerMessage.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="M:UnityEngine.Networking.NetworkSystem.Fakes.StubIntegerMessage.Serialize(UnityEngine.Networking.NetworkWriter)">
            <summary>设置 IntegerMessage.Serialize(NetworkWriter writer) 的 存根</summary>
        </member>
        <member name="F:UnityEngine.Networking.NetworkSystem.Fakes.StubIntegerMessage.SerializeNetworkWriter">
            <summary>设置 IntegerMessage.Serialize(NetworkWriter writer) 的 stub</summary>
        </member>
        <member name="T:UnityEngine.Networking.NetworkSystem.Fakes.StubNotReadyMessage">
            <summary>UnityEngine.Networking.NetworkSystem.NotReadyMessage 的存根类型</summary>
        </member>
        <member name="M:UnityEngine.Networking.NetworkSystem.Fakes.StubNotReadyMessage.#ctor">
            <summary>初始化新实例</summary>
        </member>
        <member name="P:UnityEngine.Networking.NetworkSystem.Fakes.StubNotReadyMessage.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="M:UnityEngine.Networking.NetworkSystem.Fakes.StubNotReadyMessage.Deserialize(UnityEngine.Networking.NetworkReader)">
            <summary>设置 EmptyMessage.Deserialize(NetworkReader reader) 的 存根</summary>
        </member>
        <member name="F:UnityEngine.Networking.NetworkSystem.Fakes.StubNotReadyMessage.DeserializeNetworkReader">
            <summary>设置 EmptyMessage.Deserialize(NetworkReader reader) 的 stub</summary>
        </member>
        <member name="M:UnityEngine.Networking.NetworkSystem.Fakes.StubNotReadyMessage.InitializeStub">
            <summary>初始化 type StubNotReadyMessage 的新实例</summary>
        </member>
        <member name="P:UnityEngine.Networking.NetworkSystem.Fakes.StubNotReadyMessage.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:UnityEngine.Networking.NetworkSystem.Fakes.StubNotReadyMessage.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="M:UnityEngine.Networking.NetworkSystem.Fakes.StubNotReadyMessage.Serialize(UnityEngine.Networking.NetworkWriter)">
            <summary>设置 EmptyMessage.Serialize(NetworkWriter writer) 的 存根</summary>
        </member>
        <member name="F:UnityEngine.Networking.NetworkSystem.Fakes.StubNotReadyMessage.SerializeNetworkWriter">
            <summary>设置 EmptyMessage.Serialize(NetworkWriter writer) 的 stub</summary>
        </member>
        <member name="T:UnityEngine.Networking.NetworkSystem.Fakes.StubPeerInfoMessage">
            <summary>UnityEngine.Networking.NetworkSystem.PeerInfoMessage 的存根类型</summary>
        </member>
        <member name="M:UnityEngine.Networking.NetworkSystem.Fakes.StubPeerInfoMessage.#ctor">
            <summary>初始化新实例</summary>
        </member>
        <member name="P:UnityEngine.Networking.NetworkSystem.Fakes.StubPeerInfoMessage.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="M:UnityEngine.Networking.NetworkSystem.Fakes.StubPeerInfoMessage.Deserialize(UnityEngine.Networking.NetworkReader)">
            <summary>设置 PeerInfoMessage.Deserialize(NetworkReader reader) 的 存根</summary>
        </member>
        <member name="F:UnityEngine.Networking.NetworkSystem.Fakes.StubPeerInfoMessage.DeserializeNetworkReader">
            <summary>设置 PeerInfoMessage.Deserialize(NetworkReader reader) 的 stub</summary>
        </member>
        <member name="M:UnityEngine.Networking.NetworkSystem.Fakes.StubPeerInfoMessage.InitializeStub">
            <summary>初始化 type StubPeerInfoMessage 的新实例</summary>
        </member>
        <member name="P:UnityEngine.Networking.NetworkSystem.Fakes.StubPeerInfoMessage.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:UnityEngine.Networking.NetworkSystem.Fakes.StubPeerInfoMessage.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="M:UnityEngine.Networking.NetworkSystem.Fakes.StubPeerInfoMessage.Serialize(UnityEngine.Networking.NetworkWriter)">
            <summary>设置 PeerInfoMessage.Serialize(NetworkWriter writer) 的 存根</summary>
        </member>
        <member name="F:UnityEngine.Networking.NetworkSystem.Fakes.StubPeerInfoMessage.SerializeNetworkWriter">
            <summary>设置 PeerInfoMessage.Serialize(NetworkWriter writer) 的 stub</summary>
        </member>
        <member name="T:UnityEngine.Networking.NetworkSystem.Fakes.StubPeerListMessage">
            <summary>UnityEngine.Networking.NetworkSystem.PeerListMessage 的存根类型</summary>
        </member>
        <member name="M:UnityEngine.Networking.NetworkSystem.Fakes.StubPeerListMessage.#ctor">
            <summary>初始化新实例</summary>
        </member>
        <member name="P:UnityEngine.Networking.NetworkSystem.Fakes.StubPeerListMessage.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="M:UnityEngine.Networking.NetworkSystem.Fakes.StubPeerListMessage.Deserialize(UnityEngine.Networking.NetworkReader)">
            <summary>设置 PeerListMessage.Deserialize(NetworkReader reader) 的 存根</summary>
        </member>
        <member name="F:UnityEngine.Networking.NetworkSystem.Fakes.StubPeerListMessage.DeserializeNetworkReader">
            <summary>设置 PeerListMessage.Deserialize(NetworkReader reader) 的 stub</summary>
        </member>
        <member name="M:UnityEngine.Networking.NetworkSystem.Fakes.StubPeerListMessage.InitializeStub">
            <summary>初始化 type StubPeerListMessage 的新实例</summary>
        </member>
        <member name="P:UnityEngine.Networking.NetworkSystem.Fakes.StubPeerListMessage.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:UnityEngine.Networking.NetworkSystem.Fakes.StubPeerListMessage.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="M:UnityEngine.Networking.NetworkSystem.Fakes.StubPeerListMessage.Serialize(UnityEngine.Networking.NetworkWriter)">
            <summary>设置 PeerListMessage.Serialize(NetworkWriter writer) 的 存根</summary>
        </member>
        <member name="F:UnityEngine.Networking.NetworkSystem.Fakes.StubPeerListMessage.SerializeNetworkWriter">
            <summary>设置 PeerListMessage.Serialize(NetworkWriter writer) 的 stub</summary>
        </member>
        <member name="T:UnityEngine.Networking.NetworkSystem.Fakes.StubReadyMessage">
            <summary>UnityEngine.Networking.NetworkSystem.ReadyMessage 的存根类型</summary>
        </member>
        <member name="M:UnityEngine.Networking.NetworkSystem.Fakes.StubReadyMessage.#ctor">
            <summary>初始化新实例</summary>
        </member>
        <member name="P:UnityEngine.Networking.NetworkSystem.Fakes.StubReadyMessage.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="M:UnityEngine.Networking.NetworkSystem.Fakes.StubReadyMessage.Deserialize(UnityEngine.Networking.NetworkReader)">
            <summary>设置 EmptyMessage.Deserialize(NetworkReader reader) 的 存根</summary>
        </member>
        <member name="F:UnityEngine.Networking.NetworkSystem.Fakes.StubReadyMessage.DeserializeNetworkReader">
            <summary>设置 EmptyMessage.Deserialize(NetworkReader reader) 的 stub</summary>
        </member>
        <member name="M:UnityEngine.Networking.NetworkSystem.Fakes.StubReadyMessage.InitializeStub">
            <summary>初始化 type StubReadyMessage 的新实例</summary>
        </member>
        <member name="P:UnityEngine.Networking.NetworkSystem.Fakes.StubReadyMessage.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:UnityEngine.Networking.NetworkSystem.Fakes.StubReadyMessage.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="M:UnityEngine.Networking.NetworkSystem.Fakes.StubReadyMessage.Serialize(UnityEngine.Networking.NetworkWriter)">
            <summary>设置 EmptyMessage.Serialize(NetworkWriter writer) 的 存根</summary>
        </member>
        <member name="F:UnityEngine.Networking.NetworkSystem.Fakes.StubReadyMessage.SerializeNetworkWriter">
            <summary>设置 EmptyMessage.Serialize(NetworkWriter writer) 的 stub</summary>
        </member>
        <member name="T:UnityEngine.Networking.NetworkSystem.Fakes.StubRemovePlayerMessage">
            <summary>UnityEngine.Networking.NetworkSystem.RemovePlayerMessage 的存根类型</summary>
        </member>
        <member name="M:UnityEngine.Networking.NetworkSystem.Fakes.StubRemovePlayerMessage.#ctor">
            <summary>初始化新实例</summary>
        </member>
        <member name="P:UnityEngine.Networking.NetworkSystem.Fakes.StubRemovePlayerMessage.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="M:UnityEngine.Networking.NetworkSystem.Fakes.StubRemovePlayerMessage.Deserialize(UnityEngine.Networking.NetworkReader)">
            <summary>设置 RemovePlayerMessage.Deserialize(NetworkReader reader) 的 存根</summary>
        </member>
        <member name="F:UnityEngine.Networking.NetworkSystem.Fakes.StubRemovePlayerMessage.DeserializeNetworkReader">
            <summary>设置 RemovePlayerMessage.Deserialize(NetworkReader reader) 的 stub</summary>
        </member>
        <member name="M:UnityEngine.Networking.NetworkSystem.Fakes.StubRemovePlayerMessage.InitializeStub">
            <summary>初始化 type StubRemovePlayerMessage 的新实例</summary>
        </member>
        <member name="P:UnityEngine.Networking.NetworkSystem.Fakes.StubRemovePlayerMessage.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:UnityEngine.Networking.NetworkSystem.Fakes.StubRemovePlayerMessage.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="M:UnityEngine.Networking.NetworkSystem.Fakes.StubRemovePlayerMessage.Serialize(UnityEngine.Networking.NetworkWriter)">
            <summary>设置 RemovePlayerMessage.Serialize(NetworkWriter writer) 的 存根</summary>
        </member>
        <member name="F:UnityEngine.Networking.NetworkSystem.Fakes.StubRemovePlayerMessage.SerializeNetworkWriter">
            <summary>设置 RemovePlayerMessage.Serialize(NetworkWriter writer) 的 stub</summary>
        </member>
        <member name="T:UnityEngine.Networking.NetworkSystem.Fakes.StubStringMessage">
            <summary>UnityEngine.Networking.NetworkSystem.StringMessage 的存根类型</summary>
        </member>
        <member name="M:UnityEngine.Networking.NetworkSystem.Fakes.StubStringMessage.#ctor">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:UnityEngine.Networking.NetworkSystem.Fakes.StubStringMessage.#ctor(System.String)">
            <summary>初始化新实例</summary>
        </member>
        <member name="P:UnityEngine.Networking.NetworkSystem.Fakes.StubStringMessage.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="M:UnityEngine.Networking.NetworkSystem.Fakes.StubStringMessage.Deserialize(UnityEngine.Networking.NetworkReader)">
            <summary>设置 StringMessage.Deserialize(NetworkReader reader) 的 存根</summary>
        </member>
        <member name="F:UnityEngine.Networking.NetworkSystem.Fakes.StubStringMessage.DeserializeNetworkReader">
            <summary>设置 StringMessage.Deserialize(NetworkReader reader) 的 stub</summary>
        </member>
        <member name="M:UnityEngine.Networking.NetworkSystem.Fakes.StubStringMessage.InitializeStub">
            <summary>初始化 type StubStringMessage 的新实例</summary>
        </member>
        <member name="P:UnityEngine.Networking.NetworkSystem.Fakes.StubStringMessage.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:UnityEngine.Networking.NetworkSystem.Fakes.StubStringMessage.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="M:UnityEngine.Networking.NetworkSystem.Fakes.StubStringMessage.Serialize(UnityEngine.Networking.NetworkWriter)">
            <summary>设置 StringMessage.Serialize(NetworkWriter writer) 的 存根</summary>
        </member>
        <member name="F:UnityEngine.Networking.NetworkSystem.Fakes.StubStringMessage.SerializeNetworkWriter">
            <summary>设置 StringMessage.Serialize(NetworkWriter writer) 的 stub</summary>
        </member>
    </members>
</doc>
